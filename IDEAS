=== 2017.09.08

#riehl-shulman

Q: Reading ; What is the status of (2.2)? Is it an axiom
in the system, or is it a provable property of the type system that
merely happens to be written as an inference rule, i.e. like cut
elimination?
A: ???

Q: In figure 3, why do premises \phi and \psi appear downstairs in the
fourth and fifth rules listed, when they already are assumed to follow
from \Xi | \Phi?
A: ???

Q: In the third rule in figure 4, why isn't *s* constrained to somehow
live in \psi?
A: I guess it's because it's not that f needs something to live in a
shape to accept it as an argument; it's that f can only give answers
for things that live inside \psi. We're asking that s is defined on
the whole cube I, and we can consider the restriction of the cube to
\psi before feeding it to f. Thus, I might better ask:

Q: In the third rule in figure 4, why isn't s allowed to be defined
merely on \psi? Why must it be defined on the whole cube I?
A: Oh, I see --- it's because the arguments to the function are merely
cube expressions, not general terms. There's no way to even specify a
cube term that's something other than a tuple of projections.

=== 2017.09.09

#riehl-shulman

Q: How do Joyal disks [Joyal 97] lead to oo-categories?
A: ???

Q: In Axiom 4.6, we're not making any additional assumption on
t : I | \phi |- \psi
by saying it's a cofibration, right? My belief is that
\psi is just a cofibration by being of that syntactic class.
A: ???

=== 2017.09.10

Q: Is the Finster-Mimram definition of weak omega-categories connected in a simple way to Joyal's theta-category?
A: ???

=== 2017.09.11

Q: Where is the cubical stuff in the agda source?
A:
I see IZERO in
agda//src/full/Agda/TypeChecking/Monad/Builtin.hs
builtinIZero :: String = "IZERO"
primIZero :: TCM Term = getBuiltin builtinIZero

Q: Where are some exciting uses of primIZero?
A:
agda//src/full/Agda/TypeChecking/Primitive.hs

Q: Where is haskell-mode docs?
A: http://haskell.github.io/haskell-mode/manual/latest/

Q: More emacs advice about haskell dev?
A:
https://github.com/serras/emacs-haskell-tutorial/blob/master/tutorial.md

Q: What's the thing I want to bind to M-.?
A:
haskell-mode-jump-to-def

It seemed to take a long-ass time the first time I ran it, dunno why.

Q: Where are the sources to, like, the haskell base library including
the prelude Control.Monad and everything?
A: I thought maybe in
/usr/local/Cellar/ghc/7.10.3b/lib/ghc-7.10.3/
(which
$ brew list ghc
told me about)
but I only see .hi files.
...
Seems to exist online at
http://git.haskell.org/ghc.git/tree/refs/heads/master:/libraries/base/Control

Q: Transportation to the vicinity of wesleyan?
A: "Vermonter" amtrak + M-link bus maybe?
Hotel situation looks real shitty.

Q: How can I git blame one line of a file?
A:
do like
$ git blame Primitive.hs -L404,+1
