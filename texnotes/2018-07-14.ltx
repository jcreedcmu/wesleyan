\documentclass{article}
\usepackage[tmargin=0.05in, bmargin=0.05in]{geometry}
\input{theorem}
\input{prooftree}
\usepackage{relsize}
\usepackage{stmaryrd}
\usepackage{latexsym}
\usepackage{yfonts}
\usepackage{amsmath}
\usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
\usepackage{tikz}
\usetikzlibrary{calc,arrows,cd,decorations.pathreplacing}
\usetikzlibrary{decorations.pathmorphing}
\usepackage{tcolorbox}
\tcbuselibrary{breakable}
\usepackage{listings}
\lstset{basicstyle=\ttfamily\footnotesize,breaklines=true}

\def\lint{{\textstyle\int}}
\def\isopen{\textcolor{orange}{\mathlarger{\mathlarger{\mathlarger{\textbf ?}}}}}
\def\isok{\textcolor{green}{\mathlarger{\mathlarger{\mathlarger{\checkmark}}}}}
\def\isbad{\textcolor{red}{\mathlarger{\mathlarger{\mathlarger{\x}}}}}
\def\chave{\eqno \textcolor{blue}{\hbox{have}}}
\def\cset{\eqno \textcolor{green}{\hbox{set}}}
\def\cwant{\eqno \textcolor{orange}{\hbox{want}}}
\def\gol{\sqsubset}
\def\gor{\sqsupset}

\def\sp{\bullet}
\def\ot{\leftarrow}
\def\prequiv{\dashv\vdash}
\def\fdom{{\mathbf{d}f}}
\def\fcod{{\mathbf{e}f}}
\def\fidom{\mathbf{\bar d}f}
\def\ficod{\mathbf{\bar e}f}

\def\thn{\mathrel|}
\def\coe{\mathsf{coe}}
\def\bpush{\mathbf{push}}
\def\bpull{\mathbf{pull}}

\def\wo{\setminus}
\def\fA{\mathsf{A}}
\def\fC{\mathsf{C}}
\def\fX{\mathsf{X}}
\def\ff{\mathsf{f}}
\def\fm{\mathsf{m}}
\def\rspan{\mathsf{Span}}
% \def\El#1{\mathsf{El}({#1})}
\def\El#1{\ulcorner{#1}\urcorner}
\def\U{\mathsf{U}}
\def\uu{\mathsf{u}}
\def\uni{\U}
\def\mor#1#2{#1 \to \underline{#2}}

\def\ridp{\mathsf{idp}}
\def\ssem#1{\langle\!\langle{#1}\rangle\!\rangle}

\definecolor{lred}{rgb}{0.95,0.8,0.8}
\definecolor{cyan}{rgb}{0.80,0.95,0.95}
\definecolor{lorange}{rgb}{0.95,0.90,0.80}
\definecolor{bluegray}{rgb}{0.6,0.6,0.85}
\definecolor{lgray}{gray}{0.9}
\newtcolorbox{declbox}{colframe=lred,colback=lred,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}
\newtcolorbox{thmbox}{colframe=cyan,colback=cyan,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}
\newtcolorbox{defnbox}{colframe=lorange,colback=lorange,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}
\newtcolorbox{tangentbox}{colframe=lgray,colback=lgray,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}

\input{linear}
\def\rpath#1{[#1]}
\def\rfst{\mathsf{fst}\,}
\def\rsnd{\mathsf{snd}\,}
\def\bunfold{\mathbf{unfold}}
\def\bfold{\mathbf{fold}}
\def\susp#1{\langle {#1} \rangle}
\def\ssusp#1{\langle\!\langle {#1} \rangle\!\rangle}
\def\dto{\mathrel{\dot\to}}
\def\dns{{\downarrow}}
\def\ups{{\uparrow}}
\def\sprov{\Vdash}
\def\signat{{\color{red}\Sigma}}
\def\ep#1{\underline{#1}}
\def\wat{\mathbin{@}}
\def\wwat{\mathbin{\underline\wat}}
\def\cn{{:}}
\def\dv{{\div}}
\def\ww{{\mathsf w}}
\def\base{{\textfrak b}}

\def\munit{I}
\def\tt{{\mathsf t}}
\def\ii{{\mathbb I}}
\def\T{\mathbb{T}}
\def\tw{\mathsf{Tw}}
\def\sw#1{^{#1}_{#1}}
\def\TP{\mathbf{TPre}}
\def\pp{\textsf{\textbf p}}
\def\nn{{\mathsf n}}
\def\PP{\textsf{\textbf P}}
\def\NN{\textsf{\textbf N}}
\def\zz{{\mathsf z}}
\def\sem#1{[\![#1]\!]}
\def\usem#1{\lceil\!\!\lceil{#1}\rceil\!\!\rceil}
\def\zem#1{\langle\!\langle#1\rangle\!\rangle}
\def\col#1{{\mathsf{C}}_{#1}}
\def\lax{\mathop\bigcirc}
\def\rjust{\mathsf{just}}
\def\rcvt{\mathsf{cvt}}
\def\rtype{\mathsf{type}}
\def\rdtype{\mathsf{disc}}
\def\rkind{\mathsf{kind}}
\def\rmode{\mathsf{mode}}
\def\rprel{\mathbf{Prel}}
\def\rrfam{\mathbf{Rfam}}
\def\rset{\mathbf{Set}}
\def\rfinset{\mathbf{FinSet}}
\def\rrel{\mathbf{Rel}}
\def\rcat{\mathbf{Cat}}
\def\rfam{\mathbf{Fam}}
\def\binj{\mathbf{inj}}
\def\rid{\mathsf{id}}
\def\rtrue{\mathrel\mathrm{true}}
\def\pbck{\ar[dr, phantom, pos=0, "\lrcorner"]}
\def\bpbck{\ar[ddrr, phantom, pos=0, "\lrcorner"]}
\def\erule#1#2{\begin{prooftree}#1\justifies #2\end{prooftree}}
\def\lpar{\bindnasrepma}
\def\lamp{\binampersand}
\def\btwo{\mathbf{2}}
\def\bone{\mathbf{1}}

\newarrow {Equiv} =====
\def\FinSet{\mathbf{FinSet}}
\def\x{\times}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\def\mapt{\ar[ddd,mapsto,shorten <=2em, shorten >=2em]}
\def\A{\mathbf{A}}
\def\B{\mathbf{B}}
\def\C{\mathbf{C}}
\def\G{\mathbf{G}}
\def\D{\mathbf{D}}
\def\DD{\mathbb{D}}
\def\E{\mathbf{E}}
\def\M{\mathbf{M}}
\def\pair#1#2{\langle#1,#2\rangle}
\def\ltri{{\lhd}}
\def\rtri{{\rhd}}
\def\tri{\rhd}
\def\ll{{<}}
\def\rr{{>}}
\def\cc{\mathsf{c}}
\def\dd{\mathsf{d}}
\def\o{\circ}
\def\rctx{\,\mathsf{ctx}}
\def\rdctx{\,\mathsf{dctx}}
\def\del{\partial}
\def\also#1{\ \textcolor{blue}{\celse #1}}
\newcounter{nodemaker}
\setcounter{nodemaker}{0}
\def\twocell#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift left=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift right=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\twocellswap#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift right=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift left=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\author{Jason Reed}
\definecolor{fib}{HTML}{ff7f00}
\definecolor{green}{HTML}{007f00}
\definecolor{red}{HTML}{df3f3f}
\definecolor{opfib}{HTML}{007fff}

% For lightening colors I used
% http://trycolors.com/ 6 parts white to 1 part color
\definecolor{opfibl}{HTML}{DBEDFF}
\definecolor{greenl}{HTML}{DBEDDB}
\definecolor{redl}{HTML}{FAE4E4}
\def\njudge#1{\fcolorbox{opfib}{white}{#1}}
\def\nrule#1{\fcolorbox{white}{opfibl}{#1}}
\def\neqn#1{\fcolorbox{white}{redl}{#1}}



\def\judge#1{\vskip 2em\noindent \njudge{$#1$}\vskip 0.5em\noindent}
\def\rule#1{\vskip 2em \noindent \nrule{$#1$}\vskip 0.5em\noindent}
\def\eqn#1{\vskip 2em \noindent \neqn{$#1$}\vskip 0.5em\noindent}
\def\prof{\nrightarrow}
\def\tensor{\otimes}
\def\htensor{\mathrel{\hat\otimes}}
\def\lol{\multimap}
\def\hlol{\mathrel{\hat\multimap}}
\def\wtf{{\color{red}???}}

\def\re{\mathbf{E}}
\def\sh{\sharp}
\def\shp{\mathrel{\sharp}}
\def\zero{\texttt{0}}
\begin{document}

\def\
\tikzset{
   commutative diagrams/.cd,
   arrow style=tikz,
   diagrams={>=stealth}}

\section{A Digression on Ordered Logic}

While I'm at FLoC, there's something not-very-main-work-related I'm
curious about. Suppose you take the language of ordered logic,
and, say that propositions are interpreted at
pairs of worlds, and

\[   (A \rrto B)(u, v) = \forall x . A(v, x) \to B(u, x)\]
\[   (A \llto B)(u, v) = \forall x . A(x, u) \to B(x, v)\]
\[   (A \bullet B)(u, v) = \exists x . A(u, x) \land B(x, v)\]

and contexts in the evident way interpreting comma as bullet,
as sequents \[\Omega \prov A\] as

\[ \forall uv . \Omega(u, v) \to A(u, v) \]

Do you then get exactly the proof theory of ordered logic? The
main suspicious thing I think I'd need to establish for completeness
is that when you end up with a state in which you have
$\Delta(u, v)$ on the left but also leftover junk from
previous applications of synchronous rules,
the leftover junk never helps you prove anything you shouldn't.

Soundness of this interpretation, on the other hand, should
be pretty easy.
\begin{lemma}
If \(\Omega \prov A\), then
\( \forall uv . \Omega(u, v) \to A(u, v) \).
\end{lemma}

\begin{proof}
Asynchronous rules pretty much come for free.
Let's look at the synchronous rules:

We can transform
\[
\erule
{\Omega_2 \prov A \qquad \Omega_1, B, \Omega_3 \prov C}
{\Omega_1, A \rrto B, \Omega_2, \Omega_3 \prov C}
\]
into
$\Omega(u, v), A(v, w) \prov B(u, w)$
\[
\erule
{\[
\[
\justifies
\Omega_2(w, y) \prov A(w, y)
\]
\[
\justifies
 \Omega_1(u, v),B(v, y), \Omega_3(y, z) \prov C(u, z)
\]
\justifies
\Omega_1(u, v),  A(w, y) \to B(v, y), \Omega_2(w, y), \Omega_3(y, z) \prov C(u, z)
\]}
{\Omega_1(u, v), \forall x . A(w, x) \to B(v, x), \Omega_2(w, y), \Omega_3(y, z) \prov C(u, z)}
\]
And $\llto$ and $\bullet$ go pretty similarly.
\cqed
\end{proof}

Aha! I see why completeness fails. This is untethered/simpson-style ordered logic, as opposed to tethered/pfenning-davies.
With additives, I can give a shibboleth proposition that distinguishes them:
\[A \llto B \rrto 0, B \prov (A \llto 0) \bullet B\]
Here's why it fails in real ordered logic. Assume $A$ and $B$ are positive atoms.
So focus on $A \llto B \rrto 0$ fails because we don't have $A$ yet. We must focus on the right, so we have
to consume the $B$. Then we have the goal $A, A \llto B \rrto 0 \prov 0$, and although we can capture the $A$,
we have no $B$.

However, we can prove

\[
\erule
{\[
\[
\[
\[
\[
\[
\[
\justifies
 B^v_w \prov B^v_w
\]
\[
\using \textcolor{blue}{0L}
\justifies
0^t_w \prov  0^t_v
\]
\justifies
 B^v_w \to 0^t_w, B^v_w \prov  0^t_v
\]
\using \textcolor{blue}{\forall L} \justifies
\forall x . B^v_x \to 0^t_x, B^v_w \prov  0^t_v
\]
\justifies
( B \rrto 0)^t_v, B^v_w \prov  0^t_v
\]
\[
\justifies
A^t_u \prov A^t_u
\]
\justifies
A^t_u, (A \llto B \rrto 0)^u_v, B^v_w \prov  0^t_v
\]
\justifies
(A \llto B \rrto 0)^u_v, B^v_w \prov (A \llto 0)^u_v
\]
\[
 \justifies B^v_w \prov B^v_w
\]
\justifies
(A \llto B \rrto 0)^u_v, B^v_w \prov (A \llto 0)^u_v \x B^v_w
\]}
{(A \llto B \rrto 0)^u_v, B^v_w \prov ((A \llto 0) \bullet B)^u_w}
\]

Where the critical inferences are the highlighted $0L$ (which
relies on the fact that
$0$ at any pair of worlds is the same) and the
$\forall L$, which is a  tethering-forbidden
choice of $x = w$ which is outside the interval $[t,v]$.

\subsection{Tethering}
\def\tok{\hat \#}
So how would I imagine the tethered version looks?
I can throw a linear token in the context that indicates
the current active range.
An unfocused sequent like
\[\Delta \prov A\]
will get interpreted as
\[\Delta^u_v,  \tok^u_v \prov A^u_v \]
So I can define shifts as
\[ (\ups P)^u_v = \exists t w . [u,v] \subseteq [t,w] \land  \tok^u_v \tensor P^u_v \]
\[ (\dns N)^u_v = \forall t w. [u,v] \subseteq [t,w] \to  \tok^t_w \lol P^{tu}_{wv} \]
and connectives like
\[ ( P \rrto N)^{tu}_{wv} = \forall x \in [v, w] . P^{tv}_{wx} \to  N^{tu}_{wx} \]
\[ ( P \llto N)^{tu}_{wv} = \forall x \in [t, u] . P^{tx}_{wu} \to  N^{tx}_{wv} \]
\[ (P \tensor P)^{tu}_{wv} = \exists x \in [u, v] . P^{tu}_{wx} \land P^{tx}_{wv} \]

Does this work? Let me do a toy derivation of $\ups (\dns N \tensor \dns N)$ or something.

\[
\erule
{\[
\justifies
\Delta^t_w \prov  (\dns N \tensor \dns N)^t_w
\]}
{\Delta^t_w, \tok^t_w \prov \ups (\dns N \tensor \dns N)^t_w }
\]
... wait I'm getting type errors all over the place.

Is it really only the conclusion truth judgment
that needs the four-argument translation?

Let's start over. Maybe positives take two and negatives take four.
We expect the translation of a stable sequent to look canonically like
\[[u, v] \subset [t, w], (\dns \Delta)^u_v,  \tok^t_w \prov (\ups P)^{tu}_{wv} \]
and allow permitting junk to exist outside of $[u, v]$ should be acceptable.

I try to define shifts as
\[ (\ups P)^{tu}_{wv} = \ups (\tok^t_w \tensor P^u_v) \]
\[ (\dns N)^u_v = \dns \forall t w. [u,v] \subset [t,w] \to  \tok^t_w \lol N^{tu}_{wv} \]
and connectives like
\[ ( P \rrto N)^{tu}_{wv} = \forall x \in [v, w] . P^{v}_{x} \to  N^{tu}_{wx} \]
\[ ( P \llto N)^{tu}_{wv} = \forall x \in [t, u] . P^{x}_{u} \to  N^{tx}_{wv} \]
\[ (P \tensor P)^{u}_{v} = \exists x \in [u, v] . P^{u}_{x} \land P^{x}_{v} \]
If I interpret $\subseteq$ as involving a transitive, nonreflexive relation $<$
between worlds, then I think I get the right behavior.

For what happens when we try to focus on $P \rrto N$? Our choice of
$t,w$ is forced by whatever $\tok$ currently is. We are appropriately
constrained to choose a proposition to focus on that's `in the
currently available window', though. Okay, at this stage I'm actually
focused on $(P \rrto N)^{tu}_{wv} = \forall x\in[v, w]. P^v_x \to N^{tu}_{wx}$.
I have to choose an $x$ that doesn't exceed or equal
$w$, and which also doesn't go `backwards in time'. Choosing the last
world before $w$ corresponds to grabbing the whole context to the
right. We now have to prove (in right focus) $P^v_x$ which should
correspond to actually carrying out the proof in the appropriate
subset of the context, since by the time we blur into $N$, the token
we throw back will be tailored to that subset. On the left
side, we have $N^{tu}_{wx}$, which is the right thing. The only dangling
thread is the fact that by the time we leave focus, there's extra junk in
the context that represented proof goals that we {\em used} to have.
So we end up with a situation like
\[
\begin{tikzcd}
  u \ar[r, "P \rrto N"] \ar[rr, bend right, "N"'] & v \ar[r, "P"]& w
\end{tikzcd}
\]
where we still have smaller steps between worlds labelled by old
inhabitants of the context, and bigger jumps labelled by `newer'
inhabitants, as we proceed up the deduction tree.

Can I inductively accommodate this by thinking about the completeness theorem like so?
Let $\Omega$ be a (source language) ordered logic context, and let $\Delta$ be a
(target language) context of world variables and translated propositions and such.
We define a simulation relation $\Delta \sim^u_v \Omega$ if there exists
a way of `reading' $\Delta$ from $u$ to $v$ as denoting $\Omega$.

\subsection{Digression}
Maybe I can get away with organizing things like
I try to define shifts as
\[ (\ups P)^{tu}_{wv} = \ups ([u,v] \subset [t,w] \land \tok^t_w \tensor P^u_v) \]
\[ (\dns N)^u_v = \dns (\forall t w. [u,v] \subset [t,w] \to  \tok^t_w \lol N^{tu}_{wv}) \]
and connectives like
\[ ( P \rrto N)^{tu}_{wv} = \forall x . P^{v}_{x} \to  N^{tu}_{wx} \]
\[ ( P \llto N)^{tu}_{wv} = \forall x . P^{x}_{u} \to  N^{tx}_{wv} \]
\[ (P \tensor P)^{u}_{v} = \exists x . P^{u}_{x} \land P^{x}_{v} \]
and maybe prove that
\[P^u_v \prequiv P^u_v \land u < v\]
\[N^{tu}_{wv} \prequiv t < u \to N^{tu}_{wv}\]
\[N^{tu}_{wv} \prequiv v < w \to N^{tu}_{wv}\]
which really just amounts to
\[P^u_v \prov u < v\]
\[t < u \to N^{tu}_{wv} \prov N^{tu}_{wv}  \]
\[v < w \to N^{tu}_{wv} \prov N^{tu}_{wv}  \]

Well, we can prove
\[\exists x . P^u_x\land P^x_v  \prov u < v\]
by i.h. and transitivity. How about
\[t < u \to (\forall x . P^{v}_{x} \to  N^{tu}_{wx}) \prov \forall x . P^{v}_{x} \to  N^{tu}_{wx}  \]
? By induction hypotheses, we could also equivalently try to prove
\[t < u \to (\forall x . P^{v}_{x} \to  N^{tu}_{wx}) \prov \forall x . t < u \to P^{v}_{x} \to  N^{tu}_{wx}  \]
Oh, this is the easy half. One of the two interacting cases is
\[v < w \to (\forall x . P^{v}_{x} \to  N^{tu}_{wx}) \prov \forall x . P^{v}_{x} \to  N^{tu}_{wx}  \]
where we use i.h. to prove equivalently
\[v < w \to (\forall x . P^{v}_{x} \to  N^{tu}_{wx}) \prov \forall x . v \le x \to x \le w \to P^{v}_{x} \to  N^{tu}_{wx}  \]
and we use transitivity to achieve that.

\subsubsection{Thinking about Completeness Proof}

\begin{lemma}[Completeness]\ \\
1. Suppose for all readings $\Delta\sim^u_v \Omega$ that we have $\Delta \prov [P^u_v]$.
Then $\Omega \prov [P]$.\\
2. Suppose for all pairs of readings $\Delta_1\sim^t_u \Omega_1$ and
$\Delta_2 \sim^v_w \Omega_2$
we have $\Delta_1, \Delta_2 [N^{tu}_{wv}]\prov Q^t_w$. Then $\Omega_1  [N] \Omega_2 \prov Q$.
\end{lemma}

\begin{proof}
We can prove (2) by induction on $N$. Suppose we're dealing with $P \rrto N$.
We get to assume that for any $\Delta_1, \Delta_2$ with $\Delta_1 \sim ^t_u \Omega_1$ and
some $\Delta_{2} \sim^v_w \Omega_2$ that we have
\[\Delta_1, \Delta_{2}[ (P\rrto N)^{tu}_{wv}] \prov Q^t_w\]
i.e.
\[\Delta_1, \Delta_{2}[ \forall x \in [v, w] . P^{v}_{x} \to  N^{tu}_{wx} ] \prov Q^t_w\]

The rule we want to aim to use is
\[
\erule
{\Omega_{2a} \prov [P] \qquad \Omega_1, [N], \Omega_{2b} \prov Q}
{\Omega_1[P\rrto N]\Omega_{2a}\Omega_{2b} \prov Q}
\]
so, towards using the i.h., we want to prove ... no, this isn't right.
\cqed
\end{proof}

Is it
\begin{lemma}[Completeness]\ \\
1. If there exists a reading $\Delta\sim^u_v \Omega$ such that $\Delta \prov [P^u_v]$,
then $\Omega \prov [P]$.\\
2. If $\Delta_1\sim^t_u \Omega_1$ and
$\Delta_2 \sim^v_w \Omega_2$ and
 $\Delta_1, \Delta_2 [N^{tu}_{wv}]\prov Q^t_w$, then $\Omega_1  [N] \Omega_2 \prov Q$.
\end{lemma}
\begin{proof}
\end{proof}
No, this isn't right either.

Maybe we can do
\begin{lemma}[Completeness]\ %
\begin{enumerate}
\item If $\Delta \prov [P^u_v]$, then there exists an $\Omega$ with $\Delta \sim^u_v \Omega$
and $\Omega \prov [P]$.
\item If $\Delta [N^{tu}_{wv}]\prov Q^t_w$ then at least one of the following is true:
\begin{enumerate}
\item there exist
  $\Omega_1$ and $\Omega_2$ such that
  \[\Delta \sim^t_u \Omega_1 \qquad \Delta \sim^v_w \Omega_2 \qquad \Omega_1  [N] \Omega_2 \prov Q\]
\item there exists $\Omega$ such that
$\Delta \sim^t_w \Omega$ and $\Omega \prov Q$
\end{enumerate}
\item If $\Delta, \tok^t_w \prov Q^t_w$, then
there exists $\Omega$ such that
$\Delta \sim^t_w \Omega$ and $\Omega \prov Q$.
\end{enumerate}
\end{lemma}
\begin{proof}
\item[Case:] $\rrto$\\
 We have a derivation of
\[
\erule
{\[
\Delta \prov [ P^{v}_{x}] \qquad \Delta[ N^{tu}_{wx} ] \prov Q^t_w
\justifies
\Delta[ P^{v}_{x} \to  N^{tu}_{wx} ] \prov Q^t_w
\] \qquad x \in [v, w]}
{\Delta[ \forall x \in [v, w] . P^{v}_{x} \to  N^{tu}_{wx} ] \prov Q^t_w}
\]
Using the induction hypothesis on $P$ and $N$, in case $(a)$ for $N$,
we find $\Omega_1, \Omega_2, \Omega_3$ such that
\[\Delta \sim^v_x \Omega_2 \qquad \Delta \sim^t_u \Omega_1  \qquad \Delta \sim^x_w \Omega_3\]
and
\[\Omega_2 \prov [P] \qquad \Omega_1  [N] \Omega_3\prov Q\]
so it's straightforward to derive
\[
\erule
{\Omega_{2} \prov [P] \qquad \Omega_1, [N], \Omega_{3} \prov Q}
{\Omega_1[P\rrto N]\Omega_{2}\Omega_{3} \prov Q}
\]
and output the contexts $\Omega_1$ and $\Omega_2, \Omega_3$ noting that we can
establish that $\Delta\sim^v_w \Omega_2, \Omega_3$.

In case $(b)$ for $N$, we immediately return the same reading.
\item[Case:] $\ups P$\\
\[
\erule
{\[
\justifies
\Delta, \tok^t_w, P^u_v \prov Q^t_w
\]}
{\Delta[ \ups (\tok^t_w \tensor P^u_v) ] \prov Q^t_w}
\]
By i.h., there is some reading of $(\Delta, P^u_v) \sim^t_w Q^t_w$.
It either uses $P^u_v$ or it doesn't. If it does, it breaks up
into two smaller readings $\Delta \sim^t_u \Omega_1$
and
$\Delta \sim^v_w \Omega_2$, and so we have $\Omega_1, P, \Omega_2 \prov Q$.
From that we can derive $\Omega_1[\ups P]\Omega_2 \prov Q$ as required.
Otherwise, it doesn't use $P^u_v$, and so we just know we have
a reading $\Delta \sim^t_w \Omega$ and $\Omega \prov Q$, which
also suffices for the conclusion.
\cqed
\end{proof}


\section{Serious Problems With Propositions}

I think this may work for just ordered logic by itself, but
I don't really understand how many kripke arguments are needed for propositions.
My best guesses so far are like


\[\begin{tabular}{r@{ }c@{ }c@{ }l}
   Props&$A$&$::=$&$[\alpha]A \celse \cdots$\\
  Pos. Actions&$\alpha$&$::=$&$?A \celse \alpha \cdot \alpha $
$ \celse \alpha \rrto \alpha \celse \alpha \llto \alpha\celse \cdots$\\
\end{tabular}\]

\def\olt{\overleftarrow}
\def\ort{\overrightarrow}
Use a token $\tok^t_w$. The sequent $A, \alpha, B \prov C$ means for example

\[u < v, \olt A_u, \olt \alpha^u_v, \olt B_v, \tok^u_v \prov \ort C\]

and define translations $\olt\alpha^u_v$
and $\ort\alpha$ and $\olt A_v$ and $\ort A$ by
\[\begin{tabular}{cl}
$A$ or $\alpha$ & $\olt A_v ; \ort A$  or $\olt \alpha^u_v ; \ort \alpha$\\
$[\alpha] A$
& \(\forall tw . \tok^t_w \lol \forall x \in [v, w].
(\tok^v_x \lol \ort \alpha) \to (\tok^t_w \tensor \olt A_x) \)
 \\
& $\exists tw . \tok^t_w \tensor \forall x > w. \olt \alpha^w_x \to \tok^t_x \lol \ort A $
\\
$\alpha \rrto  \beta$
& \(\forall tw . \tok^t_w \lol \forall x \in [v, w].
(\tok^v_x \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^u_x) \)
 \\
& $\exists tw . \tok^t_w \tensor \forall x > w. \olt \alpha^w_x \to \tok^t_x \lol \ort \beta $
\\
$\alpha \llto \beta$
& \(\forall tw . \tok^t_w \lol \forall x \in [t, u].
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \)
  \\
& $\exists tw . \tok^t_w \tensor \forall x < t. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta $
\end{tabular}
\]

And some nice properties I might try to guess and check by trying to reason about identity
and cut are
\[\exists u . \olt A_u \tensor \tok^u_u \prequiv \ort A
\qquad \olt A_u   \prequiv \tok^u_u \lol \ort A\]
\[\exists u < v . \olt \alpha^u_v \tensor \tok^u_v \prequiv \ort \alpha
\qquad \olt \alpha^u_v   \prequiv u < v \to \tok^u_v \lol  \ort \alpha\]

For instance, consider $\alpha \llto \beta$. There are four things we might try to
prove. Let's see which feel easy and what they require.
\[\olt{\alpha \llto \beta}^u_v \prov u < v \to \tok^u_v \lol \ort{\alpha \llto \beta}\]
\[u < v \to \tok^u_v \lol \ort{\alpha \llto \beta} \prov \olt{\alpha \llto \beta}^u_v \]
\[\exists u < v . \olt {\alpha \llto \beta}^u_v \tensor \tok^u_v \prov \ort {\alpha \llto\beta}\]
\[\ort {\alpha \llto\beta} \prov \exists u < v . \olt {\alpha \llto \beta}^u_v \tensor \tok^u_v  \]
expand to

\[\forall tw . \tok^t_w \lol \forall x \in [t, u].
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \prov
 u < v \to \tok^u_v \lol \exists tw . \tok^t_w \tensor \forall x < t. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta\]
\[u < v \to \tok^u_v \lol \exists tw . \tok^t_w \tensor \forall x < t. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta \prov
 \forall x \in [t, u].
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \]
\[\exists u < v . \forall x \in [t, u].
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \tensor \tok^u_v \prov
 \exists tw . \tok^t_w \tensor \forall x < t. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta\]
\[\exists tw . \tok^t_w \tensor \forall x < t. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta \prov
 \exists u < v . \forall x \in [t, u].
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \tensor \tok^u_v  \]
Let's ignore the ambient inequality just to simplify this a tiny bit

%1
\[\forall tw . \tok^t_w \lol \forall x .
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \prov
 \tok^u_v \lol \exists tw . \tok^t_w \tensor \forall x. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta\]
%2
\[\tok^u_v \lol \exists tw . \tok^t_w \tensor \forall x. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta \prov
 \forall x .
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \]
%3
\[\exists uv . \forall x .
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \tensor \tok^u_v \prov
 \exists tw . \tok^t_w \tensor \forall x. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta\]
%4
\[\exists tw . \tok^t_w \tensor \forall x. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta \prov
 \exists uv . \forall x .
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \tensor \tok^u_v  \]
Ok, let's take these one at a time.
\subsection{Proof 1}
\[\forall tw . \tok^t_w \lol \forall x .
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \prov
 \tok^u_v \lol \exists tw . \tok^t_w \tensor \forall x. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta\]
inverts to
\[\forall tw . \tok^t_w \lol \forall x .
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v), \tok^u_v \prov
  \exists tw . \tok^t_w \tensor \forall x. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta\]
and there are two choices I have to make, which seems uncertain what to do yet.

\subsection{Proof 2}
\[\tok^u_v \lol \exists tw . \tok^t_w \tensor \forall x. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta \prov
 \forall x .
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \]
inverts to
\[\tok^u_v \lol \exists tw . \tok^t_w \tensor \forall x. \olt \alpha^x_t \to \tok^x_w \lol
 \ort \beta, \tok^x_u \lol \ort \alpha \prov \tok^t_w \tensor \olt \beta^x_v\]
This is a nonstarter, since I can token consumers everywhere, and no token producers.

\subsection{Proof 3}
\[\exists uv . \forall x .
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \tensor \tok^u_v \prov
 \exists tw . \tok^t_w \tensor \forall x. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta\]
This inverts to
\[ \forall x .
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v), \tok^u_v \prov
 \exists tw . \tok^t_w \tensor \forall x. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta\]
and again like Proof 1, I have a token, but I don't know precisely what I should do with it.
Although I have a hunch I should send it to the right.

\subsection{Proof 4}
\[\exists tw . \tok^t_w \tensor \forall x. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta \prov
 \exists uv . \forall x .
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \tensor \tok^u_v  \]
inverts to
\[ \tok^t_w , \forall x. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta \prov
 \exists uv . \forall x .
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v) \tensor \tok^u_v  \]
and I have a token and some things I could do with it.

\subsection{No, Wait, I made a mistake}
I didn't instantiate $\olt{\alpha \llto \beta}$ correctly.
What a mess this is. Let's try doing $\prequiv$ all at once another time,
guessing that $\tensor$-esque equivalence goes counterintuitively with the negatives.
So
\[\exists u < v . \olt {\alpha \llto \beta}^u_v \tensor \tok^u_v \prequiv \ort {\alpha \llto \beta}\]

\[\exists u < v . \forall tw . \tok^t_w \lol \forall x \in [t, u].
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v)
 \tensor \tok^u_v
\]
\[  \prequiv \exists tw . \tok^t_w \tensor \forall x < t. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta \]

%% \[\begin{tabular}{r@{ }c@{ }c@{ }l}
%%   Pos. Props&$P$&$::=$&$\alpha \celse \cdots$\\
%%   Neg. Props&$N$&$::=$&$\phi \celse \cdots$\\
%%   Pos. Actions&$\alpha$&$::=$&$?P \celse \alpha \cdot \alpha \celse \cdots$\\
%%   Neg. Actions&$\nu$&$::=$&$\alpha \llto \nu \celse \alpha \rrto \nu \celse \cdots$\\
%% \end{tabular}\]
Using
\[\exists u < v . \olt \beta^u_v \tensor \tok^u_v \prequiv \ort \beta
\qquad \olt \alpha^x_t   \prequiv x < t \to \tok^x_t \lol  \ort \alpha\]
this might be roughly the same as showing
\[\exists u < v . \forall tw . \tok^t_w \lol \forall y \in [t, u].
(\tok^y_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^y_v)
 \tensor \tok^u_v
\]
\[  \prequiv \exists tw . \tok^t_w \tensor \forall x < t. (x < t \to \tok^x_t \lol  \ort \alpha) \to \tok^x_w \lol  (\exists u < v . \olt \beta^u_v \tensor \tok^u_v) \]
I can't really see how that works.

Let's just take the other side to see what happens.
\[ \forall tw . \tok^t_w \lol \forall x \in [t, u].
(\tok^x_u \lol \ort \alpha) \to (\tok^t_w \tensor \olt \beta^x_v)   \prequiv u < v \to \tok^u_v \lol  \exists tw . \tok^t_w \tensor \forall x < t. \olt \alpha^x_t \to \tok^x_w \lol \ort \beta \]

No, this looks like garbage all the same.

\section{How Did It Work With Modal Logic}
\[\begin{tabular}{ccc}
$A$ & $\olt A_a $&$ \ort A$ \\
\hline
$ A \& B$
&$ U_a (F_a \olt A_a \& F_a \olt B_a)$
&$ \ort A \& \ort B$
 \\
$ A \oplus B$
&$ U_a F_a (\olt A_a \oplus \olt B_a)$
&$ \ort A \oplus \ort B$
 \\
$ A \imp B$
&$  (U_a \ort A) \imp \olt B_a$
&$ \exists b . F_b U_b (\olt A_b \imp \ort B)$
\end{tabular}
\]
Can I check that
\[ \exists b . F_b \olt P_b \prequiv \ort P \]
\[  \olt N_a \prequiv U_a \ort N \]
Well for $\imp$ this comes out to
\[(U_a (\exists b . F_b \olt A_b)) \imp U_a \ort B  \prequiv U_a (\exists b . F_b U_b (\olt A_b \imp \ort B))\]
This reduces in the forward direction
\[U_a(\exists b . F_b \olt A_b) \imp U_a \ort B, \tok_a  \prov  (\exists b . F_b U_b (\olt A_b \imp \ort B))\]
\[U_a(\exists b . F_b \olt A_b) \imp U_a \ort B, \tok_a, \olt A_a  \prov   \ort B\]
\[\olt  A_a  \prov   U_a(\exists b . F_b \olt A_b)\]
and in the backwards direction
\[  U_a (\exists b . F_b U_b (\olt A_b \imp \ort B)) \prov (U_a (\exists b . F_b \olt A_b)) \imp U_a \ort B \]
\[  U_a (\exists b . F_b U_b (\olt A_b \imp \ort B)), U_a (\exists b . F_b \olt A_b), \tok_a \prov \ort B \]
This is a problem because I don't have enough tokens! Let's try maybe the longer guess
\[\begin{tabular}{ccc}
$A$ & $\olt A_a $&$ \ort A$ \\
\hline
$ A \& B$
&$ U_a (F_a \olt A_a \& F_a \olt B_a)$
&$ \ort A \& \ort B$
 \\
$ A \oplus B$
&$ U_a F_a (\olt A_a \oplus \olt B_a)$
&$ \ort A \oplus \ort B$
 \\
$ A \imp B$
&$ U_a( U_a \ort A \imp F_a \olt B_a)$
&$ \exists b . F_b U_b (\olt A_b \imp \ort B)$
\end{tabular}
\]
in which the theorem for $\imp$ is
\[   U_a( U_a \ort A \imp  F_a \olt B_a) \prequiv U_a \exists b . F_b U_b (\olt A_b \imp \ort B)\]
which is by i.h. the same as
\[   U_a( U_a (\exists b . F_b \olt A_b) \imp  F_a U_a \ort B) \prequiv U_a \exists b . F_b U_b (\olt A_b \imp \ort B)\]
which backwards is
\[ U_a \exists b . F_b U_b (\olt A_b \imp \ort B) \prov   U_a( U_a (\exists b . F_b \olt A_b) \imp  F_a U_a \ort B) \]
\[ U_a \exists b . F_b U_b (\olt A_b \imp \ort B), \tok_a, U_a (\exists b . F_b \olt A_b)\prov  F_a U_a \ort B \]
\[ U_a \exists b . F_b U_b (\olt A_b \imp \ort B), \tok_a, U_a (\exists b . F_b \olt A_b)\prov  \ort B \]
Stuck again! Is it at all possible that the quantifier in the positive theorem is a $\forall$?
That seems unlikely. Let me try to prove the $\oplus$ case to check.
\[ \forall b . F_b ( U_b F_b (\olt A_b \oplus \olt B_b)) \prequiv \ort A \oplus \ort B \]
by i.h.,
\[ \forall b . F_b ( U_b F_b (\olt A_b \oplus \olt B_b)) \prequiv \forall b . F_b \olt A_b \oplus \forall b . F_b \olt B_b \]
Yeah, no way, it needs to be $\exists$.

\subsection{What's Going On?}

The identity proof of $A \imp B$ looks like

\[
\erule
{
\[
\[
\justifies
A \wat a \prov A \wat a
\]
\[
\justifies
B \wat a \prov B \wat a
\]
\justifies
A \imp B \wat a, A \wat a \prov B \wat a
\]}
{A \imp B \wat a \prov A \imp B \wat a}
\]
and with tokens
\[
\erule
{
\[
\justifies
 U_a( U_a \ort A \imp F_a \olt B_a), \tok_a, \olt A_a \prov  \ort B
\]}
{ U_a( U_a \ort A \imp F_a \olt B_a), \tok_a \prov \exists b . F_b U_b (\olt A_b \imp \ort B)}
\]
Oh, wait, that's the forward direction, that's easy.

\subsection{Keeping Worlds On The Right}
Is the problem fundamentally that I'm trying to avoid passing information on the right?
\[\begin{tabular}{ccc}
$A$ & $\olt A_a $&$ \ort A_a$ \\
\hline
$ A \& B$
&$ U_a (F_a \olt A_a \& F_a \olt B_a)$
&$  F_aU_a(\ort A_a \& \ort B_a)$
 \\
$ A \oplus B$
&$ U_a F_a (\olt A_a \oplus \olt B_a)$
&$  F_a(U_a\ort A_a \oplus U_a\ort B_a)$
 \\
$ A \imp B$
&$ U_a( U_a \ort A_a \imp F_a \olt B_a)$
&$  F_a U_a (\olt A_a \imp \ort B_a)$
 \\
$ p^+$
&$ U_a F_a p$
&$  F_a p$
 \\
$ p^-$
&$ U_a p$
&$  F_a U_a p$
\end{tabular}
\]
with theorems
\[  F_a \olt P_a \prequiv \ort P_a \qquad
  \olt N_a \prequiv U_a \ort N_a \]
To check the implication, we need
\[ U_a( U_a \ort A_a \imp F_a \olt B_a) \prequiv   U_a F_a U_a (\olt A_a \imp \ort B_a)\]
i.e.
\[ U_a( U_a F_a \olt A_a \imp F_a U_a \ort B_a) \prequiv    U_a (\olt A_a \imp \ort B_a)\]
Forward direction is easy, and backward direction is
\[U_a (\olt A_a \imp \ort B_a) \prov  U_a( U_a F_a \olt A_a \imp F_a U_a \ort B_a) \]
\[U_a (\olt A_a \imp \ort B_a) , \tok_a,  U_a F_a \olt A_a \prov  F_a U_a \ort B_a \]
\[\olt A_a \imp \ort B_a,   \olt A_a \prov  \ort B_a \]

Now we can think about adding world-invariant, i.e. valid propositions $V, W$.
\[\begin{tabular}{ccc}
$A/V$ & $\olt A_a/\olt V $&$ \ort A_a/\ort V$ \\
\hline
$ FV $
&$ U_a F_a \olt V$
&$  F_a \ort V$
 \\
$ UA $
&$ \forall a . U_a F_a \olt A_a$
&$  \forall a . U_a \ort A_a$
\end{tabular}
\]
My theorem about $V$ is just uniformly $\olt V \prequiv \ort V$.
This generates something that feels like validity. What about a dual situation
with existentials?
\[\begin{tabular}{ccc}
$A/L$ & $\olt A_a/\olt L $&$ \ort A_a/\ort L$ \\
\hline
$ FA $
&$  \exists a . F_a \olt A_a$
&$ \exists a . F_a U_a \ort A_a$
 \\
$ UL $
&$  U_a \olt L$
&$ F_a U_a \ort L$
\end{tabular}
\]
\subsection{Actions Again}
So how might actions and props look in that light?
Let $f, g$ denote entire intervals. We
translate actions at intervals, and props at worlds.

When propositions do $U_a$ and $F_a$, I am imagining that they're
just grabbing the right end of the full token $\tok^u_v$. Or
rather... hm. Maybe they do different things on the left vs. on the right.

So
\[\olt U_a^{uv.} X = \forall uv . a \in [u,v] \to \tok^u_v \lol  X\]
\[\olt F_a^{uv} X =  a\in[u,v]\land \tok^u_v \tensor  X\]
\[\ort U_a X = \tok_a \lol  X\]
\[\ort F_a X = \tok_a \tensor  X\]
\[ F^* X = \exists a . \tok^a \tensor  X\]

and we just omit $uv$ bindings and uses where they're obvious from context.
\[\begin{tabular}{ccc}
$ A$ & $ \olt A_a $&$  \ort A_a$ \\
\hline
$ A \& B$
&$ \olt U_a (\olt F_a \olt A_a \& \olt F_a \olt B_a)$
&$  \ort F_a\ort U_a(\ort A_a \& \ort B_a)$
 \\
$ A \oplus B$
&$ \olt U_a \olt F_a (\olt A_a \oplus \olt B_a)$
&$  \ort F_a(\ort U_a\ort A_a \oplus \ort U_a\ort B_a)$
 \\
$ A \imp B$
&$ \olt U_a( \ort U_a \ort A_a \imp \olt F_a \olt B_a)$
&$  \ort F_a \ort U_a (\olt A_a \imp \ort B_a)$
 \\
$ p^+$
&$ \olt U_a \olt F_a p(a)$
&$  \ort F_a F^* p(a)$
 \\
$ p^-$
&$ \olt U_a p(a)$
&$  \ort F_a \ort U_a p(a)$
\end{tabular}
\]

I can't guess the theorems for this, though.
\subsection{Existentials}
I wonder what happens if I do

\[\olt U_a^{uv.} X = \forall uv . a \in [u,v] \to \tok^u_v \lol  X\]
\[\olt F_a^{uv} X =  a\in[u,v]\land \tok^u_v \tensor  X\]
\[\ort U_a^{tw} X = a\in[t,w] \to \tok^t_w \lol  X\]
\[\ort F_a^{tw.} X = \exists tw . a \in [t,w] \land \tok^t_w \tensor  X\]
\[\begin{tabular}{ccc}
$ A$ & $ \olt A_a $&$  \ort A_a$ \\
\hline
$ A \& B$
&$ \olt U_a (\olt F_a \olt A_a \& \olt F_a \olt B_a)$
&$  \ort F_a\ort U_a(\ort A_a \& \ort B_a)$
 \\
$ A \oplus B$
&$ \olt U_a \olt F_a (\olt A_a \oplus \olt B_a)$
&$  \ort F_a(\ort U_a\ort A_a \oplus \ort U_a\ort B_a)$
 \\
$ A \imp B$
&$ \olt U_a( \ort U_a \ort A_a \imp \olt F_a \olt B_a)$
&$  \ort F_a \ort U_a (\olt A_a \imp \ort B_a)$
 \\
$ p^+$
&$ \olt U_a \olt F_a p(a)$
&$  \ort F_a  p(a)$
 \\
$ p^-$
&$ \olt U_a p(a)$
&$  \ort F_a \ort U_a p(a)$
\end{tabular}
\]

\[\olt A_v, v \in [t, w], \tok^t_w \prov \ort A_v\]
so maybe
\[\olt N_a \prequiv \olt U^{tw}_a \ort N_a \]
? Actually yeah, looks possible for the negative atom, at least.
\[\olt U_a p(a) \prov \olt U_a \ort F_a \ort U_a p(a) \]
has us first generate a neighborhood of $a$, then plug it into $F$, then get
a token from $U$ on the right for the same neighborhood, which we can
plug into $U$ on the left.
\[\olt U_a \ort F_a \ort U_a p(a) \prov  \olt U_a p(a)\]
has us generate a neighborhood of $a$ on the right, which we plug into the left.
Then the $F$ generates another neighborhood, which we plug into $U$ on the left.

\end{document}
