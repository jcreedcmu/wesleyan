\documentclass{article}


\usepackage{amsmath}
\usepackage{amssymb}
\input{theorem}

\input{prooftree}
\def\erule#1#2{\begin{prooftree}#1\justifies #2\end{prooftree}}

\usepackage{tikz}
\usepackage{tikz-cd}
\definecolor{green}{HTML}{007f00}
\definecolor{cyan}{HTML}{007f7f}
\definecolor{purple}{HTML}{af00af}
\def\rr#1{{\color{red}\mathbf {#1}}}
\def\bb#1{{\color{blue}\mathbf{#1}}}
\def\Z{\mathcal Z}
\def\adjust{\big|}
\def\O{\mathcal{O}}
\def\rid{\mathsf{id}}
\def\int{\square}
\def\bd{\partial}
\def\prov{\vdash}
\def\prequiv{\dashv\vdash}
\def\imp{\Rightarrow}
\def\cqed{\hskip2mm{\vrule width .5em height .5em depth 0em}} % at the end of a |P.
\def\o{\circ}
\def\N{\mathbb{N}}
\def\R{\mathbb{R}}
\def\x{\times}
\def\st{\mathrel|}
\def\rset{\mathbf{Set}}
\def\op{\mathsf{op}}
\def\P{\mathbf{P}}
\def\dash{\hbox{---}}
\def\deg{\mathop{\mathsf{deg}}}
\def\celse{\mathrel{|}}
\def\cn{{:}}
\def\rok{\mathrel\mathsf{ok}}
\def\sub{\subseteq}
\newenvironment{nstabbing}
  {\setlength{\topsep}{-\parskip}%
   \setlength{\partopsep}{0pt}%
   \vskip-2em\hphantom{.}%
   \tabbing}
  {\endtabbing}



\title{Categorifying the BCH Formula}
\begin{document}
\maketitle
\tikzset{
   commutative diagrams/.cd,
   arrow style=tikz,
   diagrams={>=stealth}}
\section{Baker-Campbell-Hausdorff in a Semiring}

The goal of this note is to state and prove a version of the Baker-Campbell-Hausdorff formula
in an arbitrary (not necessarily commutative) semiring, that is a set $R$ with $(+,0,\cdot,1)$,
where $+$ is required to be commutative but $\cdot$ is not, with $\cdot$ distributing over $+$,
and all the other usual laws.

The Baker-Campbell-Hausdorff formula says that if we seek $G_1, G_2, \ldots$ such that
\[ e^{tA} e^{tB} = e^{tG_1 + t^2G_2 + t^3G_3 + \cdots}\]
holds, we find that we must set $G_1 = A + B$, and $G_2 = [A,B]/2$, and $G_3 = [A,[A,B]]/12 + [B,[B,A]]/12$,
and so on.

The barriers to interpreting this in a semiring are the concepts of
the exponentiation function, (which involves division in its coefficients, the division
in the coefficients of the Lie brackets occurring the right-hand side, and the
 subtractions occurring because of the Lie brackets themselves.

\subsection{Exponentials}
To deal with the exponentials we differentiate both sides $n$ times by $t$, and set $t = 0$.
\subsubsection{Left Side}
On the left, we see
\[ e^{tA} e^{tB}
=  \sum_{m=0}^{\infty} \sum_{p = 0}^\infty {t^mA^m\over m!}{t^pB^p\over p!}\]
\[=  \sum_{m=0}^{\infty} \sum_{p = 0}^\infty t^{m+p}{A^mB^p\over m!p!}\]
\[=  \sum_{m=0}^{\infty} t^{m} \sum_{p = 0}^m {A^pB^{m-p}\over p!(m-p)!}\]
so
\[\left(\partial \over \partial t\right)^n e^{tA} e^{tB}\Bigg|_{t=0}
=  \left(\sum_{m=n}^{\infty} t^{m-n}{m!\over (m-n)!}\sum_{p = 0}^m {A^pB^{m-p}\over p!(m-p)!}\right)\Bigg|_{t=0}\]
\[= \sum_{p = 0}^n {n\choose p} A^pB^{n-p} \]

Notice that if we define $\Z[X] = AX + XB$,
then this expression is just $\Z^n[1]$.

\subsubsection{Compositions}
A {\em composition} $\lambda \in C^k_n$ with weight $n$ and $k$ parts is a sequence
$\lambda = \lambda(1),\ldots,\lambda(k)$ with every $\lambda(i) \ge 1$
and $\sum_i \lambda(i) = n$.
There is exactly one composition $\emptyset$ with weight $0$ and $0$ parts.
We write $|\lambda|$ for the number of parts of a composition $\lambda$.

Let $D^k_n$ be the set of `extended' compositions of weight $n$ and size $k$.
\[D^k_n = C^k_n \cup \{(0,\lambda) \st \lambda \in C^{k-1}_{n-1}\}\]

\[D^{\ge k}_n = \bigcup_{k' \ge k} D_n^{k'}  \qquad D^{\ge k} = \bigcup_{n} D_n^{\ge k} \]
\[ C_n = \bigcup_{n} C_n^k \]

\subsubsection{Right Side}

If we define
\[G_\lambda = \prod_{i = 1}^{|\lambda|} G_{\lambda(i)}\]
(noting that $G_\emptyset = 1$) then we can reason
\[ \exp\left(\sum_{m = 1}^\infty t^mG_m \right) = \sum_{k=0}^\infty {1\over k!}\left(\sum_{m = 1}^\infty t^mG_m \right)^k\]
\[= \sum_{m=0}^\infty \sum_{\lambda \in C_m}{t^m\over |\lambda|!}G_\lambda\]
so
\[\left(\partial \over \partial t\right)^n \exp\left(\sum_{m = 1}^\infty t^mG_m \right)\Bigg|_{t=0} =
\left( \sum_{m=n}^\infty \sum_{\lambda \in C_m}{t^{m-n}m!\over (m-n)!|\lambda|!}G_\lambda\right)\Bigg|_{t=0}
\]
\[=  \sum_{\lambda \in C_n}{n!\over |\lambda|!}G_\lambda\]

\subsubsection{Together}
Define \[X_n =  \sum_{\lambda \in C_n}{n!\over |\lambda|!}G_\lambda\]
The problem BCH poses is to find $G_i$ such that, for every $n \ge 0$,
\[\Z^n[1] = X_n\]
Note that already this equation by itself makes sense in an arbitrary semiring, since ${n!/|\lambda|!}$ is always
an integer. We now need to account for the fact that the {\em solution} to this problem,
i.e. the sequence of values $G_1, G_2, \ldots$, necessarily involves division and subtraction in the
usual formulation.
\subsection{Subtraction and Division of Lie Brackets}

Instead of using subtraction and division directly, we simply ask for solutions to particular equations
in a semiring which imply subtraction and division indirectly. Much like how particular cartesian
products may or may not exist in a category, we define what it means for a semiring element
to `be a fractional Lie bracket' of two other semiring elements.

\begin{definition}
Suppose $a, b, c\in R$. We say $c$ a Lie bracket of $a,b$ (i.e. ``$c = [a,b]$'')
if $c + ba = ab$.
\end{definition}




\begin{definition}
 A {\em candidate} for $a,b$ is a sequence $(G_n \in R)_{n\in \N} $ and
a map $G_{[\dash]}: D^{\ge 1} \to R$, such that
\begin{enumerate}
\item $G_0 = a$ and $G_1 = a + b$
\item $G_{[n]} = G_n$ for every $n$
\item $ G_{[\lambda, n]}$ is a Lie bracket of $G_{[\lambda]}, G_n$ for all $n\in \N,\lambda\in D^1$
\end{enumerate}
\end{definition}


\begin{definition}
A  map $c : D^{\ge 2} \to \N$ {\em is a solution to the BCH problem} if
for every $a,b\in R$, we have that every candidate $G,f$ for $a,b$ that satisfies
\[\forall n\ge 2 .\left( n! G_n = \sum_{\lambda\in D^{\ge 2}_n} c(\lambda) G_{[\lambda]}\right)\]
also satisfies
\[\forall n .\left( \Z_{ab}^n[1] = \sum_{\lambda \in C_n}{n!\over |\lambda|!}G_\lambda\right)\]
\end{definition}

\section{Finding Coefficients}
\subsection{What I know about 0-coefficients}
I believe I know the coefficients of all extended compositions that start with zero.
For example,
\[120G_5 = 24G_{[04]} + 12G_{[0(31)]}  + 12G_{[022]} + 4G_{[0(211)]} + G_{[01111]} + \cdots\]
In general,
\[n!G_n = \left(\sum_{\lambda \in C_{n-1}} {(n-1)!\over |\lambda|!}G_{[0\lambda]}\right) + \cdots\]
\subsection{What I know about Synthesis Multiplicity}
Suppose $\lambda \in C_n^k$.
I believe the number of times that we do synthesis of $G_{m}$ in the environment $G_{\lambda m}$
 is
\[(n+m-1)!\over k!(m-1)!\]
 Since the synthesis rule for $G_{m}$ involves an $m!$, this results in
\[{m (n+m-1)!\over k!}G_{\lambda m}\]

For example, $G_{[01]11} + G_{1[01]1} + G_{11[0]1}$ gets moved to
$3G_{11[01]}$, and then we synthesize $G_2$ three times, yielding
$6G_{112}$. Here $\lambda = (1,1)$ so $n=2$ and $k=2$ and $m = 2$, and
we compute that synthesis occurs $3!\over 2!1! = 3$ times, and we get
a result of $(2\cdot 3!/2!)G_{112} = 6G_{112}$.

For another example, $5G_{[02]111} + 5G_{1[02]11} + 5G_{11[02]1} + 5G_{111[02]}$ gets moved to
$20G_{111[02]}$. We know that $G_{3}$ requires $2G_{[02]}$ to synthesize, so we should
synthesize $10$ times, leading to $60G_{1113}$. And indeed we compute for $\lambda = (1,1,1)$ and $n=3$ and
$k=3$ and $m=3$ that $5!/(3!2!) = 10$ and $3\cdot 5! / 3! = 60$.

For another example, $20G_{[02]21} + 20G_{2[02]1} + 20G_{21[02]}$ gets moved to
$60G_{21[02]}$. We know that $G_{3}$ requires $2G_{[02]}$ to synthesize, so we should
synthesize $30$ times, leading to $180G_{213}$. And indeed we compute for $\lambda = (2,1)$ and $n=3$ and
$k=2$ and $m=3$ that $5!/(2!2!) = 30$ and $3\cdot 5! / 2! = 180$.

For another example, $120G_{[03]21} + 120G_{2[03]1} + 120G_{21[03]}$ gets moved to
$360G_{21[03]}$. We know that $G_{4}$ requires $6G_{[03]}$ to synthesize, so we should
synthesize $60$ times, leading to $1440G_{214}$. And indeed we compute for $\lambda = (2,1)$ and $n=3$ and
$k=2$ and $m=4$ that $6!/(2!3!) = 60$ and $4\cdot 6! / 2! = 1440$.

\subsection{What I think I know about Rebalancing}
Let's think about what happens in the $5\to 6$ case when we synthesize the various $G_{(321)}$.
The expression $X_5$ contains $60G_{(32)} + 20G_{(221)} + 20G_{(311)}$.
Therefore  $\Z[X_5]$ contains $60G_{(32)1} + 20G_{([02]21)} + 20G_{(3[01]1)}$.
Pushing things to the right will yield
$60G_{(32)1} + 60G_{(21)[02]} + 60G_{(31)[01]}$.
Now we do synthesis of $G_2$ and $G_3$ and we obtain
$60G_{(32)1} + 180G_{(21)3} + 120G_{(31)2}$.
This is a general case of the post synthesis situation. Let's say we have a collection $\Lambda \subseteq C_n^k$
closed under permutation. Then we have a collection of synthesis products
\[ \sum_{\lambda \in \Lambda} {\lambda(k) (n-1)!\over (k-1)!}G_{\lambda}\]
In our special case, we have $\Lambda = (321)$ so $n=6$ and $k=3$. In this case we know $3$ divides $(n-1)!/(k-1)!$,
but why generally? Let's try some examples.
\subsubsection{Rebalancing $(2111)$}
 In the $4\to 5$ case of synthesizing $(2111)$, our post-synth products are
\[4G_{(211)1} + 8G_{1112}\]
There are four things I need to spread values across; each of these coefficients is a multiple of 4. Fine.
\subsubsection{Rebalancing $(2211)$}
 In the $5\to 6$ case of synthesizing $(2211)$, our post-synth products are
\[ 20G_{(221)1} + 40G_{(211)2} \]
for a total of $3\cdot 20 + 3 \cdot 40 = 180$. Each of these gets spread over the 4 rotations of its rightmost
element. Every coefficient is a multiple of 4, this is fine.

Concretely what did my recipe from before suggest? For $k=4$ I got
\[ \sum_{\lambda\in\Lambda} \lambda(4) G_{\lambda} = \]
\[ {1\over 4} \sum_{\lambda\in\Lambda}\left( G_\lambda\left(\sum_i \lambda(i) \right)
+ \left( \lambda(2)G_{\lambda([12]34)} \right)
+ \left( 2 \lambda(3)G_{\lambda(1[23]4)}\right)
+ \left( 3\lambda(4)G_{\lambda(12[34])} \right)\right)\]

Ah! I can see why I'm  licensed to divide by $4$ here. My synthesis coefficient
is always a multiple of $(n-1)!/(k-1)!$, and I'm just additionally dividing by $k$.
But $(n-1)!/k!$ is always an integer unless I'm dealing with the $11\cdots 11$ case, in which
no rebalancing is necessary.
\subsubsection{Rebalancing $(3211)$}
In the $6\to 7$ (!) case of synthesizing $(3211)$, our post-synth products are
\[ = 120G_{(321)1} + 240G_{(311)2} + 360G_{(211)3}\]
Here there are 6+3+3 terms I need to spread across, and all coefficients are multiples of 12.
The average is $(6 \cdot 120  + 3 \cdot 240 + 3 \cdot 360) / 12 = 210 = 7!/4!$ as required.


\subsection{What I think I know about Synthesis Coefficients}
 \begin{nstabbing}
\hspace{0.5in}\=$=\ $ \=\kill\\
$6G_3 $\>$=$\>$ \cdots +  G_{[12]} $\\
$24G_4 $\>$=$\>$ \cdots + 6G_{[13]} + G_{[121]}  $\\
$120G_5 $\>$=$\>$  \cdots + 36G_{[14]} + 12G_{[23]} + 8G_{[131]} + 4G_{[122]} +  G_{[1211]}$\\
$720G_6 $\>$=$\>$  \cdots +  240G_{[15]} + 120G_{[24]} + 60G_{[141]} +  60G_{[132]} + {}$\\
\>\> $\phantom{\cdots+}10G_{[1311]} + 5G_{[1221]} + 5G_{[1212]} + G_{[12111]}$
\end{nstabbing}
and what I'm finding so far as a refinement is
\begin{nstabbing}
\hspace{0.5in}\=$=\ $ \=\kill\\
$6G_3 $\>$=$\>$ \cdots +  2G_{[12]} + G_{[21]} $\\
$24G_4 $\>$=$\>$ \cdots + 9G_{[13]} + 3G_{[31]} + 2G_{[121]} + G_{[211]}  $\\
\end{nstabbing}
Can I guess more coefficients?
\begin{nstabbing}
\hspace{0.5in}\=$=\ $ \=\kill\\
$120G_5 $\>$=$\>$ \cdots + (4\cdot 4!/2!)G_{[14]} + (1\cdot 4!/2!)G_{[41]} + (3\cdot 4!/2!)G_{[23]} +  (2\cdot 4!/2!)G_{[23]} + {} $\\
\>\>$\phantom{\cdots+}(3\cdot 1\cdot 4!/3!)G_{[131]} + (1\cdot 1\cdot 4!/3!)G_{[311]} + {}$\\
\>\>$\phantom{\cdots+} ({\color{red} 4?}\cdot 4!/3!)G_{[122]} +({\color{red} 3?}\cdot 4!/3!)G_{[212]} + \cdots$\\
$120G_5 $\>$=$\>$ \cdots + 48G_{[14]} + 12G_{[41]} + 36G_{[23]} + 24G_{[32]} + {} $\\
\>\>$\phantom{\cdots+}12G_{131} + 4G_{311} + {}$\\
\>\>$\phantom{\cdots+}16G_{122} + 12G_{212} + \cdots$\\
\end{nstabbing}
Close, but not quite there.

How many $G_{[122]}$ and $G_{[212]}$ should arise during the $4\to 5$
proof? They should arise from doing motion on  $G_{[12]2}$ and $G_{[21]2}$.
Those in turn should arise from rebalancing: I get coefficients
$8G_{[12]2}$ and $4G_{[21]2}$. Ok, that's interestingly different from the $16$ and $12$ that I conjectured.
\section{Proving Theorem}
\end{document}
