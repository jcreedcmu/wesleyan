\documentclass{article}
\usepackage{amssymb}
\input{theorem}

\input{prooftree}
\def\erule#1#2{\begin{prooftree}#1\justifies #2\end{prooftree}}
\def\pair#1#2{\langle #1 , #2 \rangle}

\usepackage{tikz}
\usepackage{tikz-cd}
\usetikzlibrary{calc}
\definecolor{morange}{rgb}{1,0.56,0}
\definecolor{lorange}{rgb}{1,0.95,0.8}
\definecolor{mgreen}{rgb}{0,0.56,0}
\definecolor{lgreen}{rgb}{0.95,1,0.8}
\definecolor{mblue2}{rgb}{0,0.2,1.0}
\definecolor{lblue}{rgb}{0.8,0.95,1}
\definecolor{mred}{rgb}{0.9,0.1,0.1}
\definecolor{mgreen}{rgb}{0.1,0.5,0.1}
\definecolor{mblue}{rgb}{0.3,0.3,0.9}
\def\bitf#1{#1 [smooth, tension=0.8] coordinates {(-1.6,2) (-1,1) (0,0)}}
\def\bitg#1{#1 [smooth, tension=0.8] coordinates {(1,2) (0.55,1) (0,0)}}
\def\bitgrev#1{#1 [smooth, tension=0.8] coordinates {(0,0) (0.55,1) (1,2)}}
\def\bitfg#1{#1 [smooth, tension=0.8] coordinates {(0,0) (0,-2) }}
\def\ep{\varepsilon}
\def\Top{\mathbf{Top}}
\def\bcase{\mathop\mathbf{case}}
\def\bof{\mathop\mathbf{of}}
\def\binj{\mathbf{inj}}
\def\blet{\mathrel\mathbf{let}}
\def\bin{\mathrel\mathbf{in}}
\def\bmatch{\mathrel\mathbf{match}}
\def\bwith{\mathrel\mathbf{with}}
\def\pbck{\ar[dr, phantom, pos=0, "\lrcorner"]}
\def\ups{{\uparrow}}
\def\dns{{\downarrow}}
\def\grad{\nabla}
\def\uups{{\Uparrow}}
\def\ddns{{\Downarrow}}
\def\adjust{\big|}
\def\O{\mathcal{O}}
\def\rid{\mathsf{id}}
\def\ridp{\mathsf{idp}}
\def\rcoe{\mathsf{coe}}
\def\rtype{\mathsf{type}}
%\def\int{\square}
\def\bd{\partial}
\def\prov{\vdash}
\def\prequiv{\dashv\vdash}
\def\imp{\Rightarrow}
\def\cqed{\hskip2mm{\vrule width .5em height .5em depth 0em}} % at the end of a |P.
\def\o{\circ}
\def\lx{\bigcirc}
\def\B{\mathbb{B}}
\def\C{\mathbf{C}}
\def\D{\mathbf{D}}
\def\J{\mathbf{J}}
\def\R{\mathbb{R}}
\def\bx{\mathbf{x}}
\def\by{\mathbf{y}}
\def\bv{\mathbf{v}}
\def\bt{\mathbf{t}}
\def\bu{\mathbf{u}}
\def\bp{\mathbf{p}}
\def\bz{\mathbf{0}}
\def\bzee{\mathbf{z}}
\def\S{\mathfrak{S}}
\def\M{\mathbb{M}}
\def\X{\mathbf{X}}
\def\Y{\mathcal{Y}}
\def\x{\times}
\def\st{\mathrel|}
\def\rset{\mathbf{Set}}
\def\rrel{\mathbf{Rel}}
\def\rcat{\mathbf{Cat}}
\def\op{\mathsf{op}}
\def\P{\mathbb{P}}
\def\I{\mathbb{I}}
\def\U{\mathbb{U}}
\def\N{\mathbb{N}}
\def\Z{\mathbb{Z}}
\def\tw{\mathbf{2}}
\def\dash{\hbox{---}}
\def\dom{\mathop{\mathrm{dom}}}
\def\cod{\mathop{\mathrm{cod}}}
\def\celse{\mathrel{|}}
\def\cn{{:}}
\def\rok{\mathrel\mathsf{ok}}
\def\llam#1{\langle {#1} \rangle}
\def\hf{{\odot}}
\def\lerp#1#2#3{#1[\![#2,#3]\!]}
\def\nope{\emptyset}
\def\ep{\varepsilon}
\def\rng{\mathop\mathrm{rng}}
\def\npart{\not\!\partial}
\def\null{\emptyset}

\begin{document}
\tikzset{>=stealth}
\tikzset{
   commutative diagrams/.cd,
   arrow style=tikz,
   diagrams={>=stealth}}

\section{Main}

I want to describe a sheaf category whose objects are a
certain notion of directed space. The directedness of the space takes
place at different dimensions. There will be a ``1-texture'' (which
imposes constraints on where 1-cells exist) and a ``2-texture'' (which
imposes constraints on where 2-cells exist) and so on.

\subsection{The Presheaf Base Category}
Let $(J, \le)$ be some partial order.

Let $\I$ be the open interval $(0,1)\subseteq \R$.
Equip the product $\I^J$ with the product topology.
Let $\C$ be a category with one object, thought of as being this space $\I^J$,
with morphisms being continuous maps $\I^J \to \I^J$ that are `good' in the following sense.

For any $n\in J$, define
\[
J_{n} = \{x \in J \st x \ge n\}
\]
 and let $\iota_{n} : J_{n} \to J$ be the obvious inclusion.
If $v,w \in \I^{J_n}$, we say $v < w$ if for all $x \in J_n$, either
\begin{itemize}
\item $x \ne n$ and $v(x) = w(x)$, or
\item  $x = n$ and $v(x) < w(x)$.
\end{itemize}

A map $f : \I^J \to \I^J$ is {\em good} if there is a family $(f_n : \I^{J_n} \to \I \st n \in J)$ of maps such that
\par {\bf (Screening Axiom)}
\[\begin{tikzcd}
  \I^J \ar[r, "f"] \ar[d, "\I^{\iota_{n}}"'] & \I^J \ar[d, "\pi_n"]\\
  \I^{J_{n}}  \ar[r, "f_n"'] & \I \\
\end{tikzcd}\]
\par {\bf (Monotonicity Axiom)}
for any $v, w \in \I^{J_{n}}$, if $v < w$ then $f_n(v) < f_n(w)$.

\subsection{Generalizing This a Little}

Suppose we already have a category $\C$ which supports arbitrary
products (think: $\mathbf{Top}$) and we have our partial order $(J, \le)$.
Suppose also we have some black boxes on morphisms, which will tell us if
a morphism $k : C \to C^{J_n}$ is a `good injection', (playing the role of $v < w$) and when a map
$\ell : C \to D$ is a `good composite' (playing the role of $f_n(v) < f_n(w)$).

and want to come up with a kind of variation on $\C^J$, call it
$\C^{*J}$. The objects of $\C^{*J}$ are going to be the $J$-indexed product objects $C^J$
that live in $\C$, and the morphisms will be a subset of the $\C$-homsets $\C[C^J, D^J]$.

To be included in the $\C^{*J}$ homset, a map $f :C^J \to D^J$ needs to come equipped with a family of morphisms
$(f_n : C^{J_n} \to D \st n \in J)$ that satisfy
\[\begin{tikzcd}
  &C^J \ar[r, "f"] \ar[d, "C^{\iota_{n}}"'] & D^J \ar[d, "\pi_n"]\\
  C \ar[r, "k"']&C^{J_{n}}  \ar[r, "f_n"'] & D \\
\end{tikzcd}\]
Also, whenever $k : C \to C^{J_n}$ is a `good injection' we require that $f_n \o k$ is a `good composite'.

\subsection{Generalizing Differently}
Hm, not sure I like the above. Let's try:
\[\begin{tikzcd}
  &C&&D\\
 X\ar[ur, "f_1"]\ar[r, "f_2"]\ar[ddr, "f_n"'] &C & \to & D\\
&\vdots\\
  &C&& D\\
\end{tikzcd}\]
Suppose we have $f, f' : X \to C^J$. We write $f_n$ for $\pi_n \o f$.
These two morphisms are $m$-similar, $f \equiv_m f'$, if for all $n \ge m$ we have $f_n = f'_n$.
A morphism $g : C^J \to D^J$ is {\em screened} if for all $m$ we have $f \equiv_m f'$ implies $ g_m f = g_m f' : X \to D$.

Suppose we have $f : X \to C^J$. We have some notion of whether
a given morphism $k : X\to C$ is `monotone'. A morphism $g : C^J \to D^J$ is monotone
if for all $m$ we have $f_m$ monotone implies $ g_m f : X \to D$ is
monotone.

\begin{lemma}
If $n \ge m$ and $f \equiv_m f'$, then $f\equiv_n f'$.
\end{lemma}
\begin{proof}
By transitivity of $\le$.  \cqed
\end{proof}

\begin{lemma}
If $g : C^J \to D^J$ is screened, and $f \equiv_m f'$, then $gf \equiv_m gf'$.
\end{lemma}

\begin{proof}
Let $n \ge m$ be given. By previous lemma, $f \equiv_n f'$. By screenedness of $g$, we have $g_n f = g_n f'$.
\cqed
\end{proof}

\begin{lemma}[Composition preserves screenedness] If
$g : C^J \to D^J$ is screened, and $h : D^J \to E^J$ is screened, then
$h\o g : C^J \to E^J$ is screened.
\end{lemma}


\begin{proof}
Suppose $f \equiv_m f'$. By previous lemma, $g f \equiv_m g f'$.
By the screenedness of $h$, we have $h_m g f = h_m g f'$, as required.
\cqed
\end{proof}

\begin{lemma}[Composition preserves monotonicity]
If
$g : C^J \to D^J$ is monotone, and $h : D^J \to E^J$ is monotone, then
$h\o g : C^J \to E^J$ is monotone.
\end{lemma}

\begin{proof}
Let $m$ and $f$ with $f_m$ monotone be given. Then $g_m f$ is monotone. Then $h_m g f$ is monotone.
\cqed
\end{proof}

\subsection{Slight modification}
We could just concern ourselves with vectors into $C^J$ and relations between them.
\[\begin{tikzcd}
  &C&&D\\
 1\ar[ur, "v_1"]\ar[r, "v_2"]\ar[ddr, "v_n"'] &C & \to & D\\
&\vdots\\
  &C&& D\\
\end{tikzcd}\]
We identify $C^J$ with morphisms $1 \to C^J$.
Suppose for each $C \in C^J$ there's a binary relation $R_C \subseteq C^J \x C^J$.
We say $g : C^J \to D^J$ preserves $R$ if $v R_C w$ implies $g(v) R_D g(w)$.

I think screenedness of $g$ is just the requirement that $g$ preserves
the relation $\equiv_m$ for every $m$. Monotonicity is the requirement that $g$ preserves
a relation $v <_m w$ for every $m$, defined by requiring $v_m < w_m$ and, for every $n > m$, also $v_n = v_m$.

\subsection{Some Example Objects}

I want to set $C = (0,1)$ with the usual order, and $J = \N$. I'd like
to think about $J = \Z$, but I'm less confident than I used to be that
that's equivalent to the $J = \N$ case.

The presheaf base category has one object, $B = (0,1)^\N$, and the morphisms are continuous maps
$B \to B$ that preserve all the relations $\equiv_m, <_m \subseteq B \x B$.
Again, $v \equiv_m w$ means that $\forall n \ge m . v_n = w_n$ and $v <_m w$ means that
$v \equiv_{m+1} w$ and $v_m < w_m$. A sieve $S \subseteq \hom(B, B)$ is covering iff
\[\bigcup_{f \in S} \rng f \supseteq B\]

I claim the following object, $\I_1$ is a sheaf. We say $\I_1(U)$ is the set of functions
$g : B \to (0,1)$ such that $v <_0 w$ implies $g(v) < g(w)$. Restriction along a function $f : B \to B \in \hom(B,B)$
is composition: $g \cdot f = g \o f$.

This might be an instance of a general pattern: if $\iota : \C \to \D$ is some inclusion, and $D \in \D$, then we can find
a representative of $D$ even in $\hat\C$. Namely $D^* = yD \o \iota$. Expanding, $D^*(C) = \hom_\D(\iota C, D)$. But I'm actually
not quite sure what the $\D$ is that I want.

Is this really a sheaf?

\section{Totally Unrelated Topic}

\def\ep{\varepsilon}
Can we think of $\ep$ and $\omega$ as just vectors in some graded vector space?
Consider vectors in $\R^\Z$. So we allow $\ep + \ep^2 + \ep^3 + \cdots$
and So we allow $\omega + \omega^2 + \omega^3 + \cdots$. We say $v(0)$ is the `standard part' of $v$,
and $v(n)$ is the `$\omega^n$ part' and $v(-n)$ is the `$\ep^n$ part'. Addition is componentwise.
Multiplication is convolution.

So when are there multiplicative inverses? It seems like I should be able to say

\[ {1\over \omega + 1} = \ep - \ep^2 + \ep^3 - \ep^4 + \cdots\]
because
\[ ( \omega + 1) \ep  = 1 + \ep \]
\[ ( \omega + 1) (\ep - \ep^2)  = 1 - \ep^2 \]
\[ ( \omega + 1) (\ep - \ep^2 + \ep^3)  = 1 + \ep^3 \]
etc.

and more generally
\[ (a\omega + b)(\ep/a) = 1 + b\ep / a \]
\[ (a\omega + b)(\ep/a -  b(\ep/a)^2) = 1 - (b\ep/a)^2\]
\[ (a\omega + b)(\ep/a -  b(\ep/a)^2 + b^2(\ep/a)^3 = 1 + (b\ep/a)^3\]
so
\[ {1\over a\omega + b} = (1/b) (\ep b/a - (\ep b/a)^2 + (\ep b/a)^3 - (\ep b/a)^4 + \cdots)\]
\[ = {1/b \over (a/b)\omega + 1} \]

Right this is just an ordinary geometric series that does actually converge near the origin.

\[ \sum_{n = 0}^\infty \ep^n  = {1 \over 1-\ep}\]
\[ \sum_{n = 0}^\infty (-\ep)^n  = {1 \over 1+\ep}\]
\[ 1 - \sum_{n = 0}^\infty (-\ep)^n  = 1 - {1 \over 1+\ep}\]
\[ =  {\ep \over 1+\ep}\]
\[ =  {1 \over \omega +1}\]

But then what's $1\over 1 + \ep$? What's $1 \over (1 + \omega)^2$?
That latter one doesn't seem to have a well-defined convolution, for
each component of the vector is itself an infinite sum.

I think I want to say that
\[{1\over 1 + \ep} = 1 - \ep + \ep^2 - \ep^3 + \cdots \]
which is resolving the finite convolution in the opposite direction to the one we'd expect from symmetry with
$1\over 1 + \omega$. But it's the `same' direction, in the direction of $\ep^\infty$. It seems wrong to say
\[{1\over 1 + \ep} = \omega - \omega^2 + \omega^3 - \omega^4 + \cdots\]
\[{1\over 1 + \omega} = 1 - \omega + \omega^2 - \omega^3 + \cdots \]
even though these convolutions play out fine formally.

What I want is that if a vector has a definite upper bound, its
reciprocal should have the opposite upper bound: a standard number's
reciprocal should be standard, a once-infinite number's reciprocal
should be once-infinitesimal, etc.

Ok, so I only really need to define the reciprocal for
\[ {1\over a_0 + a_1\ep + a_2\ep^2 + \cdots } = {1 \over \sum_n {a_n \ep^n}} \]
for $a_n$ standard reals.
I know
\[ (a_0 + a_1\ep + a_2\ep^2  + \cdots)(1/a_0) = 1 + (a_1/a_0)\ep + (a_2/a_0)\ep^2 + \cdots\]
\[ (a_0 + a_1\ep + a_2\ep^2  + \cdots)(1/a_0 - (a_1/a_0^2) \ep) = \]
\[ (1 + (a_1/a_0)\ep + (a_2/a_0)\ep^2 + \cdots)\]
\[ -(a_1/a_0)\ep - (a_1/a_0)^2\ep^2 - (a_1a_2/a_0^2)\ep^3 + \cdots)\]
Oof that looks messy.

But wait, convolution of two bounded above sequences should be ok I think.

Ok, so $\R_n$ for every $n\in \Z$ is the set of hyperreals that have exactly degree $n$.
The set $\R_0$ is the standard-class reals, which is still bigger than the actual standard
reals. We still have $1 + 17\ep + 5\ep^2 \in \R_0$ but not in $\R$.

A number is a pair of a degree $k \in \Z$ and a sequence of standard reals $(a_n)_{n\in \N}$. This is supposed
to represent
\[\ep^{-k} (a_0 + a_1\ep + a_2\ep^2  + \cdots)\]
Addition is componentwise up to shifts induced by $\ep^k$.

$\cdots$

I looked up the ultrapower construction of the nonstandard reals, and
that is definitely an important generalization of this --- what I did
above is essentially a reinvention of interpreting Laurent series as
infinitesimals/transfinite reals, and although that works, they aren't
a real closed field. I can do field operations, but I can't find
square roots or all roots of odd polynomials.

\section{Back to Spaces}

Let $\pi, \sigma : X \to [0,1]$ be some maps in $\Top$, and
let $S$ be some closed subspace of $X$, the `singular points of $X$'.
If these data satisfy the following constraints, we say that
$(X, S, \pi, \sigma)$ is a {\em confluent} space.

For any $x\in X$, there exists a unique lifting map $h$
satisfying
\[\begin{tikzcd}
\{*\} \ar[r, "x"] \ar[d, "\pi(x)"'] & X \ar[d, "\pi"] \\
{[\sigma(x),1]} \ar[r, hookrightarrow] \ar[ur, dashed, "h" description] & {[0,1]}
\end{tikzcd}\]

For every $x$ we require that $\sigma(x) \le \pi(x)$.
If $x$ is {\em  regular}, i.e. if $x\not\in S$, then we require
in fact that $\sigma(x) < \pi(x)$.

\subsection{Attempt 2}

Let $\rho, \phi : X \to [0,1]$ be some maps in $\Top$.
If these data satisfy the following constraints, we say that
$(X, \rho, \phi)$ is a {\em confluent} space.

We write $\rho * \phi$ for $\lambda t . 1 - (1 -\rho(t))(1 - \phi(t))$.
For any $f : Y \to X$, there exists a unique lifting map $h$
satisfying

\[\begin{tikzcd}
\{*\} \ar[r, "x"] \ar[d, "\phi(x)"'] & X \ar[d, "\pi"] \\
{[0,1]} \ar[r, "\rho(x) * \dash"'] \ar[ur, dashed, "h" description] & {[0,1]}
\end{tikzcd}\]

\[\begin{tikzcd}
Y \ar[r, "f"] \ar[d, "p \o f"'] & X \ar[d, "\rho * \phi"] \\
{Y \x [0,1]} \ar[r, hookrightarrow] \ar[ur, dashed, "h" description] & {[0,1]}
\end{tikzcd}\]

If $x \not\in S$, then $\rho$.

Hmm. This doesn't seem right.

\subsection{Attempt 3}

Given a map $\beta : X \to [0,1]$, we can define the type
\[G_{\beta} = (x : X) \x (i : [0,1]) \x \beta(x) \le i \]

Now let a $p : X \to G_\beta$ be given such that $\pi_1 \o p = \rid$.
Suppose we have $f : Y \to X$.
There's a canonical way to get from $G_{\beta f}$ to $G_\beta$. We
define
\[G_{\star f} : ((y : Y) \x (i : [0,1]) \x \beta(f(y)) \le i) \to \]
\[((x : X) \x (i : [0,1]) \x \beta(x) \le i) \]
\[ G_{\star f}(y, i, \theta) = (f(y), i, \theta) \]
\def\uu{{\underline\ }}
There's also a canonical way to get from
$Y$ to $G_{\beta f}$. We define
\[ 0 : Y \to G_{\beta f} \]
\[ 0(y) = (y, 0, \uu ) \]
The picture of the lifting diagram I want is the following:
\[\begin{tikzcd}
Y \ar[r, "f"] \ar[d, "0"'] & X \ar[d, "p"] \\
G_{\beta  f} \ar[r, "G_{\star f}"'] \ar[ur, dashed, "h" description] & {G_\beta}
\end{tikzcd}\]
Is the outer square commutative? I'd need
\[ G_{\star f}(0(y)) = p(f(y)) \]
which requires
\[ G_{\star f}(y, 0, \uu)  = p(f(y))\]
\[ (f(y), 0, \uu)  = p(f(y))\]

This doesn't seem right.

\subsection{Attempt 4}
The map $ \beta : X \to [0,1] $ says how much `slack' we have at each point in $X$.
The map $p : X \to G_\beta$ says how much of that slack we actually use.
The points in $\{x \st \pi_i(p(x)) = \beta(x)\}$ are where we use up all the slack
and we might actually be singular.
\[\begin{tikzcd}
\{*\} \ar[r, "x"] \ar[dd, "p(x)"'] & X \ar[d, "p"] \ar[dr, double, -]\\
& \sum\limits_{x:X} \I_{\beta(x)} \ar[d, "\pi_2"]  \ar[r, "\pi_1"'] & X \\
{\I_{\beta(x)}} \ar[r, "\iota"'] \ar[uur, dashed, "h" description] & {[0,1]}
\end{tikzcd}\]

\subsection{Attempt 5}
In ordinary dependent-type terms, let's define $\I_t = [t,1]$. There is a canonical
map $\iota : \{t : \I\} \to \I_t \to \I$.

\[ \beta : X \to \I \]
\[ p : (x : X) \to \I_{\beta(x)} \]
and then I require for every $x : X$ that there exists a unique $h : \I_{\beta(x)} \to X$
with the property that $h(p(x)) = x$, and also for any point $z \in \I_{\beta(x)}$,
we get $\iota(p(h(z))) = \iota(z)$.

So I can think of $h$ as a globally existing map
\[ h : (x : X) \to \I_{\beta(x)} \to X \]
And we postulate
\[  (x : X) \to h(x, p(x)) = x \]
\[  (x : X) (z : \I_{\beta(x)}) \to \iota(p(h(x, z))) = \iota(z) \]
Furthermore, (to capture uniqueness) if we had an $x$, and a $k : \I_{\beta(x)} \to X$
such that $k$ acted like $h\ x$, i.e.
\[  k(p(x)) = x \]
\[  (z : \I_{\beta(x)}) \to \iota(p(k(z))) = \iota(z) \]
then in fact $k = h\ x$.

\subsection{Attempt 6}

If we have a space $X$ and a projection map $p : X \to (0,1)$, we say $X$ is {\em confluent}
if for any $x\in X$ and strictly monotone $k : [0,1] \to (0,1)$ such that the outer
square commutes, we have a unique lift $h$ in
\[\begin{tikzcd}
\{*\} \ar[r, "x"] \ar[d, "0"'] & X \ar[d, "p"] \\
{[0,1]} \ar[r, "k"'] \ar[ur, dashed, "h" description] & {(0,1)}
\end{tikzcd}\]
Note that $X$ is a covering space if the monotonicity requirement is dropped.

We can imagine one such space being a subspace of another, when the following diagram
commutes, and $\iota$ is strictly monotone:
\[\begin{tikzcd}
Y \ar[r] \ar[d, "q"'] & X \ar[d, "p"] \\
{(0,1)} \ar[r, "\iota"']  & {(0,1)}
\end{tikzcd}\]

So the necessarily singular points of $X$ are those in the complement of all open
subsets of $X$ that arise as an inclusion of a covering space.

Defining a space in this way --- requiring that the set of singular
points coinductively also is confluent in another time dimension ---
unfortunately doesn't rule out some pathological cases that I think
should be ruled out.

The one I have in mind is a time-extended function where a new point
in the growing codomain comes into being, but where the time it comes
into being only exists `openly' not `closedly' --- where there is no
singular point to mark where it comes into existence. I'm not sure how
best to rule this out.

It seems almost necessary to require the evolving set to actually
exist in an ambient space. (or else require compactness of $X$, maybe)

\subsection{Attempt 7}

If we have a space $\pi : X \to [0,1]$ over the interval, then we can
make some definitions about points in $X$. Suppose we have a point $x\in X$
and subsets $U\subseteq X$ and $Y \subseteq [0,1]$ such that
$x\in U$ and  $U \subseteq \pi^{-1}(Y)$.


We say $x$ is {\em locally trivial for $U,Y$} when
there exists a unique $h : Y \to U$ such that
$h(\pi(x)) = x$ and $\forall y \in Y . \pi(h(y)) = y$.
\[\begin{tikzcd}
\{*\} \ar[r, "x"] \ar[d, "\pi(x)"'] & U \ar[d, "\pi"]\ar[r, hookrightarrow] & X  \ar[d, "\pi"]\\
{Y} \ar[r, double, -] \ar[ur, dashed, "h" description] & {Y}\ar[r, hookrightarrow] & {[0,1]}
\end{tikzcd}\]

A point $x$ is {\em locally trivial} if there exists a subset $U\subseteq X$
containing $x$ upstairs, and an open interval $(a,b) \ni \pi(x)$ downstairs such that
$x$ is locally trivial for $U,(a,b)$.

A point $x$ is {\em locally directed} if there exists a subset $U\subseteq X$
containing $x$ upstairs, and $b > \pi(x)$ downstairs such that
$x$ is locally trivial for $U,[\pi(x),b)$.

\subsection{Attempt 8}

The main thing I want to capture is:
\begin{itemize}
\item The 0-cells of this extended notion of $\rset$ are sets,
the 1-cells are {\em something like} functions,
the 2-cells, are {\em something like} functions between functions.
\item A 1-cell has a set of {\em singular points} which is a 0-cell.
\item A 2-cell's singular points form a 1-cell.
\item In general, an $(n+1)$-cell's singular points form an $n$-cell.
\end{itemize}
I might also think of operating in an extended version of $\rrel$, and pick out
the relations that happen to be functional. A relation between one set and another
looks like some space extended between the one set and another.
For example, here's a 1-cell where the domain is $\{a_1, a_2, a_3\}$ and the
codomain is $\{b_1, b_2, b_3\}$, and the interior singular points are
$\{c_1, c_2, c_3, c_4\}$.

\[\begin{tikzpicture}[
every node/.style={color=black,}
]
\coordinate (a1) at (0,2);
\coordinate (a2) at (0,4);
\coordinate (a3) at (0,5);

\coordinate (b1) at (5,1.5);
\coordinate (b2) at (5,2);
\coordinate (b3) at (5,5);

\coordinate (c1) at (2.5,2.5);
\coordinate (c2) at (2.5,4);
\coordinate (c3) at (1.75,3);
\coordinate (c4) at (4,4.5);

\draw  (a1)
  .. controls ++(0,0) and ++(-1,0) .. (c1)
  .. controls ++(1,0) and ++(0,0) .. (b1);

\draw  (a3)
  .. controls ++(0,0) and ++(-1,0) .. (c3)
  .. controls ++(0.5,0) and ++(-0.5,0) .. (c1);

\draw  (c2)
  .. controls ++(1,0) and ++(-0.25,0) .. (c4)
  .. controls ++(0.25,0) and ++(0,0) .. (b3);

\draw (a2) .. controls ++(0,0) and ++(-1,0) .. (c3);
\draw (c1) .. controls ++(1,0) and ++(0,0) .. (b2);

\fill[black] (a1) circle (2pt) node[left] {$a_1$};
\fill[black] (a2) circle (2pt) node[left] {$a_2$};
\fill[black] (a3) circle (2pt) node[left] {$a_3$};

\fill[black] (b1) circle (2pt) node[right] {$b_1$};
\fill[black] (b2) circle (2pt) node[right] {$b_2$};
\fill[black] (b3) circle (2pt) node[right] {$b_3$};

\fill[black] (c1) circle (2pt) node[above] {$c_1$};
\fill[black] (c2) circle (2pt) node[above] {$c_2$};
\fill[black] (c3) circle (2pt) node[above] {$c_3$};
\fill[black] (c4) circle (2pt) node[above] {$c_4$};

\end{tikzpicture}\]

One could imagine a 2-cell from this to

\[\begin{tikzpicture}[
every node/.style={color=black,}
]
\coordinate (a1) at (0,2);
\coordinate (a2) at (0,4);
\coordinate (a3) at (0,5);

\coordinate (b1) at (5,1.5);
\coordinate (b2) at (5,2);
\coordinate (b3) at (5,5);

\coordinate (c1) at (2.5,2.5);
\coordinate (c2) at (2.5,4);

\coordinate (c4) at (4,4.5);

\draw  (a1)
  .. controls ++(0,0) and ++(-1,0) .. (c1)
  .. controls ++(1,0) and ++(0,0) .. (b1);

\draw  (a3)
  .. controls ++(0,0) and ++(-1,0) .. (c1);

\draw  (c2)
  .. controls ++(1,0) and ++(-0.25,0) .. (c4)
  .. controls ++(0.25,0) and ++(0,0) .. (b3);

\draw (a2) .. controls ++(0,0) and ++(-1,0) .. (c1);
\draw (c1) .. controls ++(1,0) and ++(0,0) .. (b2);

\fill[black] (a1) circle (2pt) node[left] {$a_1$};
\fill[black] (a2) circle (2pt) node[left] {$a_2$};
\fill[black] (a3) circle (2pt) node[left] {$a_3$};

\fill[black] (b1) circle (2pt) node[right] {$b_1$};
\fill[black] (b2) circle (2pt) node[right] {$b_2$};
\fill[black] (b3) circle (2pt) node[right] {$b_3$};

\fill[black] (c1) circle (2pt) node[above] {$d_1$};
\fill[black] (c2) circle (2pt) node[above] {$d_2$};
\fill[black] (c4) circle (2pt) node[above] {$d_4$};

\end{tikzpicture}\]

Where we map $c_3$ and $c_1$ onto $d_1$, and $c_2$ and $c_4$ onto $d_2$,
and nothing maps onto $d_4$. This is an example of a directed $2$-cell between
undirected $1$-cells --- or to be a little more accurate, the {\em functional} summary
of a diagram that we could realize in various different ways.

What is required of the singular points? Because any point along a
path plausibly {\em could} be declared singular, I'm not going to hope
for a {\em characterization} of singular points given a space. I'm
going to ask that the declared singular points are {\em supplied} as
part of the data of the higher-dimensional space.

But the central requirement that I want to impose on the supplied
singular points is that their {\em complement} is somehow simple.

Recall the lifting diagram
\[\begin{tikzcd}
\{*\} \ar[r, "x"] \ar[d, "\pi(x)"'] & U \ar[d, "\pi"]\ar[r, hookrightarrow] & X  \ar[d, "\pi"]\\
{Y} \ar[r, double, -] \ar[ur, dashed, "h" description] & {Y}\ar[r, hookrightarrow] & {[0,1]}
\end{tikzcd}\]
The rightmost square is justified so long as $\pi^>(U) \subseteq Y$.
If the lifting is possible, then $Y \subseteq \pi^>(U)$, for the function $h$
is a witness to that. So really for an open set $U \subseteq Y$ to be sufficiently
`simple', we want to require the unique lifting
\[\begin{tikzcd}
\{*\} \ar[r, "u"] \ar[d, "\pi(u)"'] & U \ar[d, "\pi"]\\
{\pi^>(U)} \ar[r, double, -] \ar[ur, dashed, "h" description] & {\pi^>(U)}
\end{tikzcd}\]
for any $u \in U$. We just want to require that $\pi$ is an isomorphism between
$U$ and $\pi^>(U)$.

So a point is simple/regular/nice iff it has a neighborhood with this property, I guess?
Is the set of simple points necessarily open in $X$?

To rule out weird edge cases where we have an `openly' nascent element
of a set that has no singular point justifying it, maybe we can require
that the inclusion of the open interval in the closed interval is a cofibration:
for any strict monotone $g$ we require a unique lift:
\[\begin{tikzcd}
{(0,1)} \ar[r, "f"] \ar[d, hookrightarrow] & X \ar[d, "\pi"]\\
{[0,1]} \ar[r, "g"'] \ar[ur, dashed, "h" description] & {[0,1]}
\end{tikzcd}\]

\subsubsection{Some other thoughts about this}

We can think of the line segments to the left and right of each
singular point as living over it. This is sort of like having
half-edges or flags or something. We have our set $S$ of singular points,
and some fibered sets $L \to S$ and $R \to S$. The domain of the 1-cell
is something like $L \setminus R$ and the codomain something like $R \setminus L$.
A relation is functional when the map $R \to S$ is an isomorphism. Actually, maybe
we have a diagram like

\[\begin{tikzcd}
A\ar[dr] &&C\ar[dl]\ar[dr]&& B\ar[dl]\\
& L \ar[d] && R\ar[d]\\
& S&&S
\end{tikzcd}\]
where $A$ is the domain, $B$ is the codomain, and $C$ the remaining
set of intervals. The four arrows in the top row are all mono.

\subsection{Attempt 9}

What is a type theoretic account of functional morphisms?
Let me try to make a datatype that is indexed by two sets, $\tau(A, B)$.
The canonical way to construct a $\tau(A, B)$ is to build a tree for each point in the
codomain, and this `consumes' the portion of the domain $A_x$
\[
\erule
{\forall  x \cn B . e_x : \tau(A_x) \qquad A = \bigoplus_{x\in B} A_x}
{(e_x \to x \st x \in B) : \tau\left(A, B\right)}
\]
One way to build a $\tau_A$ is to consume the whole domain:
\[
\erule
{}
{\bullet_A : \tau(A)}
\]
But another way is to split $C$ ways:
\[
\erule
{e  : \tau(A, C)}
{[e]_C : \tau(A)}
\]
Let's try to do this more sequent-like.
\[
\erule
{\Delta_{1} \prov e_1 : * \qquad \cdots \qquad \Delta_{|B|} \prov e_{|B|} : *}
{\Delta_1, \ldots, \Delta_{|B|} \prov (e_1, \ldots, e_{|B|}) : B}
\]
\[
\erule
{}
{x \prov x : *}
\qquad
\erule
{\Delta \prov e : B}
{\Delta \prov [e] : *}
\]


\subsection{Attempt 10}

[ Mostly just agda thinking about defining the datatype of trees directly ]

\subsection{Attempt 11}

I want to define a nice property about diagrams like the following in $\Top$:
\[\begin{tikzcd}
A\ar[d, "p"']& U\ar[l, >->]\\
\I\x X
\end{tikzcd}\]

The space $A$ lives over the product $\I \x X$. The $\I$ is the `currently relevant' dimension, and
$X$ is actually probably a big product of copies of $\I$, but I shouldn't need to know that to make the current definition.
$U$ is an open subset of $A$. I can also view this diagram like
\[\begin{tikzcd}
A\ar[d, "\pi_1 p "']\ar[dr, "\pi_2 p" description]& U\ar[l, >->]\\
\I& X
\end{tikzcd}\]
What are the nice properties I expect of this?

For one thing, for any point $u \in U$ that lives in the `uniform' part of $A$, I think that there
should exist a neighborhood $V_u$ of $u$ such that and injective maps such that

\[\begin{tikzcd}
&U \ar[r, >->]& A\ar[d, "p"]\\
1\ar[ur, "u"]\ar[r, "v"']&V_u\ar[u, >->]\ar[r, >->]  &\I\x X
\end{tikzcd}\]

Hm, maybe this isn't right. I'm not capturing that $V_u$'s image in $\I \x X$ is open.

Furthermore I need to capture what happens in the {\em complement} of $U$ in $A$, that
some directed stuff is going on.

\subsection{Attempt 12}

A tree is a 1-tree. Its ``codomain'' is a single point, and its ``domain'' is a set.
Every stage in the 1-stree is the collaps of some sets into single points.

This makes me think that a set is a 0-tree, and its domain is a single point.

The domain of a 2-tree is a 1-tree. Is the codomain of a 2-tree also a
1-tree? Perhaps a trivial 1-tree? For every 0-tree, there is a
canonical 1-tree whose domain is that 0-tree. If $x$ is a 0-tree, then $t_x$ is
the canonical 1-tree whose domain is $x$. If $y$ is a 1-tree, then $t_y$ is
the canonical 2-tree whose domain is $y$. It collapses the whole tree $y$ into
a single node in one step.

What can a 1-tree be? It is either a leaf or a node. If it is a leaf,
it is a tree with domain $\{*\}$. If it is a node, we have a choice of
set $B$ (a choice of 0-tree) plus a {\em mapping from $B$ to 1-trees}.
The italicized phrase is one crucial thing that requires
generalization.

What can a 2-tree be? It is either a leaf or a node. If it is a leaf,
it is a 2-tree with domain and codomain being equal 1-trees. If it is
a node, we have a choice of a 1-tree $B$, and some kind of mapping
from $B$ to 2-trees. The definition of mapping from $B$ to 2-trees
could be accomplished inductively. For every node of $B$, we want to
assign to it a 2-tree of the appropriate shape.


\end{document}
