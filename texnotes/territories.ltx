\documentclass{article}
\usepackage{amssymb}
\input{theorem}

\input{prooftree}
\def\erule#1#2{\begin{prooftree}#1\justifies #2\end{prooftree}}

\usepackage{tikz}
\usepackage{tikz-cd}
\usetikzlibrary{calc}
\definecolor{morange}{rgb}{1,0.56,0}
\definecolor{lorange}{rgb}{1,0.95,0.8}
\definecolor{mgreen}{rgb}{0,0.56,0}
\definecolor{lgreen}{rgb}{0.95,1,0.8}
\definecolor{mblue2}{rgb}{0,0.2,1.0}
\definecolor{lblue}{rgb}{0.8,0.95,1}
\definecolor{mred}{rgb}{0.9,0.1,0.1}
\definecolor{mgreen}{rgb}{0.1,0.5,0.1}
\definecolor{mblue}{rgb}{0.3,0.3,0.9}
\def\bitf#1{#1 [smooth, tension=0.8] coordinates {(-1.6,2) (-1,1) (0,0)}}
\def\bitg#1{#1 [smooth, tension=0.8] coordinates {(1,2) (0.55,1) (0,0)}}
\def\bitgrev#1{#1 [smooth, tension=0.8] coordinates {(0,0) (0.55,1) (1,2)}}
\def\bitfg#1{#1 [smooth, tension=0.8] coordinates {(0,0) (0,-2) }}
\def\ups{{\uparrow}}
\def\dns{{\downarrow}}
\def\adjust{\big|}
\def\O{\mathcal{O}}
\def\rid{\mathsf{id}}
\def\ridp{\mathsf{idp}}
\def\int{\square}
\def\bd{\partial}
\def\prov{\vdash}
\def\prequiv{\dashv\vdash}
\def\imp{\Rightarrow}
\def\cqed{\hskip2mm{\vrule width .5em height .5em depth 0em}} % at the end of a |P.
\def\o{\circ}
\def\lx{\bigcirc}
\def\B{\mathbb{B}}
\def\C{\mathbb{C}}
\def\D{\mathbb{D}}
\def\X{\mathbf{X}}
\def\Y{\mathcal{Y}}
\def\x{\times}
\def\st{\mathrel|}
\def\rset{\mathbf{Set}}
\def\rcat{\mathbf{Cat}}
\def\grcat{\mathbf{GrCat}}
\def\op{\mathsf{op}}
\def\P{\mathbb{P}}
\def\I{\mathbb{I}}
\def\U{\mathbb{U}}
\def\N{\mathbb{N}}
\def\Z{\mathbb{Z}}
\def\R{\mathbb{R}}
\def\tw{\mathbf{2}}
\def\dash{\hbox{---}}
\def\dom{\mathop{\mathrm{dom}}}
\def\cod{\mathop{\mathrm{cod}}}
\def\celse{\mathrel{|}}
\def\cn{{:}}
\def\rok{\mathrel\mathsf{ok}}
\def\llam#1{\langle {#1} \rangle}
\def\mpo{\mathbf{MultOrdTop}}

\begin{document}
\tikzset{
   commutative diagrams/.cd,
   arrow style=tikz,
   diagrams={>=stealth}}
\def\says#1#2{#1\{#2\}}
\def\rand#1#2{#2_{#1}}

\title{Notes on Territories}
\author{Jason Reed}
\maketitle
\section{Goals and Non-goals}

I want to better understand how homotopy type theory can generalize to
a directed notion of space. I know that $\rcat$ isn't even locally
cartesian closed, so it's a nonstarter to imagine that the pleasing
narrative that HoTT provides, namely
\[\hbox{``all along, the types that you were programming with were secretly spaces''}\]
can simply be modified to
\[\hbox{``all along, the types that you were programming with were secretly categories''}\]

And yet I do yearn for a conclusion of the form ``all along, the types
that you were programming with were secretly $X$s'' for some structure $X$. The
Riehl-Shulman story, while correct and effective and fascinating in
its own right, bums me out slightly precisely because it only picks
out some of the types as category-like.

The goal of this note is to explore what else $X$ might be. It is not
a goal to be particularly rigorous. I'm mostly just speculating well
in advance of the territory I see clearly.
I want the $X$s to also yield information about higher-{\em dimensional}
directed structure, which carries extra risk of saying wrong or
incoherent things, since I still don't feel like I understand higher
categories terrifically well.

I'm going to call them {\em territories} since it has the same
scansion as `categories' and connotes a general sense of space-ness.

%% The sort of $X$ I have in mind, the notion of `directed space', is in
%% a way a retreat to fairly concrete stuff: in lieu of categories I
%% direct my attention to members of a sheaf category which lets you
%% probe the putative space with actual good old-fashioned honest
%% intervals from $\R$. This will mean that a a `morphism' $f : A \to B$
%% in a `directed space' will admit --- and this is crucially unlike a
%% morphism in a category! --- interpolation of all points between $A$
%% and $B$. We'll be able to ask for the domain of $f$ by asking for its
%% value at time 0, and its codomain by asking for its value at time 1,
%% but we can also ask for its value at any time in between.

%% The reason why I have any hope at all for this being interesting is I
%% conjecture appropriate higher-dimensional directed space structure
%% might allow an appropriate quotienting-out (similar to how the
%% $\infty$-groupoid structure of HoTT `quotients out' path equalities
%% while retaining the homotopical data of them) of the `interal
%% behavior' of a morphism, letting us recover a category-like view of
%% morphisms as discrete things.

\section{Toward some Definitions}

A territory is some kind of directed space.
What will the category of territories look like? Maybe it's a presheaf category
$\rset^{\P^\op}$. If so, what does $\P$ look like? Any object $P \in \P$ is a probe,
a question that we ask about a territory and get back an answer which is a set.
What questions can we ask of a directed space? Some questions we'll want to ask are:
What points does it have? What paths does it have? What higher paths does it have?

\subsubsection*{String Diagrams}
If we had a category $\C$ in our hands --- perhaps suppose also $\C$ is an $n$-category
for some $n > 1$ --- a way of asking all those questions at once is
\[\hbox{What {\em string diagrams} can we draw in $\C$?}\]

For example, if $\C$ has some objects $A, B, C$, and morphisms $f : A \to B$ and $g : B \to C$
and $h, k : A \to C$, and 2-cells $\alpha : g \o f \to h$ and $\beta : h \to k$,
then an example of a string diagram we can draw is
\[\begin{tikzpicture}
%% \node at (0,2.5)[above]  {$\I_1$};
%% \node at (-2.5,0)[left]  {$\I_2$};
\fill[fill={lorange}] (-2,2)  \bitf{--plot} \bitfg{--plot} -- (-2,-2)-- cycle;
\fill[fill={lgreen}] (2,2)  \bitg{--plot} \bitfg{--plot} -- (2,-2)--   cycle;
\fill[fill={lblue}] (0,0) \bitgrev{--plot} \bitf{--plot}  --   cycle;
\draw [mblue, line width=1.5pt] \bitf{plot};
\draw [mblue, line width=1.5pt] \bitg{plot};
\draw [mblue, line width=1.5pt] \bitfg{plot};
\node at (1,0) {$C$};
\node at (-1.25,-0.8) {$A$};
\node at (0,1.2) {$B$};
\node [mblue] at (-1.4,1) {$f$};
\node [mblue] at (0.8,1) {$g$};
\node [mblue] at (0.2,-0.5) {$h$};
\node [mblue] at (0.2,-1.5) {$k$};
\coordinate [label={[label distance=5]left:$\alpha$}] (alpha) at (0,0);
\coordinate [label={[label distance=5]left:$\beta$}] (beta) at (0,-1);
\foreach \point in {alpha,beta}
\fill [black] (\point) circle (2pt);
\end{tikzpicture}\]
This is a 2-dimensional string diagram; it depicts a composition of 2-cells.

String diagrams naturally can also be 1-dimensional, they're just less fancy-looking:
\[\begin{tikzpicture}
\coordinate [label={[label distance=5]below:$f$}] (f) at (-1.4,0);
\coordinate [label={[label distance=5]below:$g$}] (g) at (0.55,0);
\draw [morange, line width=1.5pt] (-2,0)--(f);
\draw [mblue2, line width=1.5pt] (g)--(f);
\draw [mgreen, line width=1.5pt] (g)--(2,0);
\node at (-1.8, 0)[above, morange] {$A$};
\node at (-0.3, 0)[above, mblue2] {$B$};
\node at (1.5, 0)[above, mgreen] {$C$};
\foreach \point in {f,g}
\fill [black] (\point) circle (2pt);
\end{tikzpicture}\]
\[\begin{tikzpicture}
\coordinate [label={[label distance=5]below:$h$}] (h) at (0,0);
\draw [morange, line width=1.5pt] (-2,0)--(h);
\draw [mgreen, line width=1.5pt] (h)--(2,0);
\node at (-1, 0)[above, morange] {$A$};
\node at (1, 0)[above, mgreen] {$C$};
\foreach \point in {h}
\fill [black] (\point) circle (2pt);
\end{tikzpicture}\]
So for each $n \in 1, 2, 3, \ldots$ let's suppose that there is an object $P_n \in \P$
which is what we use to probe for $n$-dimensional string diagrams. If
$F \in \rset^{\P^\op}$ is a presheaf, then $F(P_1)$ is meant to be interpreted
as the set of 1-dimensional paths in $F$, and $F(P_2)$ is 2-dimensional string diagrams,
and so on.

\subsubsection*{Identity of String Diagrams}
Here's an important question I want to settle early: are
\[\begin{tikzpicture}
\coordinate [label={[label distance=5]below:$f$}] (f) at (-1.4,0);
\coordinate [label={[label distance=5]below:$g$}] (g) at (0.55,0);
\draw [morange, line width=1.5pt] (-2,0)--(f);
\draw [mblue2, line width=1.5pt] (g)--(f);
\draw [mgreen, line width=1.5pt] (g)--(2,0);
\node at (-1.8, 0)[above, morange] {$A$};
\node at (-0.3, 0)[above, mblue2] {$B$};
\node at (1.5, 0)[above, mgreen] {$C$};
\foreach \point in {f,g}
\fill [black] (\point) circle (2pt);
\end{tikzpicture}\]
and
\[\begin{tikzpicture}
\coordinate [label={[label distance=5]below:$f$}] (f) at (0,0);
\coordinate [label={[label distance=5]below:$g$}] (g) at (1,0);
\draw [morange, line width=1.5pt] (-2,0)--(f);
\draw [mblue2, line width=1.5pt] (g)--(f);
\draw [mgreen, line width=1.5pt] (g)--(2,0);
\node at (-1, 0)[above, morange] {$A$};
\node at (0.5, 0)[above, mblue2] {$B$};
\node at (1.5, 0)[above, mgreen] {$C$};
\foreach \point in {f,g}
\fill [black] (\point) circle (2pt);
\end{tikzpicture}\]
to be considered the {\em same} string diagram? Perhaps surprisingly, I'm going to say {\em no}.
Directly contrary to the usual reason that we use string diagrams --- which is that
we can freely push and pull around parts of the diagram in topologically plausible ways,
and be assured that it's really the same data we're talking about --- I'm {\em not}
going to take that for granted. My intention/hope is that kind of invariance emerges from
the machinery described later on.

The story that a 1-dimensional string diagram tells, at least according to
how I'm trying to set things up, is not merely an {\em abstract} sequence of events, like
\begin{quote}
We start in state $A$. We transition, via morphism $f$, to state $B$. Then we transition,
via morphism $g$, to state $C$.
\end{quote}
but rather something involving {\em concrete} passage of time, like
\begin{quote}
At time 0, we start in state $A$. We transition, at time $t = 0.5$, via morphism $f$, to state $B$.
Then we transition, at time $t = 0.75$, via morphism $g$, to state $C$, remaining there until
the final time 1.
\end{quote}
\subsubsection*{Morphisms in $\P$}
What morphisms should exist in $\P$? From the above considerations, we might suppose
that if we do have a 1-dimensional string diagram which tells a story of how
we make state transitions in time, then if we {\em reparameterize} time in a sensible
way, the resulting string diagram should at least {\em be} a valid path, even if it is considered
a different one from the original.

So let us decide that the morphisms $P_1 \to P_1 \in \P$ are all monotone continuous maps of the real interval
$[0,1]$ to itself. If I take a path $p \in F(P_1)$ and a reparameterization $f : [0,1] \to [0,1]$,
then consider the path $p' = F(f)(p) \in F(P_1)$. We can think of $p$ as a map from $t\in [0,1]$
to ``what is going on in path $p$ at time $t$''. Then ``what is going on in path $p'$ at time $t$''
is defined as ``what is going on in path $p$ at time $f(t)$''.

If $f$ is not surjective then the restriction $p'$ is a sort of
zooming-in on a portion of path $p$; this reflects the intuition that
if we have a valid path $p$ in a space, then a subpath of that path is
also a valid path in that space.
\end{document}

Consider the category $\mpo$ of topological spaces equipped with multiple preorders, indexed by natural numbers.
We write $a \le_n b : X$ to say that $a \le b$ according to the $n^{th}$ preorder in $X$. Maps between
sets are required to be continuous, and monotone in all orders simultaneously.

Define a family of objects $C_n \in \mpo$ as follows. The underlying topological space of every $C_n$ is going to be
the interval $[0,1] \in \R$. The relations are defined by inference rules

\[
\erule
{}
{x \le_m x : C_{n}}
\qquad
\erule
{m < 2n+1}
{x \le_n y : C_{m}}
\qquad
\erule
{x \le y : [0,1]}
{x \le_n y : C_{2n+1}}
\]

In $C_0$, everything is related to everything else at every relation. In $C_1$, everything
is related to everything else at $\le_1$ and above, but $\le_0$ is the familiar total order on
$[0,1]$. In $C_2$, everything is related to everything else at $\le_1$ and above, but we have
only reflexivity at $\le_0$.

A sense of the morphisms that exist between these objects is given by the following diagram:
\[\begin{tikzcd}
  \cdots \ar[r] &
  C_5 \ar[loop, out=110,in=70, red, distance=1em] \ar[r] &
  C_4 \ar[loop, out=110,in=70, distance=1em] \ar[r] &
  C_3 \ar[loop, out=110,in=70, red, distance=1em] \ar[r] &
  C_2 \ar[loop, out=110,in=70, distance=1em] \ar[r] &
  C_1 \ar[loop, out=110,in=70, red, distance=1em] \ar[r] &
  C_0 \ar[loop, out=110,in=70, distance=1em]
\end{tikzcd}\]
where black arrows indicate arbitrary continuous maps, and red arrows indicate monotone maps.
We can define $\I_n = C_{2n-1}$ (`the directed $n$-time interval') and $\U_n = C_{2n-2}$ (`the undirected $n$-time interval')
and see this as
\[\begin{tikzcd}
  \cdots \ar[r] &
  \I_3 \ar[loop, out=110,in=70, red, distance=1em] \ar[r] &
  \U_3 \ar[loop, out=110,in=70, distance=1em] \ar[r] &
  \I_2 \ar[loop, out=110,in=70, red, distance=1em] \ar[r] &
  \U_2 \ar[loop, out=110,in=70, distance=1em] \ar[r] &
  \I_1 \ar[loop, out=110,in=70, red, distance=1em] \ar[r] &
  \U_1 \ar[loop, out=110,in=70, distance=1em]
\end{tikzcd}\]
The vague intuition behind the phrase `$n$-time' is that it's supposed to represent a time coordinate that increases as
we proceed through the action of an $n$-cell in a higher category. The structure $\U_n$ represents the time coordinate
for an invertible $n$-cell. Thus all the data of a (general, not assumed to be invertible)
$n$-cell is some kind of map from $\I_1 \x \cdots \x \I_n$ into a space.

So let $\P$ be the full subcategory of $\mpo$ whose objects are all finite products of $C_n$.
Consider the Grothendieck topology on the presheaf category $\hat \P$ that says a sieve on $C_{n_1} \x \cdots \x C_{n_m}$
is covering if in fact the union of the ranges of all the morphisms in the sieve cover $[0,1] \x \cdots \x [0,1]$.

The category of sheaves on this site is named $\grcat$, the category of ---
let's call them `gradual categories'. Calling them categories is an
abuse of terminology at this point (like how a contravariant functor
$\C \to \D$ is not a special kind of functor $\C \to \D$) but I hope to justify it by
showing how they are category-like.

\section{Things I don't know}

I definitely don't know how the elim rule could look for the types $\U_n$.
Let's review how equality induction works. Reading off what's in the HoTT book, if
\[D : (x,y:A) (p : x = y) \to \rset\]
\[d : (a : A) \to D(a,a,\ridp_a)\]
then
\[\mathsf{ind_=}(D, d) : (x,y:A) (p:x=y) \to D(x,y,p)\]
with a $\beta$-reduction
\[\mathsf{ind_=}(D, d, a, a, \ridp_a) \mapsto d(a) \]

The sort of thing I'm hoping for --- especially to justify the `affine' picture of the world in which $\I$ and $\U$ are
$\Z$-subscripted rather than $\N$-subscripted, and there's nothing particularly special about the $0$ index --- is
a principle something like the utterly straightforward generalization to the following:

If
\[D : (x,y:A) (p : x =_n y) \to \rset\]
\[d : (a : A) \to D(a,a,\ridp_{n;a})\]
and
\[\hbox{\em some other condition on $A$ or $D$, perhaps?} \]
then
\[\mathsf{ind_=}(D, d) : (x,y:A) (p:x=_ny) \to D(x,y,p)\]
with a $\beta$-reduction
\[\mathsf{ind_=}(D, d, a, a, \ridp_{n;a}) \mapsto d(a) \]

My gut sense for what the {\em some other condition} has to be is that it requires the absence of
interesting structure {\em below} dimension $n$.

I think what I want to require is that an equality in a type
$X$ at dimension $n$ implies equality for all lower dimensions: if $x =^X_n y$
and $m < n$, then $x =^X_m y$. For the It's still not totally
clear to me how I want to express that the fact that the maps
$x =^X_m y \to x=^X_n y$ and $x =^X_n y \to x=^X_m y$ are mutually
inverse, though.

This means that I might have been thinking about this all backwards. With respect to
low-dimensional equality probes, spaces become more tightly bound together, more incoherent,
not more discrete.


Let's stare at the non-path-dependent case a bit, and imagine that we are in a world where
$\U_1$ is the `base equality'. I expect that in that case, where by default $D$ and $A$
both lack any structure below dimension 1, that the equality elim

\[
\erule
{D : (x,y:A) \to \rset \qquad d : (a : A) \to D(a,a)}
{\mathsf{ind_{=_1}}(D, d) : (x,y:A) (p:x=_1 y) \to D(x,y)}
\]

just holds full stop. The thing I want to exercise my intuitions on is the $2$-equality elimination

\[
\erule
{D : (x,y:A) \to \rset \qquad d : (a : A) \to D(a,a) \qquad \hbox{\em other condition}}
{\mathsf{ind_{=_2}}(D, d) : (x,y:A) (p:x=_2 y) \to D(x,y)}
\]

which I want to justify by setting {\em other condition} to something prohitibiting interesting
$1$-structure in $D$ or $A$. Alternatively I could think of this prohibition more positively
as the ability to transform any $2$-structure I find into $1$-structure ---
I can promote a $\U_2$-path into a $\U_1$-path. Intuitively from $x =_2 y$ I feel like
by functoriality alone I should have $D(x,x) =_2 D(x,y) : \rset$. It would take
$D(x,x) =_1 D(x,y) : \rset$ to actually be able to transport $d(x) : D(x,x)$ over to $D(x,y)$.
So maybe {\em other condition} needs only be applied to $D$, that
all of its $2$-paths imply $1$-paths, and that somehow lets us
take a 2-path in $\rset$ to actual transport.

On the other hand I'm pretty sure that elimination of directed paths cares about how the
arguments of $D$ are used; something like
\[
\erule
{D : (x:A^\op ,y:A) \to \rset \qquad d : (a : A) \to D(a,a) \qquad \hbox{\em other conditions?}}
{\mathsf{ind_{\le_1}}(D, d) : (x,y:A) (p:x\le_1 y) \to D(x,y)}
\]
but how $d$ can even be well-formed when it uses $a$ co- and contravariantly is unclear.

A thing that presently seems to anchor the meaning of the dimension indices is the fact
that $\rset$, at dimension 1, has functions for $\I_1$ paths.

Is it any easier to think about mere transport, instead of general induction?
What I have for $\U_1$ transport is
\[
\erule
{D : (x:A) \to \rset \qquad a  : A \qquad d :  D(a) }
{\mathsf{coe_{=_1}}(D, d) : (b :A) (p:a =_1 b) \to D(b)}
\]
and what I suspect for $\U_2$ transport is something like
\[
\erule
{D : (x:A) \to \rset \qquad a  : A \qquad d :  D(a) \qquad \hbox{\em other condition}}
{\mathsf{coe_{=_2}}(D, d) : (b : A) (p:a =_2 b) \to D(b)}
\]
So in this case the gap I need to cross is exactly having $D(a) =_2 D(b) : \rset$, and
needing $D(a) =_1 D(b) : \rset$. The sort of condition I was picturing that {\em each} fiber
of the fibration $x : A \prov D : \rset$ is trivial under dimension 2 would look more like
$(x : A) \to (\U_2 \to D(x)) \to (\U_1 \to D(x))$, which I think is a weaker and insufficient
constraint. I need to pay more attention to what happens between fibers, I think.

For the entire type family $D$ to be sufficiently trivial under dimension 2, I do think I need
the entailment
\[
\erule
{D(a) =_2 D(b) : \rset}
{D(a) =_1 D(b) : \rset}
\]
and probably instead of requiring this as a functional input to the transport (or induction)
rules this should be something that falls out naturally as a consequence of how we allow $D$
to be syntactically be built up, but naturally I don't know how yet.
\end{document}
