\documentclass{article}
\usepackage[tmargin=0.15in, bmargin=0.15in]{geometry}
\input{theorem}
\input{prooftree}
\usepackage{relsize}
\usepackage{stmaryrd}
\usepackage{latexsym}
\usepackage{yfonts}
\usepackage{amsmath}
\usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
\usepackage{tikz}
\usetikzlibrary{calc,arrows,cd,decorations.pathreplacing}
\usetikzlibrary{decorations.pathmorphing}
\usepackage{tcolorbox}
\tcbuselibrary{breakable}
\usepackage{listings}
\lstset{basicstyle=\ttfamily\footnotesize,breaklines=true}

\def\zed{\emptyset}
\def\lint{{\textstyle\int}}
\def\isopen{\textcolor{orange}{\mathlarger{\mathlarger{\mathlarger{\textbf ?}}}}}
\def\isok{\textcolor{green}{\mathlarger{\mathlarger{\mathlarger{\checkmark}}}}}
\def\isbad{\textcolor{red}{\mathlarger{\mathlarger{\mathlarger{\x}}}}}
\def\chave{\eqno \textcolor{blue}{\hbox{have}}}
\def\cset{\eqno \textcolor{green}{\hbox{set}}}
\def\cwant{\eqno \textcolor{orange}{\hbox{want}}}
\def\gol{\sqsubset}
\def\gor{\sqsupset}

\def\sp{\bullet}
\def\ot{\leftarrow}
\def\prequiv{\dashv\vdash}
\def\fdom{{\mathbf{d}f}}
\def\fcod{{\mathbf{e}f}}
\def\fidom{\mathbf{\bar d}f}
\def\ficod{\mathbf{\bar e}f}

\def\thn{\mathrel|}
\def\coe{\mathsf{coe}}
\def\bpush{\mathbf{push}}
\def\bpull{\mathbf{pull}}

\definecolor{blu}{rgb}{0.1,0.5,1}
\definecolor{orng}{rgb}{1,0.5,0.3}

\def\wo{\setminus}
\def\fA{\mathsf{A}}
\def\fC{\mathsf{C}}
\def\fX{\mathsf{X}}
\def\ff{\mathsf{f}}
\def\fm{\mathsf{m}}
\def\rspan{\mathsf{Span}}
% \def\El#1{\mathsf{El}({#1})}
\def\El#1{\ulcorner{#1}\urcorner}
\def\U{\mathsf{U}}
\def\uu{\mathsf{u}}
\def\uni{\U}
\def\mor#1#2{#1 \to \underline{#2}}

\def\ridp{\mathsf{idp}}
\def\ssem#1{\langle\!\langle{#1}\rangle\!\rangle}

\definecolor{lred}{rgb}{0.95,0.8,0.8}
\definecolor{cyan}{rgb}{0.80,0.95,0.95}
\definecolor{lorange}{rgb}{0.95,0.90,0.80}
\definecolor{bluegray}{rgb}{0.6,0.6,0.85}
\definecolor{lgray}{gray}{0.8}
\newtcolorbox{declbox}{colframe=lred,colback=lred,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}
\newtcolorbox{thmbox}{colframe=cyan,colback=cyan,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}
\newtcolorbox{defnbox}{colframe=lorange,colback=lorange,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}
\newtcolorbox{tangentbox}{colframe=lgray,colback=lgray,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}

\input{linear}
\def\rpath#1{[#1]}
\def\rfst{\mathsf{fst}\,}
\def\rsnd{\mathsf{snd}\,}
\def\bunfold{\mathbf{unfold}}
\def\bfold{\mathbf{fold}}
\def\susp#1{\langle {#1} \rangle}
\def\ssusp#1{\langle\!\langle {#1} \rangle\!\rangle}
\def\dto{\mathrel{\dot\to}}
\def\dns{{\downarrow}}
\def\ups{{\uparrow}}
\def\sprov{\Vdash}
\def\signat{{\color{red}\Sigma}}
\def\ep#1{\underline{#1}}
\def\wat{\mathbin{@}}
\def\wwat{\mathbin{\underline\wat}}
\def\cn{{:}}
\def\dv{{\div}}
\def\ww{{\mathsf w}}
\def\base{{\textfrak b}}

\def\N{{\mathbb N}}
\def\Z{{\mathbb Z}}
\def\munit{I}
\def\tt{{\mathsf t}}
\def\ii{{\mathbb I}}
\def\T{\mathbb{T}}
\def\tw{\mathsf{Tw}}
\def\sw#1{^{#1}_{#1}}
\def\TP{\mathbf{TPre}}
\def\pp{\textsf{\textbf p}}
\def\nn{{\mathsf n}}
\def\PP{\textsf{\textbf P}}
\def\NN{\textsf{\textbf N}}
\def\zz{{\mathsf z}}
\def\sem#1{[\![#1]\!]}
\def\usem#1{\lceil\!\!\lceil{#1}\rceil\!\!\rceil}
\def\zem#1{\langle\!\langle#1\rangle\!\rangle}
\def\col#1{{\mathsf{C}}_{#1}}
\def\lax{\mathop\bigcirc}
\def\rjust{\mathsf{just}}
\def\rcvt{\mathsf{cvt}}
\def\rtype{\mathsf{type}}
\def\rdtype{\mathsf{disc}}
\def\rkind{\mathsf{kind}}
\def\rmode{\mathsf{mode}}
\def\rprel{\mathbf{Prel}}
\def\rrfam{\mathbf{Rfam}}
\def\rset{\mathbf{Set}}
\def\rfinset{\mathbf{FinSet}}
\def\rrel{\mathbf{Rel}}
\def\rcat{\mathbf{Cat}}
\def\rfam{\mathbf{Fam}}
\def\binj{\mathbf{inj}}
\def\rid{\mathsf{id}}
\def\rtrue{\mathrel\mathrm{true}}
\def\pbck{\ar[dr, phantom, pos=0, "\lrcorner"]}
\def\bpbck{\ar[ddrr, phantom, pos=0, "\lrcorner"]}
\def\erule#1#2{\begin{prooftree}#1\justifies #2\end{prooftree}}
\def\lpar{\bindnasrepma}
\def\lamp{\binampersand}
\def\btwo{\mathbf{2}}
\def\bone{\mathbf{1}}

\newarrow {Equiv} =====
\def\FinSet{\mathbf{FinSet}}
\def\x{\times}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\def\mapt{\ar[ddd,mapsto,shorten <=2em, shorten >=2em]}
\def\A{\mathbf{A}}
\def\B{\mathbf{B}}
\def\C{\mathbf{C}}
\def\G{\mathbf{G}}
\def\D{\mathbf{D}}
\def\DD{\mathbb{D}}
\def\E{\mathbf{E}}
\def\M{\mathbf{M}}
\def\pair#1#2{\langle#1,#2\rangle}
\def\ltri{{\lhd}}
\def\rtri{{\rhd}}
\def\tri{\rhd}
\def\ll{{<}}
\def\rr{{>}}
\def\cc{\mathsf{c}}
\def\dd{\mathsf{d}}
\def\o{\circ}
\def\rctx{\,\mathsf{ctx}}
\def\rdctx{\,\mathsf{dctx}}
\def\del{\partial}
\def\also#1{\ \textcolor{blue}{\celse #1}}
\newcounter{nodemaker}
\setcounter{nodemaker}{0}
\def\twocell#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift left=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift right=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\twocellswap#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift right=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift left=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\author{Jason Reed}
\definecolor{fib}{HTML}{ff7f00}
\definecolor{green}{HTML}{007f00}
\definecolor{red}{HTML}{df3f3f}
\definecolor{opfib}{HTML}{007fff}

% For lightening colors I used
% http://trycolors.com/ 6 parts white to 1 part color
\definecolor{opfibl}{HTML}{DBEDFF}
\definecolor{greenl}{HTML}{DBEDDB}
\definecolor{redl}{HTML}{FAE4E4}
\def\njudge#1{\fcolorbox{opfib}{white}{#1}}
\def\nrule#1{\fcolorbox{white}{opfibl}{#1}}
\def\neqn#1{\fcolorbox{white}{redl}{#1}}



\def\judge#1{\vskip 2em\noindent \njudge{$#1$}\vskip 0.5em\noindent}
\def\rule#1{\vskip 2em \noindent \nrule{$#1$}\vskip 0.5em\noindent}
\def\eqn#1{\vskip 2em \noindent \neqn{$#1$}\vskip 0.5em\noindent}
\def\prof{\nrightarrow}
\def\tensor{\otimes}
\def\htensor{\mathrel{\hat\otimes}}
\def\lol{\multimap}
\def\hlol{\mathrel{\hat\multimap}}
\def\wtf{{\color{red}???}}

\def\re{\mathbf{E}}
\def\sh{\sharp}
\def\shp{\mathrel{\sharp}}
\def\zero{\texttt{0}}
\begin{document}

\def\
\tikzset{
   commutative diagrams/.cd,
   arrow style=tikz,
   diagrams={>=stealth}}

\def\doubs#1{{}^{{#1}^\op}_{\x {#1}}}
\def\doub#1{{#1}^\op \x {#1}}

\section{Collecting Examples, Again}
$\forall$ means end and $\exists$ means coend. The variable
$a$ is free in the top and bottom of every rule, and there is an implicit end over it.
Rules marked $\star$ are newly proved below in this document.

\[
\erule
{ F \sw {a a}}
{ \exists b. F \sw {a b}}
\isbad
\qquad
\erule
{ F^a_a \to G\sw a}
{\left(\forall b. F^b_b\right) \to  G\sw a}
\isbad
\]
\[
\erule
{ F^a_{a t\sw a} \x H^{a t\sw a}_a}
{ \exists b. F^a_{a b} \x H^{a b}_a}
\isopen
\qquad
\erule
{  F^{a}_{a t^a_a} \x H^{a t^a_a}_{a } \to G^a_a}
{ \left(\forall b. F^a_{ab} \x H^{a b}_{a }\right) \to G^a_a}
\isok
\]
\[
\erule
{ F^a_{a t_a} \x H^{a t_a}_a}
{ \exists b. F^a_{a b} \x H^{a b}_a}
\isok
\qquad
\erule
{ F^a_{a t\sw a} }
{ \exists b. F^a_{a b}}
\isok
\]
\[
\erule
{\using \isok}
{ \left(\forall b. F\sw {a b}\right) \to  F\sw {a t\sw a}}
\qquad
\erule
{ \using \isok \star}
{ F\sw {a t\sw a} \to \exists b. F\sw {a b} }
\]
\[
\erule
{G\sw a \to H^a_{at\sw a}
\using \isok  \star}
{  F\sw {a t\sw a} \x G^{a}_{a} \to \exists b. F\sw {a b}\x H^a_{ab} }
\]

Counterexample to the first $\isbad$ is the ``$\lrcorner$''-shaped diagram in 6.6.2 of \texttt{2018-07-04}. Counterexample to the second is $F = 0111$ and $G = 0112$.
I was going to add
\[
\erule
{ F^{a t_a}_{a t_a}}
{ \exists b. F^{a b}_{a b} }
\isbad
\]
as an open example, but I realize it's a special case of the first counterexample,
with $t$ the identity functor.

Another good thing to observe is the rule
\[
\erule
{G\sw a \to H^a_{at\sw a}
\qquad
G\sw a \to F\sw {a t\sw a}
\using \isbad  \star}
{   G^{a}_{a} \to \exists b. F\sw {a b}\x H^a_{ab} }
\]
is no good; just substitute $1$ for $G$ and $H$, and set $t^x_y = y$, and we're
back to counterexample number one again. This is the kind of thing that {\em does}
feel very much like focusing to me --- we seem to be pressured to {\em already have}
$F\sw{a t\sw a}$ `in the context'.
\subsection{Existential Version of Identity}
\[
\erule
{\using \isok}
{ F\sw {a t\sw a} \to \exists b. F\sw {a b} }
\]
We are trying to make $M_d : F\sw {d t\sw d} \to \exists b. F\sw {d b} $, so
we set $M_d (x) = \pair {t^d_d} x$. Want to check the end-property
that
\[(\exists b . F_f) \o M_d \o  F_{\cdot t^f}^{f t_f} = (\exists b . F^f) \o M_e \o F_{ft_f}^{\cdot t^f} \]
i.e.
\[ (x : F^{et^e_d}_{dt^d_e}) \to \pair {t^d_d} {F_{f t^f}^{f t_f} x} = \pair {t^e_e} {F_{f t_f}^{f t^f} x} : \exists b . F^{db}_{eb}\]
for which it would suffice
\[ (y : F^{dt^e_d}_{et^d_e}) \to \pair {t^d_d} {F_{\cdot t^f}^{\cdot t_f} y} = \pair {t^e_e} {F_{\cdot t_f}^{\cdot t^f} y} : \exists b . F^{db}_{eb}\]
and I can reason
\[\begin{tikzcd}
{[eeee]}\ar[from=dd]  &&\exists b . F^{db}_{eb}\ar[from=dl, "\iota"']\ar[from=dr, "\iota"]\ar[from=ll, "\iota"']\ar[from=rr, "\iota"] &&  {[dddd]}\ar[from=dd]\\
 & {[dede]}\ar[from=dr]\ar[from=dl] && {[eded]}\ar[from=dr]\ar[from=dl] \\
 {[eede]} \ar[from=rr]&& {[edde]} && {[eddd]}\ar[from=ll]
\end{tikzcd}\]
Where $[ijk\ell]$ means $F^{d t^i_j}_{e t^k_\ell}$.

\subsection{An Important Case For Existentials and Products}
\[
\erule
{G\sw a \to H^a_{at\sw a}
\using \isok}
{  F\sw {a t\sw a} \x G^{a}_{a} \to \exists b. F\sw {a b}\x H^a_{ab} }
\]
We have $L_d : G^d_d \to H^d_{dt\sw d}$. We know the end-property
\[H_{ft_f} \o L_d \o  G^f = H^f_{t^f} \o L_e \o G_f \chave\]

We are trying to make $M_d :  F\sw {d t\sw d} \x G\sw d \to \exists b. F\sw {d b} \x H^d_{db}$, so
we set
\[M_d (x, z) = \pair {t^d_d} {x, L_d(z)}\]
 Want to check the end-property
that
\[(\exists b . F_f \x H_f) \o M_d \o  (F_{\cdot t^f}^{f t_f} \x G^f) = (\exists b . F^f \x H^f) \o M_e \o (F_{ft_f}^{\cdot t^f} \x G_f) \]
i.e.
\[ (x : F^{et^e_d}_{dt^d_e}) (z : G^e_d) \to \pair {t^d_d} {F_{f t^f}^{f t_f} x, H_f L_dG^f z}
= \pair {t^e_e} {F_{f t_f}^{f t^f} x, H^fL_eG_f z} \cwant\]
\[: \exists b . F^{db}_{eb} \x H^{d}_{eb} \]

I appear to be blocked on applying the {\em end} property that I have,
for lack of $t^f$/$t_f$ appearing here in the rightmost component of the tuple. However,
maybe I can exploit the coend property since $H$ is covariant in $b$. I know
the coend property of $\exists b .  C^b_b$ tells me that for any $s : u \to v$
and $K : C^v_u$ that
\[ \pair u {C^s K} = \pair v {C_s K}\]
so the coend property for $\exists b . F\sw{ab} \x H^a_{ab}$ tells me that for any
$s : u \to v$ and $K : F^{av}_{au} \x H^a_{au}$ that
\[ \pair u {F^{\cdot s} K^1, K^2} = \pair v {F_{\cdot s} K^1, H_{\cdot s} K^2}\]
That unadorned $K^2$ there is the thing giving me hope! So let me guess that I want
$u = t^d_d$ and $v = t^d_e$ and
$s = t_f : t\sw d \to t^d_e$ and $K^1 = F^{f}_{ft^f} x$ and $K^2 = H_f L_d G^f z$.
Then I get
\[ (x : F^{et^e_d}_{dt^d_e}) (z : G^e_d) \to \pair {t^d_d} {F_{f t^f}^{f t_f} x, H_f L_dG^f z}
= \pair {t^d_e} {F_{f t^f_f}^{f } x, H_{f t_f} L_dG^f z} \]
\[: \exists b . F^{db}_{eb} \x H^{d}_{eb}\]
and {\em now} we can use the end-property we have to see this is the same as
\[ (x : F^{et^e_d}_{dt^d_e}) (z : G^e_d) \to \pair {t^d_d} {F_{f t^f}^{f t_f} x, H_f L_dG^f z}
= \pair {t^d_e} {F_{f t^f_f}^{f } x, H^{f}_{\cdot t^f} L_eG_f z} \chave \]
\[: \exists b . F^{db}_{eb} \x H^{d}_{eb}\]
and we can also use the {\em coend} property with $u = t^e_e$ and $v = t^d_e$
and $s = t^f : t\sw e \to t^d_e$
and $K^1 = F^f_{f t_f} x$ and $K^2 = H^f L_e G_f z$ to see
\[ (x : F^{et^e_d}_{dt^d_e}) (z : G^e_d) \to
 \pair {t^e_e} {F_{f t_f}^{f t^f} x, H^f L_eG_f z}
= \pair {t^d_e} {F_{f t^f_f}^{f } x, H^{f}_{\cdot t^f} L_eG_f z} \chave \]
\[: \exists b . F^{db}_{eb} \x H^{d}_{eb}\]
and combining the two `have's I get my goal by transitivity.

\section{Formaling the Question of Which Connectives Exist}
If I consider a polarized language that leaves out the shifts:
\[
\begin{tabular}{rccl}
Positives&$P$&$::=$&$\exists x . P \celse P \tensor P \celse P \oplus P \celse 1 \celse 0\celse p(\vec t)$\\
Negatives&$N$&$::=$&$\forall x . N \celse P \lol N \celse N \amp N \celse \top \celse n(\vec t)$
\end{tabular}
\]

Then there's a specific `megaconnective' inference rule associated
with each positive and negative proposition. This can be expressed like so:


There is direct end/coend interpretation of each proposition. This will be the conclusion
of the rule. For this we require that $p$ and $n$ be given functorial interpretations.
If $\Delta \prov P : \rtype$, then $\sem P : \sem \Delta \to \rset$ is a functor,
with the usual thing about $\sem \Delta$ including the co- and contravariant versions
of every variable in $\Delta$. This is defined by
\[ \sem{\exists x . P}_\delta = \int^x \sem P_\delta \qquad  \sem{\forall x . N}_\delta = \int_x \sem N_\delta\]
\[ \sem{P\tensor P}_\delta = \sem P_\delta \x \sem P_\delta \qquad  \sem{N \amp N}_\delta = \sem N_\delta \x \sem N_\delta\]
\[ \sem{P\oplus P}_\delta = \sem P_\delta + \sem P_\delta \qquad  \sem{P \lol N}_\delta = \sem P_{\bar \delta} \to \sem N_\delta\]

The thing I need to express is what it means for a list of functors
$\Phi = F_1, \ldots, F_n$ to `count as' a premise
for a rule. Maybe these functors have different sources? If we need that, we
give them names like $F_i : \sem{\Delta_i} \to \rset$. But I think I may not
need that. We're only trying to capture the {\em synchronous} rules of megaconnectives,
so maybe we won't be varying the $\Delta$ context in the course of unpacking
one such rule. We have rules like
\[
\erule
{\Phi \prov [P_1]  }
{\Phi \prov [P_1 \oplus P_2] }
\qquad
\erule
{\Phi \prov [P_2] }
{\Phi \prov [P_1 \oplus P_2] }
\]
\[
\erule
{\Phi_1 \prov [P_1] \qquad \Phi_2 \prov [P_1] }
{\Phi_1, \Phi_2 \prov [P_1 \times P_2] }
\]
No, wait, I'm off to a slightly wrong start. This scheme isn't taking into
account focusing forcing things to be in the context.
If my proposition I start with is $\exists x . p \tensor n$, then the derived inference rule
is something like
\[
\erule
{\Gamma \prov n(t)}
{\Gamma, p(t) \prov [\exists x . p(x) \tensor n(x)]}
\]
So what I really want to say is that there is some relation
established between a sequence of functors $\sem \Delta \to \rset$
(these being all the premises, considered as ends over the free
variables from $\Delta$) to a functor that is supposed to be a conclusion
from them.

\def\seq{\longrightarrow}
I think this means that the actual data I want the judgment to be over is like
\[ \Phi \seq_\Delta \Gamma \prov [P] \]
\[ \Phi \seq_\Delta \Gamma [N] \prov Q \]
for $\Phi$ being a sequence of $\sem{\Delta} \to \rset$ functors, and $\Gamma$
and $P$ and $N$ and $Q$ being individual such functors. These judgments mean
that {\em if} we have inhabitants for all of
$(\int_{\delta\in  \Delta} F_\delta \st F \in \Phi)$, then we can make an
inhabitant of $\int_{\delta\in\Delta} \Gamma_\delta \to P_\delta$ or
$\int_{\delta\in\Delta} \Gamma_\delta \x N_\delta \to Q_\delta$
as appropriate.

I think the moding is therefore that $\Phi$ is thought of as output,
and we have to be clever enough to `guess' a $\Gamma/Q$ that eventually
matches up with focused atoms.
 In the quantifier rules, we have to guess
the instantiation as well.
\[
 \erule
{\Phi \seq_\Delta \Gamma \prov [[t/x] P]}
{ \Phi \seq_\Delta \Gamma \prov [\exists x . P] }
\qquad
 \erule
{\Phi \seq_\Delta \Gamma [[t/x]N] \prov Q}
{ \Phi \seq_\Delta \Gamma  [\forall x . N] \prov Q}
\]
\[
\erule
{\Phi_1 \seq_\Delta \Gamma \prov  [P_1]\qquad \Phi_2 \seq_\Delta \Gamma \prov  [P_2]}
{ \Phi_1, \Phi_2 \seq_\Delta \Gamma \prov [P_1 \otimes P_2] }
\]
\[
\erule
{\Phi_1 \seq_\Delta \Gamma \prov  [P]\qquad \Phi_2 \seq_\Delta \Gamma[N] \prov  Q}
{ \Phi_1, \Phi_2 \seq_\Delta \Gamma  [P \lol N] \prov Q}
\]
\[
\erule
{}
{ \cdot \seq_\Delta \Gamma, p \prov [p] }
\qquad
\erule
{}
{ \cdot \seq_\Delta \Gamma [n] \prov n }
\]

\[
\erule
{}
{ \Gamma \to N  \seq_\Delta \cdot \prov \Gamma \prov [\dns N] }
\qquad
\erule
{}
{ \Gamma \x P \to Q  \seq_\Delta \Gamma [\ups P] \prov Q }
\]

So a proposition $P$ over $\Delta$ is {\em sound} iff
for all choices of functors for its atoms,
and all ways of proving $\Phi \seq_\Delta \Gamma \prov [P]$, if there are
inhabitants of every $(\int_{\delta\in  \Delta} F_\delta \st F \in \Phi)$, then there
is an inhabitant of $\int_{\delta\in\Delta} \Gamma_\delta \to P_\delta$.

Likewise $N$ over $\Delta$ is sound iff
for all choices of functors for its atoms,
and all ways of proving $\Phi \seq_\Delta \Gamma[N] \prov Q$, if there are
inhabitants of every $(\int_{\delta\in  \Delta} F_\delta \st F \in \Phi)$, then there
is an inhabitant of $\int_{\delta\in\Delta} \Gamma_\delta \x N_\delta \to Q_\delta$.

\subsection{Known Examples In This Setting}
I guess I'll be assuming that all atoms mentioned can depend on the $a$-variable
however they like.
\[
 \exists b. \dns n \sw { b}
\isbad
\qquad
\forall b. \ups p^b_b
\isbad
\]
\[
 \exists b. \dns n'_b \otimes \dns n^b
\isopen
\qquad
\forall b. \ups p'_b \amp \ups p^b
\isok
\]
\[
 \exists^+ b. \dns n'_b \otimes \dns n^b
\isok
\qquad
 \exists b. \dns n_b
\isok
\]
\[
 \forall b. n\sw { b} \isok
\qquad
 \exists b. p\sw { b} \isok
\]
\[
\exists b. p \sw { b}\otimes \dns n_b \isok
\]
The quantifier $\exists^+$ only quantifies over $\Delta$-covariant instantiations of
the variable.
\end{document}
