\documentclass{article}
\input{theorem}
\input{prooftree}
\usepackage{latexsym}
\usepackage{yfonts}
\usepackage{amsmath}
\usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
\usepackage{tikz}
\usetikzlibrary{calc,arrows,cd,decorations.pathreplacing}
\usetikzlibrary{decorations.pathmorphing}
\usepackage{tcolorbox}
\tcbuselibrary{breakable}
\definecolor{block-gray}{gray}{0.85}
\definecolor{lgray}{gray}{0.7}
\newtcolorbox{myquote}{colback=block-gray,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}

\input{linear}
\def\susp#1{\langle {#1} \rangle}
\def\dto{\mathrel{\dot\to}}
\def\dns{{\downarrow}}
\def\ups{{\uparrow}}
\def\sprov{\Vdash}
\def\signat{{\color{red}\Sigma}}
\def\div{\vskip 1em \hrule \vskip 1em}
\def\wat{\mathbin{@}}
\def\cn{{:}}
\def\ww{{\mathsf w}}
\def\base{{\textfrak b}}

\def\N{{\mathbb N}}
\def\munit{I}
\def\tt{{\mathsf t}}
\def\rr{{\mathsf r}}
\def\zz{{\mathsf z}}
\def\sem#1{[\![#1]\!]}
\def\zem#1{\langle\!\langle#1\rangle\!\rangle}
\def\col#1{{\mathsf{C}}_{#1}}
\def\lax{\mathop\bigcirc}
\def\rjust{\mathsf{just}}
\def\rcvt{\mathsf{cvt}}
\def\rtype{\mathsf{type}}
\def\rkind{\mathsf{kind}}
\def\rmode{\mathsf{mode}}
\def\rprel{\mathbf{Prel}}
\def\rrfam{\mathbf{Rfam}}
\def\rset{\mathbf{Set}}
\def\rrel{\mathbf{Rel}}
\def\rcat{\mathbf{Cat}}
\def\rfam{\mathbf{Fam}}
\def\binj{\mathbf{inj}}
\def\rid{\mathsf{id}}
\def\rtrue{\mathrel\mathrm{true}}
\def\pbck{\ar[dr, phantom, pos=0, "\lrcorner"]}
\def\bpbck{\ar[ddrr, phantom, pos=0, "\lrcorner"]}
\def\erule#1#2{\begin{prooftree}#1\justifies #2\end{prooftree}}
\def\lpar{\bindnasrepma}
\def\lamp{\binampersand}
\def\btwo{\mathbf{2}}
\def\bone{\mathbf{1}}

\newarrow {Equiv} =====
\def\FinSet{\mathbf{FinSet}}
\def\x{\times}
\def\o{\comp}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\def\mapt{\ar[ddd,mapsto,shorten <=2em, shorten >=2em]}
\def\frommaps{\ar[from=uu,mapsto,shorten <=2em, shorten >=2em, crossing over]}
\def\frommapt{\ar[from=uuu,mapsto,shorten <=2em, shorten >=2em, crossing over]}
\def\C{\mathbf{C}}
\def\S{\mathbf{S}}
\def\D{\mathbf{D}}
\def\E{\mathbf{E}}
\def\M{\mathbf{M}}
\def\pair#1#2{\langle#1,#2\rangle}
\def\tri{\triangleright}
\def\o{\circ}
\def\rctx{\,\mathsf{ctx}}
\def\del{\partial}
\def\also#1{\ \textcolor{blue}{\celse #1}}
\newcounter{nodemaker}
\setcounter{nodemaker}{0}
\def\twocell#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift left=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift right=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\twocellswap#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift right=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift left=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\null{\emptyset}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\author{Jason Reed}
\definecolor{fib}{HTML}{ff7f00}
\definecolor{green}{HTML}{007f00}
\definecolor{red}{HTML}{df3f3f}
\definecolor{opfib}{HTML}{007fff}

% For lightening colors I used
% http://trycolors.com/ 6 parts white to 1 part color
\definecolor{opfibl}{HTML}{DBEDFF}
\definecolor{greenl}{HTML}{DBEDDB}
\definecolor{redl}{HTML}{FAE4E4}
\def\njudge#1{\fcolorbox{opfib}{white}{#1}}
\def\nrule#1{\fcolorbox{white}{opfibl}{#1}}
\def\neqn#1{\fcolorbox{white}{redl}{#1}}



\def\judge#1{\vskip 2em\noindent \njudge{$#1$}\vskip 0.5em\noindent}
\def\rule#1{\vskip 2em \noindent \nrule{$#1$}\vskip 0.5em\noindent}
\def\eqn#1{\vskip 2em \noindent \neqn{$#1$}\vskip 0.5em\noindent}
\def\prof{\nrightarrow}
\def\tensor{\otimes}
\def\htensor{\mathrel{\hat\otimes}}
\def\lol{\multimap}
\def\hlol{\mathrel{\hat\multimap}}
\title{Notes on the Logic of Convex Combination}
\begin{document}

\tikzset{
   commutative diagrams/.cd,
   arrow style=tikz,
   diagrams={>=stealth}}
% got this from
% https://tex.stackexchange.com/questions/169512/tikz-style-arrow-tips-missing-when-using-tikz-cd-crossing-over
% ???

\def\rmod{\mathbf{Mod}}
\def\ratm{\mathsf{atm}}
%% \section{Remedial Grothendieck}
%% If I have a $F : \C \to \rcat$, I make a category $\int F$
%% whose
%% \begin{itemize}
%% \item objects are $C \in \C$ together with $X \in F C$.
%% \item morphisms $(C, X) \to (D, Y)$ are $f : C \to D \in \C$ together with $g : (Ff)(X) \to Y$.
%% \end{itemize}
%% There should be a projection $\int F \to \C$.

\section{How Much Naturality Do I Need}

Consider the functor $\nabla_n : \rcat \to \rcat$
\[\nabla_n(\C) = (\C \x \C^\op)^n\]
Grothendieck it around to the fibration $p_n : \E_n \to \rcat$. We can
explicitly describe $\E_n$ as the category whose
\begin{itemize}
\item objects are $(\C, X)$, a category $\C$
together with an object $X$ of $\nabla_n\C$.
\item morphisms $(\C, X) \to (\C', X')$
are tuples  $(F, h)$ where $F : \C \to \C'$ and $h : \nabla_nF(X) \to  X'$
is a morphism in $\nabla_n\C' $.
\end{itemize}


\def\rtm{\mathsf{tm}}
Let $\M_n = \rset^{\E_n}$.
I want to interpret a proposition $x_1, \ldots, x_n \prov A(x_1, \ldots, x_n)$ over
$n$ term variables as a functor $\sem A : \M_n$, and interpret a term expression
$x_1, \ldots, x_n \prov e : \rtm$ as either
\begin{itemize}
\item a natural transformation $\sem e : \nabla_n \to \rid$
\item a natural transformation $\sem e^\op : \nabla_n \to \op$
\end{itemize}
Or I can kind of glue these together and think of $\sem e$ as being a natural
transformation $\nabla_n \to \nabla_1$.

We can give a semantics of substitutions --- $m$-tuples of expressions over $n$ free variables
--- as a natural transformation
\[\sem{(t_1, \ldots, t_m)}_\C : \nabla_n \to \nabla_m \]
defined by
\[\sem{(t_1, \ldots, t_m)}_\C(X) = (\sem {t_1}_\C(X), \sem{t_1}^\op_\C(X), \ldots, \sem {t_m}_\C(X), \sem{t_m}^\op_\C(X))\]

Assume I'm given some environment $\eta : \ratm(x_1, \ldots, x_n) \to \M_n$.
Presheaf categories
should be nice and (co)complete and ccc and everything, so I should be able to turn the crank
and not have to think too much.
The rest of the semantics is

\[\sem{A \imp B}(E)  = \M_n(yE, \sem {A \imp B}) \]
\[= \M_n(yE, \sem A \imp \sem B) \]
\[= \M_n(\E_n(E, \dash) \x \sem A, \sem B) \]

\[\sem{A \x B}(E)  = \sem A(E) \x \sem B(E) \]
\[\sem{A + B}(E)  = \sem A(E) + \sem B(E) \]
\[\sem{a(\vec t)}(\C, X)  = \eta(a)(\sem{\vec t}_\C(X)) \]
\[\sem{t \le u}(\C, X)  = \C(\sem t^\op_\C(X) , \sem u_\C(X))\]
\[\sem{\forall \phi . A(\phi)}(\C, X)  = \int_{C : \C} \sem{A}(\C, (X, C, C)) \]
\[\sem{\exists \phi . A(\phi)}(\C, X)  = \int^{C : \C} \sem{A}(\C, (X, C, C)) \]

Let's quickly check that $\le$ is actually functorial. Let $(F, h) : (\C, X) \to (\C', X')$
be given. That is $F : \C \to \C'$ and $h : \nabla_nF(X) \to X' \in \nabla_n \C'$.

Note that naturality of $\sem t^\op$ is
\[\begin{tikzcd}
  \nabla_n\C \ar[r,"{\sem t_\C^\op}"] \ar[d, "\nabla_n F"']& \C^\op \ar[d, "F^\op"]\\
  \nabla_n\C' \ar[r,"{\sem t_{\C'}^\op}"']& (\C')^\op \\
\end{tikzcd}\]
and naturality of $\sem u$ is
\[\begin{tikzcd}
  \nabla_n\C \ar[r,"{\sem u_\C}"] \ar[d, "\nabla_n F"']& \C \ar[d, "F"]\\
  \nabla_n\C' \ar[r,"{\sem u_{\C'}}"']& \C' \\
\end{tikzcd}\]

We start with an element of
\[ \C(\sem t^\op_\C(X) , \sem u_\C(X))\]
hit it with $F$ to get
\[ \C'(F^\op\sem t^\op_\C(X) , F\sem u_\C(X))\]
apply naturality of $\sem t^\op$ and $\sem u$ to see that this is the same as
\[ \C'(\sem t^\op_{\C'} \nabla_n F(X)  , \sem u_{\C'}\nabla_nF(X))\]
and compose with $h$ on both ends to get
\[ \C'(\sem t^\op_{\C'}(X') , \sem u_{\C'}(X'))\]
as required.

%% So let some morphism $g : \sem t^\op_\C(X) \to \sem u_\C(X) \in \C$ be given. We can
%% certainly hit this with $F$ to get
%% \[Fg : F\sem t^\op_\C(X) \to F\sem u_\C(X) \in \C'\]
%% Note that $\sem t_\C^\op : \nabla_n \C \to \C^\op$.

Ok, so then interpretation of propositional contexts $\sem\Gamma$ in a term context of
$n$ things should be at $\M_n$ as well. We can ask about natural transformations
$\sem \Gamma \dto \sem A$.

We should at least have nice isomorphisms for the asynchronous cases, e.g.
$$
\begin{prooftree}
{\sem{\Gamma, A} \dto\sem  B}
\Justifies
{\sem\Gamma\dto\sem {A\imp B}}
\end{prooftree}
$$
By construction of the semantics of $\imp$, and the obvious choice that leads
to $\sem{\Gamma, A}$ being the product $\sem\Gamma \x \sem A$ in $\M_n$.

How about things like
\[\sem{U \phi . A(\phi)}(\C, X)  = \int_{C : \C} \sem{A}(\C, (X, C, C)) \]
\[\sem{F_{t}  A(\phi)}(\C, X)  = \int^{C : \C} \sem{A}(\C, (X, C, C)) \]


\section{Starting Over with a Little More Generality}
Let's say I have a category $\S$ of sorts.
\[
\begin{tabular}{r@{$\quad$}c@{$\quad::=\quad$ }l}
  Sorts&$\sigma$&$\cdots$\\
  Term Contexts&$\gamma$&$\cdot\celse \gamma, x : \sigma$\\
  Terms&$t$&$x$\\
  Substitutions&$\theta$&$\cdot\celse \theta[t/x]$\\
\end{tabular}
\]
I'm going to write $\C$ generally for a functor in $\rcat^\S$,
and $\C_\sigma$ to mean $\C$
applied to the object $\sigma \in \S$.
Define a functor $\sem\gamma : \rcat^\S \to \rcat$ by
$$\sem\gamma \C = \prod_{x :\sigma \in \gamma}\C_\sigma \x \C_\sigma^\op$$
Grothendieck this around to get a fibration $p_\gamma : \E_\gamma \to \rcat^\S$. Explicitly,
$\E_\gamma$ has
\begin{itemize}
\item objects are  $(\C :  \rcat^\S, X : \sem\gamma\C)$.
\item morphisms $(\C, X) \to (\D, Y)$ are
$(F : \C \to \D, h : (\sem\gamma F)  X \to Y)$
\end{itemize}
Let $\M_\gamma = \rset^{\E_\gamma}$.
Some typing rules of the syntactic system are
$$
\erule
{\gamma \prov \theta : \gamma' \qquad \gamma' \prov a : \rtype}
{\gamma \prov a[\theta] : \rtype}
\qquad
\erule
{\gamma \prov \theta : \gamma' \qquad \gamma \prov t : \sigma}
{\gamma \prov \theta[t/x] : (\gamma', x : \sigma)}
$$
The typing of the semantics is
$$
\erule
{\gamma \prov A : \rtype}
{\sem A : \M_\gamma}
\qquad
\erule
{\gamma \prov a : \rtype}
{\eta(a) : \M_\gamma}
$$
$$
\erule
{\gamma \prov \theta : \gamma'}
{\sem \theta : \sem{\gamma} \dto \sem{\gamma'}}
\qquad
\erule
{\gamma \prov t : \sigma}
{\sem t^+ : \sem{\gamma} \dto \square_\sigma}
\qquad
\erule
{\gamma \prov t : \sigma}
{\sem t^- : \sem{\gamma} \dto \square_\sigma^\op}
$$

I can do predictable things like
\[\sem {A \imp B} = \M_n(\E_n(E, \dash) \x \sem A, \sem B)\]
\[\sem {a [\theta]}(\C, X) = \eta(a)(\C, \sem{\theta}_\C(X))\]
\[\sem{\theta[t/x]}_\C = (\sem{\theta}_\C, (\sem{t}^+_\C, \sem{t}^-_\C))\]
\[\sem{\forall x \cn \sigma . A}(\C, X) = \int_{C\cn \C_\sigma} \sem A (\C, (X, C, C))\]
but then I come to $\le$ and I try to do
\[\sem{t \le_\sigma u}(\C, X) = \C_\sigma(\sem{t}^-_\C(X), \sem{u}^+_\C(X))\]
and I want to convince myself this is a functor $\E_\gamma \to \rset$. Given
$X : \sem\gamma\C$ and $Y:\sem\gamma\D$ and
$F : \C \to \D$ and $ h : (\sem\gamma F)  X \to Y$
we need to make
\[\C_\sigma(\sem{t}^-_\C(X), \sem{u}^+_\C(X))
\to
\D_\sigma(\sem{t}^-_\D(Y), \sem{u}^+_\D(Y))\]

Let's first remind ourselves of what naturality of $\sem t^-$ and $\sem u^+$ means:
\[\begin{tikzcd}
  \sem\gamma\C \ar[r,"{\sem t_\C^-}"] \ar[d, "\sem\gamma F"']& \C_\sigma^\op \ar[d, "F_\sigma^\op"]\\
  \sem\gamma\D \ar[r,"{\sem t_{\D}^-}"']& \D_\sigma^\op \\
\end{tikzcd}
\qquad\begin{tikzcd}
  \sem\gamma\C \ar[r,"{\sem u_\C^+}"] \ar[d, "\sem\gamma F"']& \C_\sigma \ar[d, "F_\sigma"]\\
  \sem\gamma\D \ar[r,"{\sem u_{\D}^+}"']& \D_\sigma \\
\end{tikzcd}\]
With what we have we can of course make
\[\D_\sigma(F^\op_\sigma\sem{t}^-_\C(X), F_\sigma\sem{u}^+_\C(X))\]
just by hitting the objects with $F_\sigma$ (or, equivalently, $F^\op_\sigma$, since opfunctors
agree on objects) and then naturality tells us this is the same as
\[\D_\sigma(\sem{t}^-_\D (\sem\gamma F) (X), \sem{u}^+_\D (\sem\gamma F)(X))\]
and all we need to is observe that we can construct the morphisms
\[\sem t^-_\D(h) \in \D^\op_\sigma(\sem{t}^-_\D (\sem\gamma F) (X), \sem t_\D^- (Y))\]
\[\sem u^+_\D(h) \in \D_\sigma(\sem{u}^+_\D (\sem\gamma F) (X), \sem u_\D^+ (Y))\]
and compose them with what we have and we're done. More or less we can say
\[\sem{t \le_\sigma u}(F, h) = \lambda m . (\sem u^+_\D(h) \o F_\sigma m \o \sem t^-_\D(h))\]
Ok, good, I think this works!

\subsection{Just Sets and Focusing}
\def\ra{\mathsf{a}}
Fix collections of atoms $A^+, A^- : \rset$ and assume there's an atom named $\# \in A^-$.
Let's say the category $\rmod$ has

\noindent\parbox[t]{2.4in}{
Objects consisting of
  \begin{itemize}
\itemsep -0.5em
  \item A set $W$
\item A map $\eta^+ : A^+ \to \rset $
\item A map $\eta^- : A^- \x W \to \rset $
  \end{itemize}
}
\parbox[t]{2.4in}{
Morphisms $(W, \ra^+, \ra^-) \to (W_0, \ra_0^+, \ra_0^-)$
  \begin{itemize}
\itemsep -0.5em
  \item   $\omega : W \to W_0$
\item  $\ra^+ : \Pi a^+ \cn A^+ . \eta^+(a^+) \to \eta^+_0(a^+)$
\item $\ra^- : \Pi a^- \cn A^- .\Pi w \cn W. \eta^-(a^-, w) \to \eta^-_0(a^-, \omega(w))$
  \end{itemize}
}
The category $\rmod_*$ is the same except objects also carry a chosen point $* : W$
and morphisms are required to have their $\omega$ preserve it.

\def\hmod{\widehat\rmod}
\def\hu{\mathsf U}
Interpret positive props into functors $\hmod = \rmod \to \rset$ and negative props
into functors $\hmod_* = \rmod_* \to \rset$. There is an evident forgetful functor
$U : \rmod_* \to \rmod$ that forgets the point, and we can define
$\hu : \hmod \to \hmod_* =  \dash \o U$ by composition. This functor has
a right adjoint, call it $\forall : \hmod_* \to \hmod$. For any $a^+ \in A^+$,
we can define a functor $\eta^+(a^+) : \rmod \to \rset$, whose morphism-part
is given by $\ra^+$. Similarly, for any $a^- \in A^-$, we
can define a functor $\eta^-(a^-) : \rmod_* \to \rset$ whose morphism part is given by $\ra^-$.

Note that $\rmod_*$ and $\rmod$, being presheaf categories, are ccc and (co)complete,
so they have product $\x$ and coproduct $+$ and exponential $\imp$, and initial and
terminal objects $0$ and $1$.

Here's the semantics:
\[
\sem{a^+} = \eta^+(a^+) \qquad \sem{a^-} = \eta^-(a^-)
\]
\[
\sem{1} = 1
\qquad
\sem{0} = 0 \qquad \sem{\top} = 0
\]
\[
\sem{P_1\tensor P_2} = \sem{P_1}\x\sem{P_2} \qquad \sem{P\lol N} = \hu\sem{P}\x\sem{N}
\]
\[
\sem{P_1\oplus P_2} = \sem{P_1}+\sem{P_2} \qquad \sem{N_1\& N_2} = \sem{N_1}+\sem{N_2}
\]
\[
\sem{\ups P} = \hu\sem P \imp \sem \# \qquad \sem{\dns N} = \forall(\sem N \imp \sem \#)
\]
We also interpret contexts into $\rmod$ like so
\[
\sem \cdot = 1 \qquad\sem{\Gamma, N} = \sem\Gamma \x \sem{\dns N}
\qquad
\sem{\Omega, P} = \sem\Omega \x \sem{P}
\]
So I expect
$$\Gamma \prov N\iff \hu\sem \Gamma \x \sem N \dto \sem \#$$
$$\Gamma \prov [P]\iff \sem \Gamma \dto \sem P$$
$$\Gamma  [N] \prov P \iff \hu\sem \Gamma \x \sem {\ups P}\dto \sem N$$
\div
Let's try some examples.
\begin{enumerate}
\item
There should be exactly one inhabitant of
\[\susp{ a^+} \models [a^+]\]
which is to say
\[\eta(a^+) \dto \eta(a^+) : \rmod \to \rset\]
which I think I can get exactly the same way I'd show  $\forall \alpha . \alpha \to \alpha$
has one inhabitant. Let $\beta : \eta(a^+) \dto \eta(a^+)$ be given,
make up a model $M_1$ such that $\eta_{M_1}(a^+) = 1$, and investigate the naturality
square on a model morphism from $M_1$ to arbitrary model $M$ that takes the single element
of $\eta_{M_1}(a^+)$ to a chosen element $x\in \eta_{M}(a^+)$.
\[\begin{tikzcd}
  1 \ar[d, "!"']\ar[r, "x"]& \eta_M(a^+)\ar[d, "\beta_M"]\\
1 \ar[r, "x"']& \eta_M(a^+)
\end{tikzcd}\]
We see that $\beta_M$ {\em must} preserve every $x$, so it's the identity.
\item
There should be exactly one inhabitant of
\[ \susp{a^+} \models a^+\]
which is to  say
\[\hu \eta(a^+) \x (\hu \eta(a^+) \imp \sem \#) \dto \sem \#: \rmod_* \to \rset\]
which amounts to the same thing as
\[ (\hu \eta(a^+) \imp \sem \#) \dto (\hu \eta(a^+) \imp \sem \#): \rmod_* \to \rset\]
Of which there's probably just one, but I don't see it quite yet.
\item
There should be exactly one inhabitant of
\[\ups a^+ \models a^+\]
\end{enumerate}



\def\rA{\mathbb{A}}
\subsection{Simplest Case I can Think Of}
Let there be a set $\rA$ of atoms. A model is a functor $M : \rA \to \rset$, a map
of models is a natural transformation $\zeta : M \dto M'$. The semantics takes
propositions to $\rmod \to \rset$. We can easily construct $\eta : \rA \to \rmod \to \rset$
\[
\sem{a} = \eta(a)
\]
\[
\sem{\top} = 1
\qquad
\sem{\bot} = 0
\]
\[
\sem{A\land B} = \sem{A}\x\sem{B} \qquad \sem{A\imp B} = \sem{A}\imp\sem{B}
\]
\[
\sem{A\lor B} = \sem{A}+\sem{B}
\]
\[
\sem \cdot = 1 \qquad\sem{\Gamma, A} = \sem\Gamma \x \sem{A}
\]

I should be able to see that all the asynchronous rules are exactly modeled;
There's  isomorphisms
\[
\begin{prooftree}
\sem \Gamma \dto \sem {A \imp B}
\Justifies
\sem{\Gamma, A} \dto \sem B
\end{prooftree}
\qquad
\begin{prooftree}
\sem{\Gamma, A} \dto \sem C \x \sem{\Gamma, B} \dto \sem C
\Justifies
\sem{\Gamma, A \lor B} \dto \sem C
\end{prooftree}
\]
\[
\begin{prooftree}
\sem{\Gamma, A, B} \dto \sem C
\Justifies
\sem{\Gamma, A \land B} \dto \sem C
\end{prooftree}
\qquad
\begin{prooftree}
\sem{\Gamma} \dto \sem A \x \sem{\Gamma} \dto \sem B
\Justifies
\sem{\Gamma} \dto \sem {A \land B}
\end{prooftree}
\]

\begin{enumerate}
\item Suppose $\beta : \sem a \dto \sem a$. Then $\beta : \eta(a) \dto \eta(a) : \rmod \to \rset$.
Want to show that $\beta_M = \rid_{\eta_M(a)}$. Naturality says
\[\begin{tikzcd}
  \eta_{M_1}(a) \ar[d, "\beta_{M_1}"']\ar[r, "\zeta_a"]& \eta_{M_2}(a)\ar[d, "\beta_{M_2}"]\\
  \eta_{M_1}(a) \ar[r, "\zeta_a"']& \eta_{M_2}(a)
\end{tikzcd}\]
so set $M_1$ to some model for which $\eta_{M_1}(a) = 1$ and set $M_2$ to an arbitrary model $M$ and we get
\[\begin{tikzcd}
  1 \ar[d, "!"']\ar[r, "\zeta_a"]& \eta_{M}(a)\ar[d, "\beta_{M}"]\\
  1 \ar[r, "\zeta_a"']& \eta_{M}(a)
\end{tikzcd}\]
And we find $\beta_M$ has to be the identity.
\item
Suppose $\beta : \sem {a \land a \land a}  \dto \sem a$. Then $\beta : \eta(a) \x \eta(a) \x \eta(a) \dto \eta(a) : \rmod \to \rset$.
Want to show that $\beta_M $ is one of the three projections.
Pick a model $M_3$ which assigns the set $3$ to $a$. Then naturality tells us
\[\begin{tikzcd}
  3^3 \ar[d, "q"']\ar[r, "\zeta^3_a"]& \eta_{M}(a) ^3\ar[d, "\beta_{M}"]\\
  3 \ar[r, "\zeta_a"']& \eta_{M}(a)
\end{tikzcd}\]
Consider $\rid_3 \in 3^3$. Apparently $q(\rid_3)$ is some point in $3$.
But given any point in $p \in \eta_M(a)^3$,
we can construe it as a $\zeta_a$ such that $\zeta_a^3(\rid_3) = p$,
and then we find that $\beta_M(p) = \beta_M(\zeta_a^3(\rid_3)) = \zeta_a(q(\rid_3))$,
so that means $\zeta_a$ is given by a fixed projection.
\item
Suppose $\beta : \sem {a \land (a \imp a)}  \dto \sem a$. Then $\beta : \eta(a) \x (\eta(a) \imp \eta(a)) \dto \eta(a) : \rmod \to \rset$. I claim there are $\N$ many such $\beta$.
\[\begin{tikzcd}
  \N \x \mathrm{Nat}(y \x \N, \N) \ar[d, "q"']\ar[r, "\zeta^3_a"]& \eta_{M}(a) ^3\ar[d, "\beta_{M}"]\\
  3 \ar[r, "\zeta_a"']& \eta_{M}(a)
\end{tikzcd}\]

\end{enumerate}

\vfil\eject
\subsection{No, Really, the Simplest Case I can Think Of}
Set $\rmod = \rset$.
The semantics takes propositions to $\rset \to \rset$.
\[
\sem{a} = \rid_\rset
\]
\[
\sem{\top} = 1
\qquad
\sem{\bot} = 0
\]
\[
\sem{A\land B} = \sem{A}\x\sem{B} \qquad \sem{A\imp B} = \sem{A}\imp\sem{B}
\]
\[
\sem{A\lor B} = \sem{A}+\sem{B}
\]
\[
\sem \cdot = 1 \qquad\sem{\Gamma, A} = \sem\Gamma \x \sem{A}
\]

Same asynchronous isomorphisms as before.

Let's say explicitly what $\sem {a \imp a}$ is. It's the functor that takes
a set $S$ and returns the set of natural transformations $\rset(S, \dash) \x \sem a \dto \sem a$.
If you have a function $f : S \to T$ and a
\[\rset(S, \dash) \x \sem a \dto \sem a\]
 then here's how you get a
\[\rset(T, \dash) \x \sem a \dto \sem a\]

Let's make this more concrete. You have $f : S \to T$ and
\[\zeta_U : \rset(S, U) \x U \dto U\]
and you want to define
\[\xi_U : \rset(T, U) \x U \dto U\]
So you define
\[\xi_U(g, u) = \zeta_U(g \o f, u)\]
This is the functoriality, the morphism part, of $\sem{a \imp a}$.

\def\iid{\mathbb{I}}
Suppose $\beta : \sem {a \land (a \imp a)}  \dto \sem a$.
Let $\iid$ be $\rid_{\rset}$. Then
\[\beta : \iid
\x (\lambda S .  \rset(S, \dash) \x \iid \dto \iid)  \dto \iid : \rmod \to \rset\]
 I claim there are $\N$ many such $\beta$. If someone hands us such a $\beta$,
how do we figure out which one it is?

Let's first remind ourselves of how soundness goes.
Any syntactic proof $a, a\imp a \prov a$ should certainly
have a semantic analogue. Call these $\beta^0, \beta^1,\beta^2$, etc.

Look at (recalling $yS =\rset(S, \dash)$)
$\beta^0_S : S \x (yS \x \iid \dto \iid) \dto S$. It's just first projection.
What's
$\beta^1_S : S \x (yS \x \iid \dto \iid) \dto S$?
We have a $\rset(S, Q) \x Q \to Q$ for any $Q$, and an $S$,
how do we nontrivially get an $S$? Apply that natural transformation
at $Q = S$ and the identity function.
%% Well, we evaluate it at $\N$, and we
%% get a set function
Suppose I have $\beta$.
\[\beta_Q : Q
\x (\rset(Q, \N) \x \N \dto \N)  \dto Q \in \rset_1\]

\[\beta_\N : \N
\x (\forall Q . \rset(\N, Q) \x Q \dto Q)  \dto \N \in \rset_1\]
%% We want to give $\beta_\N$ zero and the successor function, and read out
%% the number we get. How do we massage successor into being of type
%% \[ \rset(\N, \dash) \x \iid \dto \iid\]
%% ? We define
%% \[ \sigma_Q : \rset(\N, Q) \x Q \to Q =\lambda g . \lambda q . \]
%% \[\begin{tikzcd}
%%   \N \x \mathrm{Nat}(y \x \N, \N) \ar[d, "q"']\ar[r, "\zeta^3_a"]& \eta_{M}(a) ^3\ar[d, "\beta_{M}"]\\
%%   3 \ar[r, "\zeta_a"']& \eta_{M}(a)
%% \end{tikzcd}\]



\end{document}
