\documentclass{article}
\input{theorem}
\input{prooftree}
\usepackage{latexsym}
\usepackage{amsmath}

\input{linear}
\def\sem#1{[\![#1]\!]}
\def\zem#1{\langle\!\langle#1\rangle\!\rangle}
\def\col#1{{\mathsf{C}}_{#1}}
\def\lax{\mathop\bigcirc}
\def\rjust{\mathsf{just}}
\def\rtype{\mathsf{type}}
\def\rset{\mathbf{Set}}
\def\rid{\mathsf{id}}
\def\rtrue{\mathrel\mathrm{true}}
\def\pbck{\ar[dr, phantom, pos=0, "\lrcorner"]}
\def\bpbck{\ar[ddrr, phantom, pos=0, "\lrcorner"]}
\def\erule#1#2{\begin{prooftree}#1\justifies #2\end{prooftree}}
\def\lpar{\bindnasrepma}
\def\lamp{\binampersand}
\def\btwo{\mathbf{2}}
\def\bone{\mathbf{1}}
\def\N{\mathbb{N}}
\newarrow {Equiv} =====
\def\FinSet{\mathbf{FinSet}}
\def\x{\times}
\def\o{\comp}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\def\mapt{\ar[ddd,mapsto,shorten <=2em, shorten >=2em]}
\def\frommaps{\ar[from=uu,mapsto,shorten <=2em, shorten >=2em, crossing over]}
\def\frommapt{\ar[from=uuu,mapsto,shorten <=2em, shorten >=2em, crossing over]}
\def\C{\mathbf{C}}
\def\D{\mathbf{D}}
\def\E{\mathbf{E}}
\def\pair#1#2{\langle#1,#2\rangle}
\def\tri{\triangleright}
\def\o{\circ}
\def\rctx{\,\mathsf{ctx}}
\def\del{\partial}
\usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
\def\also#1{\ \textcolor{blue}{\celse #1}}
\usepackage{tikz}
\usetikzlibrary{calc,arrows,cd,decorations.pathreplacing}
\newcounter{nodemaker}
\setcounter{nodemaker}{0}
\def\twocell#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift left=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift right=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\twocellswap#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift right=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift left=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\null{\emptyset}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\author{Jason Reed}
\definecolor{fib}{HTML}{ff7f00}
\definecolor{green}{HTML}{007f00}
\definecolor{red}{HTML}{df3f3f}
\definecolor{opfib}{HTML}{007fff}
\definecolor{opfibl}{HTML}{DBEDFF}
\def\njudge#1{\fcolorbox{opfib}{white}{#1}}
\def\nrule#1{\fcolorbox{white}{opfibl}{#1}}

\def\judge#1{\vskip 2em\noindent \njudge{$#1$}\vskip 0.5em\noindent}
\def\rule#1{\vskip 2em \noindent \nrule{$#1$}\vskip 0.5em\noindent}
\def\prof{\nrightarrow}
\title{Notes on the Logic of Convex Combination}
\begin{document}

\tikzset{
   commutative diagrams/.cd,
   arrow style=tikz,
   diagrams={>=stealth}}
% got this from
% https://tex.stackexchange.com/questions/169512/tikz-style-arrow-tips-missing-when-using-tikz-cd-crossing-over
% ???

\section{Semantics}
Going to try to reconstruct what I understand of the dependent
fibrational mode theory stuff in my own words, and with more pictures.
I'm going to do it in a bunch of little sections, one for each judgment
for which the {\em type} of its semantic analogue must be specified,
and one for each judgmental rule, for which the {\em value} of its semantic
analogue must be specified.

I'll write a judgements in a box \njudge{like this}, and rules in a box
\nrule{like this}.
\setlength{\fboxsep}{0.8em}

\judge{\prov \gamma : \rctx}
A context $\prov \gamma : \rctx$ is interpreted as a finite inverse category $\sem \gamma$:
 a finite category where every object
is $\N$-graded, and every nonidentity arrow strictly decreases grade. Example:
\[\begin{tikzcd}
a \ar[from=r]\ar[from=rr, bend left=50] & b \ar[from=r, bend left=15] \ar[from=r, bend right=15] & c
\end{tikzcd}\]

\rule{\erule{}{\prov \null : \rctx}}
The empty mode context $\null$ is interpreted as the empty finite inverse category.

\judge{\gamma \prov \alpha : \rtype}
A type $\gamma \prov \alpha : \rtype$ is interpreted as
a profunctor $\sem \alpha : \sem \gamma \prof \bone$, i.e. a functor $\gamma \to \rset$.
Example:
\[\begin{tikzcd}[execute at end picture={
\foreach \x in {a,b,c}
{\begin{scope}[shift={(\x)}]
  \draw (0em, 0.7em) -- (0em, 2em);
  \draw (0,3em) ellipse (0.6em and 1em);
\end{scope}}
%
\begin{scope}[shift={(a)}]
  \draw[fill=black] (0,3em) circle (1.25pt);
\end{scope}
\begin{scope}[shift={(b)}]
  \draw[fill=black] (0,2.66em) circle (1.25pt);
  \draw[fill=black] (0,3.33em) circle (1.25pt);
\end{scope}
}]
|[alias=a]|a \ar[from=r]\ar[from=rr, bend left=50]
&|[alias=b]| b \ar[from=r, bend left=15] \ar[from=r, bend right=15]
&|[alias=c]| c
\end{tikzcd}\]
or we could equivalently depict this as the collage
\[\begin{tikzcd}
\bullet \ar[d]\ar[dr]\ar[dr, shift left]\\
a \ar[from=r]\ar[from=rr, bend left=50]
& b \ar[from=r, bend left=15] \ar[from=r, bend right=15]
& c
\end{tikzcd}\]
where $\bullet$ is the one object of $\bone$.

\rule{\erule{\prov \gamma : \rctx \qquad \gamma \prov \alpha : \rtype}
{\prov (\gamma, x : \alpha) : \rctx}}
We interpret an extended context as the {\em collage} of the profunctor that
interprets the type the context is extended with.
That is, we define
$$\sem{\gamma, x : \alpha} = \col {\sem{\alpha}}$$
Spelling it out, you take $\sem\gamma$,
and you adjoin one more object. For each existing object
$C$ in $\sem \gamma$, and each point $x$ in the $\sem \alpha$-fiber over $C$,
you adjoin a morphism, going from the fresh object to $C$.
The morphism part of the functor $\sem \alpha$ says how composition works.
For example, for the $\sem \alpha$ given above, we have $\sem{\gamma, x: \alpha} = $
\[\begin{tikzcd}
a \ar[from=r, "k" description]\ar[from=rr, bend left=50] \ar[from=rrr, bend right=50, "h"']
 & b \ar[from=rr, bend left=50, shift left=2, "f"] \ar[from=rr, bend left=50, "g"'] \ar[from=r, bend left=15] \ar[from=r, bend right=15]
 & c & x
\end{tikzcd}\]
with $kg = kf = h$.


%% The right notion of morphism $\gamma \to \gamma_0$ is a {\em profunctor}
%% $\gamma \prof \gamma_0$, i.e. a functor
%% $\gamma \to \hat \gamma_0$.


\judge{\gamma \prov \mu : \alpha}
\def\rpr{\mathsf{pr}}
There is a projection profunctor
$\rpr_\alpha : \sem {\gamma, x: \alpha} \prof \sem {\gamma}$.
It arises from the injection {\em functor}
$\sem {\gamma} \to \sem {\gamma, x: \alpha} $
going the other direction.
Given an object $g \in \sem{\gamma, x : \alpha}$ and an object
$h \in \sem{\gamma}$, it'll tell you all the arrows that belong
in the collage from
(the evident corresponding $\sem{\gamma, x: \alpha}$-object of) $h$
to $g$.


A term $\gamma \prov \mu : \alpha$
is interpreted as a {\em section} of the projection
 $\rpr_\alpha$. That is, we interpret $\mu$ as
a profunctor
$$\sem \mu : \sem {\gamma, x : \alpha} \prof \sem \gamma $$
 such that $\sem \mu \o  \rpr_\alpha = \rid_{\sem\gamma}$.

The picture of the collage of $\rpr_\alpha$ looks close to that of the
identity profunctor. There's `two copies' of $\sem \gamma$, but one
of them's been extended with $x : \alpha$.
\[\begin{tikzcd}
a \ar[from=r]\ar[from=rr, bend left=30]\ar[d]
 & b\ar[dl]\ar[d]
 \ar[from=r, bend left=15] \ar[from=r, bend right=15]
 & c\ar[d]\ar[dl]\ar[dl, shift left]\ar[dll, bend right=5]
\\[3em]
a \ar[from=r]\ar[from=rr, bend left=30] \ar[from=rrr, bend right=30]
 & b \ar[from=rr, bend left=30, shift left=2] \ar[from=rr, bend left=30]
 \ar[from=r, bend left=15] \ar[from=r, bend right=15]
 & c
& x
\end{tikzcd}\]

After mulling over the diagram below,
I can sort of see the content of
Mitchel and Mike's discussion in $\mathtt{depdep2.ltx}$ about what the
essential data is that we need to specify for a general term
$$\gamma \prov \mu : \alpha$$

\[\begin{tikzcd}[execute at end picture={
\draw[decoration={brace,mirror},decorate]
  ($(b1) + (-1em,-0.3em)$) -- ($(b2) + (-1em,0.3em)$);
\draw[decoration={brace,mirror},decorate]
  ($(b2) + (-1em,-0.3em)$) -- ($(b3) + (-1em,0.3em)$);
\node[left] at ($(b1)!0.5!(b2) + (-1.5em,0)$) {$\rpr_\alpha$};
\node[left] at ($(b2)!0.5!(b3) + (-1.5em,0)$) {$\mu$};
}]
|[alias=b1]|a \ar[from=r]\ar[from=rr, bend left=30]\ar[d]
 & b\ar[dl]\ar[d]
 \ar[from=r, bend left=15] \ar[from=r, bend right=15]
 & c\ar[d]\ar[dl]\ar[dl, shift left]\ar[dll, bend right=5]
\\[3em]
|[alias=b2]|\color{gray}a \ar[from=r]\ar[from=rr, bend left=30]
\ar[from=rrr, bend right=30, fib]
\ar[d, red]
 & \color{gray}b \ar[from=rr, bend left=30, shift left=2, fib]
 \ar[from=rr, bend left=30, fib]
 \ar[from=r, bend left=15] \ar[from=r, bend right=15]
\ar[dl]\ar[d, red]
 & \color{gray}c\ar[d, red]\ar[dl]\ar[dl, shift left]\ar[dll, bend right=5]
& \color{gray}x
\ar[dlll,opfib]
\ar[dlll,opfib, shift left]
\ar[dll,opfib,shift left=0.5]
\\[3em]
|[alias=b3]|a \ar[from=r]\ar[from=rr, bend left=30]
 & b
 \ar[from=r, bend left=15] \ar[from=r, bend right=15]
 & c
\end{tikzcd}\]

It consists of a functor $\color{opfib}\sem \mu : \gamma \to \rset$ (which says
how many arrows there are from $x$ to each object of the bottom copy of $\gamma$,
and then a natural transformation
$\zem\mu : {\color{fib}\sem \alpha} \imp {\color{opfib} \sem\mu}$ that says
how composition with the `{\color{red}identities}' works.


\rule{\erule{}{\gamma \prov \rjust_\alpha : \alpha}}

An example of such a thing is $\rjust_\alpha$. It's just the other
profunctor derived from the injection functor. A depiction of the
(collage of the)
composition of $\rpr_\alpha \o \rjust_\alpha$ is
\[\begin{tikzcd}[execute at end picture={
\draw[decoration={brace,mirror},decorate]
  ($(b1) + (-1em,-0.3em)$) -- ($(b2) + (-1em,0.3em)$);
\draw[decoration={brace,mirror},decorate]
  ($(b2) + (-1em,-0.3em)$) -- ($(b3) + (-1em,0.3em)$);
\node[left] at ($(b1)!0.5!(b2) + (-1.5em,0)$) {$\rpr_\alpha$};
\node[left] at ($(b2)!0.5!(b3) + (-1.5em,0)$) {$\rjust_\alpha$};
}]
|[alias=b1]|a \ar[from=r]\ar[from=rr, bend left=30]\ar[d]
 & b\ar[dl]\ar[d]
 \ar[from=r, bend left=15] \ar[from=r, bend right=15]
 & c\ar[d]\ar[dl]\ar[dl, shift left]\ar[dll, bend right=5]
\\[3em]
|[alias=b2]|\color{gray}a \ar[from=r]\ar[from=rr, bend left=30] \ar[from=rrr, bend right=30]
\ar[d]
 & \color{gray}b \ar[from=rr, bend left=30, shift left=2] \ar[from=rr, bend left=30]
 \ar[from=r, bend left=15] \ar[from=r, bend right=15]
\ar[dl]\ar[d]
 & \color{gray}c\ar[d]\ar[dl]\ar[dl, shift left]\ar[dll, bend right=5]
& \color{gray}x
\ar[dlll]\ar[dll]\ar[dll, shift left]
\\[3em]
|[alias=b3]|a \ar[from=r]\ar[from=rr, bend left=30]
 & b
 \ar[from=r, bend left=15] \ar[from=r, bend right=15]
 & c
\end{tikzcd}\]

If we think of the semantics of a term being given by a
functor-and-natural-transformation-pair as above, we can have
pleasantly tautologous-sounding slogan
\begin{center}``$\sem{\rjust_\alpha}$ is just $\sem \alpha$''\end{center}
 and then $\zem {\rjust_\alpha}$ is the
identity natural transformation on $\sem {\rjust_\alpha} = \sem \alpha$.

\judge{
\gamma \prov s : \mu \imp \nu : \alpha
}
A term reduction $\gamma \prov s : \mu \imp \nu : \alpha$
is interpreted as a natural transformation $\sem s : \sem \mu \imp \sem \nu$
such that $\sem s \o \zem \mu  = \zem \nu$.

\judge{
\gamma \prov s : \alpha \imp \beta : \rtype
}
A type reduction $\gamma \prov s : \alpha \imp \beta : \rtype$
is interpreted as a natural transformation
 $\sem s : \sem \alpha \imp \sem\beta : \sem\gamma \to \rset$.

\rule{
\erule{\gamma \prov \mu : \beta\qquad \gamma \prov s : \alpha \imp \beta : \rtype}
{\gamma \prov s_*(\mu) : \alpha
}}
We need to come up with  $\sem{s_*(\mu)} : \sem \gamma \to \rset$ and
$\zem{s_*(\mu)} : \sem \alpha \imp \sem{s_*(\mu)}$.
We have $\sem s : \sem \alpha \imp \sem\beta : \gamma \to \rset$
and $\zem \mu : \sem \beta \imp \sem \mu$, so let's set
$$\sem{s_*(\mu)} = \sem \mu $$
$$\zem{s_*(\mu)} = \zem \mu \o \sem s$$

\rule{\erule
{\gamma, x : \alpha \prov \beta : \rtype}
{\gamma\prov \beta : \rtype}}
We have $\sem \beta : \sem \gamma \prof \bone$, and we need
to produce
the weakened version of it,
$\sem {\beta_{\mathsf w}} : \sem {\gamma, x : \alpha} \prof \bone$.
So we profunctor-compose with the projection
$$\sem{\gamma, x : \alpha} \prof \sem\gamma$$
to get
\[\begin{tikzcd}[execute at end picture={
\draw[decoration={brace,mirror},decorate]
  ($(b1) + (-1.5em,-0.3em)$) -- ($(b2) + (-1.5em,0.3em)$);
\draw[decoration={brace,mirror},decorate]
  ($(b2) + (-1.5em,-0.3em)$) -- ($(b3) + (-1.5em,0.3em)$);
\draw[decoration={brace,mirror},decorate]
  ($(b1) + (-4.5em,-0.3em)$) -- ($(b3) + (-4.5em,0.3em)$);
\node[left] at ($(b1)!0.5!(b2) + (-2em,0)$) {$\sem\beta$};
\node[left] at ($(b2)!0.5!(b3) + (-2em,0)$) {$\rpr_\alpha$};
\node[left] at ($(b2) + (-5em,0)$) {$\sem{\beta_{\mathsf w}}$};
}]
|[alias=b1]|\bullet\ar[d]\ar[dr]\ar[drr]
\\[3em]
|[alias=b2]|\color{gray}a \ar[from=r]\ar[from=rr, bend left=30]\ar[d]
 & \color{gray}b\ar[dl]\ar[d]
 \ar[from=r, bend left=15] \ar[from=r, bend right=15]
 & \color{gray}c\ar[d]\ar[dl]\ar[dl, shift left]\ar[dll, bend right=5]
\\[3em]
|[alias=b3]|a \ar[from=r]\ar[from=rr, bend left=30] \ar[from=rrr, bend right=30]
 & b \ar[from=rr, bend left=30, shift left=2] \ar[from=rr, bend left=30]
 \ar[from=r, bend left=15] \ar[from=r, bend right=15]
 & c
& x
\end{tikzcd}\]

\rule{\erule{}{\gamma, x : \alpha \prov x : \alpha}}
We need to come up with $\sem x : \sem{ \gamma, x : \alpha} \to \rset$ and
$\zem x : \sem {\alpha_{\mathsf w}} \imp \sem x$.
We let $\sem x = \hom(x, \dash)$ (where $x$ denotes the new object in
the collage $\sem{ \gamma, x : \alpha}$) and
$\zem x$ is the identity on the $\sem \gamma$ part of
$\sem{ \alpha_{\mathsf w}}$, and the inclusion $0 \to 1$ on the $x$ part of it.

\section{Remedial Notes Where I Merely Page Back in Facts about Profunctors}
A profunctor $F : \C \prof \D$ is a functor $F : \D^\op \x \C \to \rset$.
The collage $\col F$ of $F$ is the category whose objects are $\C_0 + \D_0$, and whose homs
are
\[
\begin{tabular}{ll}
$\col F(C_1, C_2) = \C(C_1, C_2)$&$\col F(C, D) = \null$\\
$\col F(D, C) = F(D, C)$&$\col F(D_1, D_2) = \D(D_1, D_2)$
\end{tabular}
\]
The composition $G \o F$ of two profunctors $F : \C \prof \D$ and $G : \D \prof \E$ is
given by the coend
$$(G \o F)(E, C) = \int^{D:\D} G(E, D) \x F(D, C) $$
or, more explicitly,
$$(G \o F)(E, C) = \left(\coprod_{D:\D} G(E, D) \x F(D, C)\right)\bigg/ \sim $$
where $\sim$ is generated by
\[
\erule{
v : D \to D' \in \D\qquad
g \in G(E, D)\qquad
f' \in F(D', C)
}
{
(G(E, v)(g), f') \sim (g, F(v, C)(f'))
}
\]
From the point of view of collages, the category $\col{G \o F}$ looks like
this: you take all of $\C$ and $\E$, and you have some extra heteromorphisms
going from $\E \to \C$. What are they? They're formal composites of heteromorphisms
$\E \to \D$ from $G$ and $\D\to \C$ from $F$. But it might happen that a
morphism in $F$ factors as $D \to D' \to C$. In that case we can equivalently shunt
the $D \to D'$ part onto the $G$-morphism.

\begin{conjecture}[Question]
What's the relationship between
$\col {G\o F}$ and the pushout $\col G +_{\D} \col F$?
They can't be the same thing, since the latter still has the objects
of $\D$ in it, while the former does not. Can we `localize at $\D$' somehow?
\end{conjecture}

How can I express the `lower triangular property' diagrammatically?
By saying that cospan maps on the left in
\[
\begin{tikzcd}
&\btwo \ar[dd]\ar[from=dr, "\dom"']\ar[from=dl,"\cod"]\\
\bone\ar[dd]&&\bone\ar[dd]\\
&{\col F} \ar[from=dr]\ar[from=dl]\\
\C && \D
\end{tikzcd}
\qquad
\begin{tikzcd}
&\btwo \ar[dd]\ar[from=dr, "\cod"']\ar[from=dl,"\dom"]\\
\bone\ar[dd]&&\bone\ar[dd]\\
&{\col F} \ar[from=dr]\ar[from=dl]\\
\C && \D
\end{tikzcd}
\]
can exist, but none on the right. Injectivity on objects
can be expressed by saying that any map $\bone \to \col F$ factors
through exactly one of the cospan injections:
\[
\begin{tikzcd}
&\bone \ar[d]\ar[ddr, dotted]\ar[ddl, dotted]\\
&{\col F} \ar[from=dr]\ar[from=dl]\\
\C && \D
\end{tikzcd}
\]

We can lift a functor $F : \C \to \D$ to a profunctor $F^\star : \C \prof \D$ by
composing $F$ with the yoneda embedding: (think $\C \to \D \to \rset^{\D^\op}$)
$$F^\star (D, C) = \D(D, FC)$$

Or, equally well, we can lift to a profunctor $F_\star : \D \prof \C$ by
composing $F^\op$ with the coyoneda embedding:
(think $\C^\op \to \D^\op \to \rset^{\D}$)
$$F_\star (C, D) = \D(FC, D)$$

Either way we can see that the identity profunctor $\C \prof \C$ --- the
lift of the identity {\em functor} $\C \to \C$ --- is
\[\C(\dash, \dash) : \C^\op \to \C \to \rset\]
The collage of the identity profunctor has two copies of $\C$, glued
together by morphisms of $\C$.

\end{document}
