\documentclass{article}


\usepackage{amsmath}
\usepackage{amssymb}
\input{theorem}

\input{prooftree}
\def\erule#1#2{\begin{prooftree}#1\justifies #2\end{prooftree}}

\usepackage{tikz}
\usepackage{tikz-cd}
\def\adjust{\big|}
\def\O{\mathcal{O}}
\def\rid{\mathsf{id}}
\def\int{\square}
\def\bd{\partial}
\def\prov{\vdash}
\def\prequiv{\dashv\vdash}
\def\imp{\Rightarrow}
\def\cqed{\hskip2mm{\vrule width .5em height .5em depth 0em}} % at the end of a |P.
\def\o{\circ}
\def\C{\mathbb{C}}
\def\N{\mathbb{N}}
\def\R{\mathbb{R}}
\def\x{\times}
\def\st{\mathrel|}
\def\rset{\mathbf{Set}}
\def\op{\mathsf{op}}
\def\P{\mathbf{P}}
\def\dash{\hbox{---}}
\def\deg{\mathop{\mathsf{deg}}}
\def\celse{\mathrel{|}}
\def\cn{{:}}
\def\rok{\mathrel\mathsf{ok}}
\def\sub{\subseteq}




\title{Categorifying the BCH Formula}
\begin{document}
\maketitle
\tikzset{
   commutative diagrams/.cd,
   arrow style=tikz,
   diagrams={>=stealth}}
\section{Categorifying BCH}

My goal is to phrase the Baker-Campbell-Hausdorff formula in a more combinatorial way; i.e.
I want to replace the arithmetic/analytic statement that
\[ e^A e^B = e^{A + B + [A,B]/2 + [A,[A,B]]/12 + [B,[B,A]]/12 + \cdots}\]
with some statement or statements about isomorphisms between sets and/or relations.

I'm trying to follow the approach in
 \[\texttt{http://webhome.phy.duke.edu/$\sim$mehen/760/ProblemSets/BCH.pdf}\]
for understanding what the coefficients of the BCH are in general.

\subsection{Relations}
A binary relation on $X$ means a set $R$ together with a map $R \to X \x X$.
\begin{center}
\begin{tikzcd}
&[-12pt] R
\ar["{\rho_1}"']{ld}\ar["{\rho_2}"]{rd}
&[-12pt]
\\
X&&X
\end{tikzcd}
\end{center}
These play the role of the operators $A, B$ in the BCH formula. We can
do some of the same arithmetic on relations as we can do on operators,
of course saliently missing out on subtraction and division.

The sum of two relations $(R,\rho_1, \rho_2),(S, \sigma_1,\sigma_2)$ is written $R+S$ and is defined by taking
its carrier to be the coproduct of the relations' carriers, and
its projections to be the copairing of the projections
of the relations:
\begin{center}
\begin{tikzcd}
&[-12pt] R+S
\ar["{[\rho_1,\sigma_1]}"']{ld}\ar["{[\rho_2,\sigma_2]}"]{rd}
&[-12pt]
\\
X&&X
\end{tikzcd}
\end{center}
We can do ``scalar multiplication'' of a relation (i.e. ``operator'') by a set (i.e. ``scalar'').
If $R$ is a relation and $y$ is a set, then $yR$ is a relation in an evident way. We take the carrier
to be the product of the carrier of $R$ with the set $y$, and project out the $y$.
\begin{center}
\begin{tikzcd}
&[-12pt] y \x R
\ar["{ \rho_1 \o \pi_2}"']{ld}\ar["{\rho_2 \o \pi_2}"]{rd}
&[-12pt]
\\
X&&X
\end{tikzcd}
\end{center}
Two relations are considered isomorphic if there is an isomorphism of their carriers
such that both triangles in the diagram
\begin{center}
\begin{tikzcd}&[-12pt]  R\ar[dd, equal]
\ar{ld}\ar{rd}
&[-12pt]
\\
X&&X\\
&  S\ar[ul]\ar[ur]
\end{tikzcd}
\end{center}
commute.
Finally, composition of two relations $R$ and $S$ is given by pullback:

\begin{center}
\begin{tikzcd}
&[-6pt]&[-12pt] RS
\ar{ld}\ar{rd}
\ar[phantom, very near start]{dd}{\rotatebox{-45}{$\lrcorner$}}
&[-12pt]&[-6pt]
\\
&
R\ar{ld}\ar{rd}
&& S\ar{ld}\ar{rd}\\
X && X && X
\end{tikzcd}
\end{center}


\subsection{First Lemma}
The first step is to categorify
\[ e^{-B} A e^{B}  = A + [A,B] + [[A,B],B]/2 + [[[A,B],B],B]/3! + \cdots \]
First let's generalize this by replacing $B$ with $Bx$. We get
\[ e^{-Bx} A e^{Bx}  = A + [A,Bx] + [[A,Bx],Bx]/2 + [[[A,Bx],Bx],Bx]/3! + \cdots \]
which by bilinearity of Lie bracket is
\[ e^{-Bx} A e^{Bx}  = A + [A,B]x + [[A,B],B]x^2/2 + [[[A,B],B],B]x^3/3! + \cdots \]

Let's abbreviate $L_m = [[\cdots [A,\overbrace{B],\cdots, B ],B}^m]$ and note that these satisfy the recurrence
(which makes sense for relations as well as operators, since we have removed the subtraction involved in the Lie bracket)
\[L_0 = A \qquad L_{m+1} + B L_m = L_m B\]

Then our equation becomes
\[ e^{-Bx} A e^{Bx}  = \sum_m {x^m \over m!} L_m \]
Let's multiply both of these on the left by $e^{Bx}$. We get
\[  A e^{Bx}  = e^{xB} \left( \sum_m {x^m \over m!} L_m \right) \]
We can pull out the coefficients of these exponential generating functions by
taking iterated derivatives:
\[ \left(\partial\over\partial x\right)^n \left. \left(A e^{Bx}  \right)\right|_{x=0} =
 \left(\partial\over\partial x\right)^n \left.\left(e^{xB} \left( \sum_m {x^m \over m!} L_m \right)  \right)\right|_{x=0} \]
and computing these derivatives gives us the equation
\[ A B^n  = \sum_{m=0}^n   {n \choose m} B^{n-m} L_{m} \]
Now this equation is also free of any operations that don't make sense for relations.
So our goal is to prove the following:
\begin{lemma}
Suppose $A$ and $B$ are binary relations on some set $X$.
Suppose for every $m \ge 0$ that $L_m$ is a binary relation on $X$,
together satisfying the isomorphisms
\[L_0 = A \qquad L_{m+1} + B L_m = L_m B\]
Then there is an isomorphism of relations
\[ AB^n  = \sum_{m=0}^n   {n \choose m} B^{n-m} L_{m} \]
\end{lemma}

\begin{proof}
By induction on $n$. If $n=0$, then we are to show $A=L_0$, which is true by definition.
Otherwise, we know
\begin{equation}\tag{$\dagger$}
AB^n  = \sum_{m=0}^n   {n \choose m} B^{n-m} L_{m}
\end{equation}
and we must show
\[A B^{n+1}  = \sum_{m=0}^{n+1}   {n+1 \choose m} B^{n+1-m} L_{m} \]
By $(\dagger)$, it would suffice to show
\[\left(\sum_{m=0}^n   {n \choose m} B^{n-m} L_{m} \right)B =
 \sum_{m=0}^{n+1}   {n+1 \choose m} B^{n+1-m} L_{m} \]
But we can in fact reason that
\[\left(\sum_{m=0}^n   {n \choose m} B^{n-m} L_{m} \right)B =
\left(\sum_{m=0}^n   {n \choose m} B^{n-m} L_{m} B\right) \]
\[= \left(\sum_{m=0}^n   {n \choose m} B^{n-m} (L_{m+1} + B L_m) \right) \]
\[= \left(\sum_{m=0}^n   {n \choose m} B^{n-m} L_{m+1} \right) + \left(\sum_{m=0}^n   {n \choose m} B^{n+1-m} L_m \right) \]
\[= \left(\sum_{m=1}^{n+1}   {n \choose m-1} B^{n+1-m} L_{m} \right) + \left(\sum_{m=0}^n   {n \choose m} B^{n+1-m} L_m \right) \]
\[= \sum_{m=0}^{n+1}   \left({n \choose m-1} + {n \choose m}\right) B^{n+1-m} L_{m}  \]
\[= \sum_{m=0}^{n+1}   {n+1 \choose m} B^{n+1-m} L_{m}  \]
as required.
\cqed
\end{proof}

\subsection{Second Lemma}
Next we want to categorify the fact that
\[ e^{-G} {d\over dx} e^G = D + {1\over 2} [D, G] + {1 \over 3!} [[D, G], G] + \cdots\]
For any $G(x)$ that produces an operator given a scalar $x$, where $D = (d/dx)G$.
We first generalize by replacing $G$ with $Gy$. We get
\[ e^{-Gy} {d\over dx} e^{Gy} = yD + {y^2\over 2} [D, G] + {y^3 \over 3!} [[D, G], G] + \cdots\]
Multiply both sides on the left by $e^{Gy}$ to obtain
\[  {d\over dx} e^{Gy} = e^{Gy} \left(Dy + {y^2\over 2} [D, G] + {y^3 \over 3!} [[D, G], G] + \cdots\right)\]

Make the definitions
\[ M_1 = D \qquad M_{m+1} = [M_m, G]\]
Foreshadowing the desire to express constraints on relations rather than operators, this is equivalent
to requiring
\[ M_0 = 0 \qquad M_1 = D \qquad M_{m+1} + G M_m = M_m G\]
The equation we're trying to show now becomes
\[  {d\over dx} e^{Gy} = e^{Gy} \left(\sum_{m=0}^\infty {y^m\over m!} M_m \right)\]

Now let's also define $S_m$ to be the $m$-term sum of $m-1$ iterates
of $G$ with a $D$ somewhere in the middle.
\[ (DG\cdots G) + (GD\cdots G) + \cdots + (G\cdots DG) + (G\cdots GD)\]
So that
\[ {d\over dx}e^{Gy} = {d\over dx}\left(1 + Gy + {y^2\over 2!}G^2 + {y^3\over 3!}G^3 + \cdots\right)\]
\[= \left(yD + {y^2\over 2!}(DG + GD) + {y^3\over 3!}(DGG + GDG + GGD) + \cdots\right)\]
\[= \left(yS_1 + {y^2\over 2!}S_2 + {y^3\over 3!}S_3 + \cdots\right)\]
\[= \sum_{m=0}^\infty {y^m\over m!}S_m \]
So what we want to show is
\[ \sum_{m=0}^\infty {y^m\over m!}S_m = e^{Gy} \left(\sum_{m=0}^\infty {y^m\over m!} M_m \right) \]
By differentiating this expression by $y$ on both sides $n$ times, we see that it would suffice to show
\[ S_n = \sum_{k = 0}^n {n \choose k} G^k M_{n-k} \]
for every $n$.

\begin{lemma}
Suppose $G$ is a binary relation on a set $X$ and there exist sequences
 $(M_i)_{i \ge 1}$ and $(S_i)_{i\ge 1}$ of binary relations on $X$ satisfying the isomorphisms
\[  M_1 = D \qquad M_{n+1} + G M_n = M_n G\]
\[  S_1 = D \qquad S_{n+1} = G^n D + S_n G \]
Then for every $n \ge 0$ we have an isomorphism
\[ S_n = \sum_{k = 0}^{n-1} {n \choose k} G^k M_{n-k} \]
\end{lemma}

\begin{proof}
The base case is $n=1$. We must show $S_1 = M_1$, but this is true by definition.
Otherwise, we know
\[ S_n = \sum_{k = 0}^{n-1} {n \choose k} G^k M_{n-k} \]
and try to show
\[ S_{n+1} = \sum_{k = 0}^{n} {{n+1} \choose k} G^k M_{{n+1}-k} \]
We show this as follows:
\[ S_{n+1} = G^n D + S_n G   \]
\[ = G^n D + \left(\sum_{k = 0}^{n-1} {n \choose k} G^k M_{n-k} \right)G \]
\[ = G^n D + \sum_{k = 0}^{n-1} {n \choose k} G^k M_{n-k} G \]
\[ = G^n D + \sum_{k = 0}^{n-1} {n \choose k} G^k (M_{n+1-k} + G M_{n-k})  \]
\[ = G^n D + \sum_{k = 0}^{n-1} {n \choose k} G^k M_{n+1-k} + \sum_{k = 0}^{n-1} {n \choose k} G^{k+1} M_{n-k}  \]
\[ = G^n D + \sum_{k = 0}^{n-1} {n \choose k} G^k M_{n+1-k} + \sum_{k = 1}^{n} {n \choose k - 1} G^{k} M_{n+1-k}  \]
\[ = G^n D + \left(M_{n+1} +  \sum_{k = 1}^{n-1} {n \choose k} G^k M_{n+1-k}\right)
 +\left(nG^nD + \sum_{k = 1}^{n-1} {n \choose k - 1} G^{k} M_{n+1-k} \right) \]
\[ = G^n D + M_{n+1} + nG^nD + \sum_{k = 1}^{n-1} \left({n \choose k}+{n \choose k - 1}\right) G^k M_{n+1-k}\]
\[ = G^n D + M_{n+1} + nG^nD + \sum_{k = 1}^{n-1} {n+1 \choose k} G^k M_{n+1-k} \]
\[ = (n+1)G^nD + \sum_{k = 0}^{n-1} {n+1 \choose k} G^k M_{n+1-k} \]
\[ = \sum_{k = 0}^{n} {n+1 \choose k} G^k M_{n+1-k} \]
as required. \cqed
\end{proof}

\subsection{Conjectures}

This is the most up-to-date rephrasing of ``The Lemma'' below as of 2022-06-09.

Define
\[(A \oplus B)^n = \sum_{k = 0}^n {n \choose k} A^k B^{n-k}\]
 \[G_{[\lambda_0,\ldots, \lambda_{k-1}]} = [[G_{\lambda_0}, G_{\lambda_1} ]\cdots  G_{\lambda_{k-1}}]\]
 \[G_{\lambda_0,\ldots, \lambda_{k-1}} = G_{\lambda_0} G_{\lambda_1} \cdots  G_{\lambda_{k-1}}\]

\[S^\sigma_{n} = \sum_{k = 1}^{n} \sum_{\lambda : (k, n+1)}  { n! \over k!} G_\lambda\sum_{i=0}^{k-1} [(-1)^i = \sigma]{k-1 \choose i}\lambda_i\]

\begin{lemma}
Let relations $A, B$ be given. Suppose I have $L_0, L_1, L_2, \ldots$ such that
\[L_0 = A; \qquad L_{n+1} + BL_n = L_nB \qquad (n \ge 1)\]

%% \[ L_n = \sum_{k = 1}^{n}\sum_{\lambda : k, n+1}
%%   {\lambda_0 n! \over k!}  G_{[\lambda]} \eqno(\dagger)\]
\[  (n+1)!G_{n+1} + S^+_{n} = L_n + S^-_{n}  \qquad (n \ge 1)\]

Then
\[ (A \oplus B)^n = \sum_{\lambda : (k,n)} {n!\over k!}  G_\lambda\]
(i.e. ``$ e^{xA}e^{xB} = e^{G(x)}$'')
\end{lemma}

This depends on
\begin{lemma}
\[  \sum_{\lambda : (k, n)} G_{[\lambda]}\lambda_0
  = \sum_{\lambda : (k, n)}   G_\lambda\sum_{i=0}^{k-1} (-1)^i{k-1 \choose i}\lambda_i\]
\end{lemma}

\begin{corollary}
\[  \sum_{k = 1}^{n}\sum_{\lambda : (k, n+1)} { n! \over k!}G_{[\lambda]}\lambda_0
  = \sum_{k = 1}^{n} \sum_{\lambda : (k, n+1)}  { n! \over k!} G_\lambda\sum_{i=0}^{k-1} (-1)^i{k-1 \choose i}\lambda_i\]
\end{corollary}







\subsection{Combining Lemmas}

We want to find $G$ such that
\[ e^{A}e^{B} = e^{G}\]
Mehen's approach is to observe that it would be enough to find a
\[G(x) = \sum_{n \ge 1} x^n G_n\]
satisfying
\[e^{-Bx} e^{-Ax}   {d\over dx} e^{Ax} e^{Bx} = e^{-G(x)} {d\over dx} e^{G(x)}  \]
By the above lemmas, the lhs of this is equal to
\[e^{-Bx} e^{-Ax}   (A e^{Ax} e^{Bx} +  e^{Ax}B  e^{Bx}) \]
\[= e^{-Bx} A e^{Bx} +  B  \]
\[= B + e^{-Bx} A e^{Bx}  \]
\[= B + A + [A, B]x + [[A, B], B] x^2/2 + [[[A,B],B],B]x^3/3! + \cdots \]
and the rhs is
\[ D +  [D, G]{1\over 2!} +  [[D, G], G]{1 \over 3!} + \cdots\]
where $D = (d/dx)G$. Noting that
\[G = xG_1 + x^2G_2 + x^3G_3 + x^4G_4 + x^5G_5 + \cdots\]
\[D = G_1 + 2xG_2 + 3x^2G_3 + 4x^3G_4 + 5x^4G_5 + \cdots\]
we can write out what the rhs looks like in somewhat more detail, in terms of commutators of the individual $G_i$.

\[\mathsf{rhs} = G_1 + 2xG_2 + 3x^2G_3+ {\cdots} + {}\]
\[  [G_1 + 2xG_2 + 3x^2G_3+ \cdots, xG_1 + x^2G_2 + x^3G_3 + \cdots] / 2! + {}\]
\[  [[G_1 + 2xG_2 + 3x^2G_3+ \cdots, xG_1 + x^2G_2 + x^3G_3 + \cdots], xG_1 + x^2G_2 + \cdots] / 3! + \]
\[ \cdots\]
so here's what we're going to do:
\begin{enumerate}
\item collect terms together of like degree in $x$
\item define $G_{[ij\cdots k]}$ to be $[[\cdots [G_i,G_j],\cdots],G_k]$
\item define $R_{n+1} = (\partial / \partial x)^{n} \mathsf{rhs} \adjust_{x=0}$
and $L_{n+1} = (\partial / \partial x)^{n} \mathsf{lhs} \adjust_{x=0}$ and observe
$L_n = R_n$.
\item ignore $G_{[11\cdots 1]}$ because they're always zero.
\end{enumerate}
We get:
\[A + B = G_1\]
\[L_1 = [A,B] = 2G_{2}\]
\[L_2 = [L_1, B] = 6G_3 + G_{[12]} + 2G_{[21]} \]
\[L_3 = [L_2, B] = 24G_4 + 3G_{[13]}  + 6G_{[22]} + 9G_{[31]} + G_{[112]} + G_{[121]} + 2G_{[211]}\]
\[L_4 = [L_3, B] = 120G_5 + 12G_{[14]} + 24G_{[23]} + 36G_{[32]} + 48G_{[41]} + {}\]
\[ 4G_{[113]} + 4G_{[131]} + 12G_{[311]} + 4G_{[122]} + 8G_{[221]} + 8G_{[212]} + {}\]
\[ G_{[1112]} + G_{[1121]} + G_{[1211]} + 2G_{[2111]} \]

When $\lambda_1,\ldots,\lambda_k$ satisfy
\begin{itemize}
\item $\forall i . \lambda_i \ge 1$
\item $n = \sum_i \lambda_i$
\end{itemize}
we write $\lambda : (k, n)$.

In general I think what the above is saying is that
\[ A + B = G_1 \]
\[  L_n = \sum_{k = 1}^{n}\sum_{\lambda : (k, n+1)} {\lambda_1 n! \over k!}  G_{[\lambda]} \]

We can rearrange this to emphasize $G_{n+1}$:

\[  (n+1)!G_{n+1} = L_n - \sum_{k = 2}^{n}\sum_{\lambda : (k, n+1)} {\lambda_1 n! \over k!}  G_{[\lambda]}   \]

The recurrences I should have are

\[L_0 = A \qquad L_{n+1} + BL_n = L_nB \]
\[G_{[\lambda n]} + G_nG_{[\lambda]} = G_{[\lambda]} G_n\]

Let's define $H_{[\lambda]} = -G_{[\lambda]}$ when $|\lambda| \ge 2$, then we have the
``definitions'' of $G_i$ and $L_i$ and $H_{[\lambda]}$:

\[  (n+1)!G_{n+1} = L_n + \sum_{k = 2}^{n}\sum_{\lambda : (k, n+1)} {\lambda_1 n! \over k!}  H_{[\lambda]}   \]
\[L_0 = A \qquad L_{n+1} + BL_n = L_nB \]
\[H_{[\lambda n]} + G_nH_{[\lambda]} =  H_{[\lambda]} G_n  \qquad (|\lambda| \ge 2)\]
\[H_{[m n]} + G_{m} G_n = G_nG_{m} \]

Now if we define
\[ (A \oplus B)^n = \sum_{i=0^n}{n\choose i} A^i B^{n-i} \]
we should expect
\[ (A \oplus B)^n = \left({\partial \over \partial x}\right)^n e^{xG_1 + x^2G_2 + x^3G_3 + \cdots }\]
e.g. defining $G_{ijk} = G_iG_jG_k$ I get
\[ (A + B) = G_1 \]
\[ (A \oplus B)^2 = G_{11} + 2G_2 \]
\[ (A \oplus B)^3 = G_{111} + 3G_{21} + 3G_{12} + 6G_3 \]
\[ (A \oplus B)^4 = G_{1111} + 4G_{112} + 4G_{121} + 4G_{211} + 12G_{31} + 12G_{22} + 12G_{13} + 24G_4 \]
Let's see which of these I can show.
\begin{itemize}
\item[$n=1$.]
Trivial.
\item[$n=2$.]
We have $G_1^2 = AA + AB + BA + BB$ and $2G_2 = L_1$. So clearly $AA + AB + BA + BB + L_1 = AA + 2AB + BB$ as required.
\item[$n=3$.]
Let's first look at $6G_3$. We know that's equal to
\[L_2 + \sum_{\lambda:(2, 3)} \lambda_1 H_{[\lambda]}
= L_2 + 2H_{[21]} + H_{[12]}
\]
Let's try to use up these $H$'s. I reckon these will turn our $3G_{21}+3G_{12}$ into $2G_{21} + 4G_{12}$.
I can evaluate that to $LA + LB + 2AL + 2BL$. Now I want to use the $L_2$ to turn this into
$LA + 2LB + 2AL + BL$.
This is finally the right set of ingredients to turn
\[G_1^3 = AAA + AAB + ABA + ABB + BAA + BAB + BBA + BBB\]
into
\[AAA + 3AAB + 3ABB + BBB\]
as required.
\item[$n=4$.]
Let's first look at $24G_4$. We know that's equal to
\[L_3 + \sum_{k = 2}^3 \sum_{\lambda:(k, 4)} {\lambda_1 3!\over k!} H_{[\lambda]}
= L_3 + \sum_{\lambda:(2, 4)} {3\lambda_1} H_{[\lambda]}
+ \sum_{\lambda:(3, 4)} {\lambda_1} H_{[\lambda]}
\]
\[
= L_3 + \sum_{\lambda:(2, 4)} {3\lambda_1} H_{[\lambda]}
+ \sum_{\lambda:(3, 4)} {\lambda_1} H_{[\lambda]}
\]
\[
= L_3 + 3H_{[13]}  + 6H_{[22]} + 9H_{[31]} + H_{[112]} + H_{[121]} + 2H_{[211]}
\]
The remainder of the stuff we have to act on is
\[ G_{1111} + 4G_{112} + 4G_{121} + 4G_{211} + 12G_{31} + 12G_{22} + 12G_{13}\]
Oof I'm kind of anxious about those $H_{[112]}$ with three digits. Can I reduce it to actions
on multiplied $G$'s?
\[ H_{[112]} = -[[G_1, G_1], G_2] = 0 \]
\[ H_{[121]} = -[[G_1, G_2], G_1] = -H_{[211]} \]
so in this case I can ignore them but that's a tiny bit suspect.
What I have now is
\[ = L_3 + 3H_{[13]} + 9H_{[31]}\]
acting on
\[ G_{1111} + 4G_{112} + 4G_{121} + 4G_{211} + 12G_{31} + 12G_{22} + 12G_{13}\]
I know that $H_{[mn]}$ swaps $G_{m}G_{n}$ so what I have now is
\[ G_{1111} + 4G_{112} + 4G_{121} + 4G_{211} + 6G_{31} + 12G_{22} + 18G_{13}\]
Let's expand out the definitions of $G_3$.
\[ G_{1111} + 4G_{112} + 4G_{121} + 4G_{211} + {}\]
\[(L_2 + 2H_{[21]} + H_{[12]})G_1 + 12G_{22} + 3G_1 (L_2 + 2H_{[21]} + H_{[12]})\]
and simplify for net effect:
\[ G_{1111} + 4G_{112} + 4G_{121} + 4G_{211} + {}\]
\[(L_2 + H_{[21]})G_1 + 12G_{22} + 3G_1 (L_2 + H_{[21]})\]
Let's use up those $H_{[21]}$ now:
\[ G_{1111} + 7G_{112} + 2G_{121} + 3G_{211} + {}\]
\[L_2 G_1 + 12G_{22} + 3G_1 L_2 \]
Now what do the $L_2$'s do? $L_2 + BL_1 = L_1B$.
So
\[L_2G_1 + BL_1G_1 = L_1BG_1\]
\[3G_1L_2 + 3G_1BL_1 = 3G_1L_1B\]
which means we compute... ugh this seems wrong. I don't trust these odd numbers.
\end{itemize}


\subsection{More Sandbox}
I need to rework the definition
\[  (n+1)!G_{n+1} = L_n - \sum_{k = 2}^{n}\sum_{\lambda : (k, n+1)} {\lambda_1 n! \over k!}  G_{[\lambda]}   \]
to capture both the $G$-products that $G_{n+1}$ creates and destroys.

Suppose $\lambda = \lambda_1, \ldots,\lambda_k$ is a sequence. We define $M^\sigma(\lambda)$
to be a multiset of sequences for $\sigma \in \{+,-\}$ like so.

\[
M^+(n) = \{n\} \qquad M^-(n) = \emptyset
\]
\[
M^\sigma(\lambda n) = \{ \rho n \st \rho \in M^\sigma(\lambda)\} \cup \{ n \rho  \st \rho \in M^{-\sigma}(\lambda)\}
\]
So for example $M^+(abc) = \{abc, cba\}$ and $M^-(abc) =  \{bac, cab\}$.

Define
\[S^\sigma_{n} = \sum_{k=2}^n \sum_{\lambda :(k, n+1)} \sum_{\rho \in M^\sigma (\lambda)} {\lambda_1 n!\over k!} G_{\rho}\]
Then we can assert more explicit recurrence defining the $G_n$ as
\[ G_1 = A+B \]
\[  (n+1)!G_{n+1} + S^+_{n} = L_n + S^-_{n}  \qquad (n \ge 1)\]
Let's work out the next few.
\[ 2G_2 = L_1 \]
\[ 6G_3 + 2G_{21} + G_{12} = L_2 + 2G_{12} + G_{21}\]
\[ 6G_3 + G_{21}  = L_2 + G_{12} \qquad \hbox {(net)}\]
I wrote some code to compute the following:
\[24G_{4} + 3 G_{13} + 6 G_{22} + 9 G_{31} + 3 G_{112} + 2 G_{121} + 3 G_{211} =\]
\[ L_{3} + 9 G_{13} + 6 G_{22} + 3 G_{31} + 2 G_{112} + 4 G_{121} + 2 G_{211}\]
\[24G_{4} + 6 G_{31} +  G_{112} +  G_{211} =  L_{3} + 6 G_{13} + 2 G_{121} \qquad\hbox{(net)}\]

Going back to the $n=4$ case I have
\[ (A \oplus B)^4 = G_{1111} + 4G_{112} + 4G_{121} + 4G_{211} + 12G_{31} + 12G_{22} + 12G_{13} + 24G_4 \]
and using up the $G_4$ I get
\[  G_{1111} + 3G_{112} + 6G_{121} + 3G_{211} + 6G_{31} + 12G_{22} + 18G_{13} + L_3 \]
Let's try the $G_{3}$ now.
\[ G_{1111} + 6G_{112} + 4G_{121} + 2G_{211} + L_2G_{1} + 12G_{22} + 3G_{1}L_2 + L_3 \]
Looking better than before! Let's try the $L_3$.
\[ G_{1111} + 6G_{112} + 4G_{121} + 2G_{211} + 12G_{22} + L_2A + 3 AL_2 + 2BL_2 + 2L_2B  \]
Ok, let's try the $G_2$s. They turn into $L_1$s dividing by two.
\[ G_{1111} + 3G_{11L} + 2G_{1L1} + G_{L11} + 3L_1L_1 + L_2A + 3 AL_2 + 2BL_2 + 2L_2B  \]
I have to expand out some of these $G_1$'s I guess.
\[ G_{1111} + 3(A+B)^2L_1 + 2(A+B)L_1(A+B) + L_1(A+B)^2 + {}\]
\[ 3L_1L_1 + L_2A + 3 AL_2 + 2BL_2 + 2L_2B  \]
which is
\[ G_{1111} + 3AAL + 3ABL + 3BAL + 3BBL +{}\]
\[  2ALA + 2ALB + 2BLA + 2BLB + {}\]
\[  LAA + LAB + LBA + LBB + {}\]
\[ 3L_1L_1 + L_2A + 3 AL_2 + 2BL_2 + 2L_2B  \]
Let's see what I can do with the $L_2$s. They should each move a $B$ to the right across an $L_1$.
\[ G_{1111} + 3AAL +  3BAL + BBL + 2BLB + {}\]
\[  2ALA + 5ALB + BLA + {}\]
\[  LAA + LAB + 2LBA + 3LBB + {}\]
\[ 3LL    \]
I'ma take a leap of faith and assume the $LL$ applies to $BAL$ even though I have no way of being sure:
\[ G_{1111} + 3AAL +  3ABL + BBL + 2BLB + {}\]
\[  2ALA + 5ALB + BLA + {}\]
\[  LAA + LAB + 2LBA + 3LBB \]
Let's see what happens to $G_{1111}$.

Grr... I didn't turn out right.

% L_2 : BL →  LB
%% function comps(n) {
%%   if (n <= 0) return [[]];
%%   let rv = [];
%%   for (let i = 1; i <= n; i++) {
%%     rv = [...rv, ...comps(n-i).map(c => [...c, i])];
%%   }
%%   return rv;
%% }

%% function perms(comp, sgn) {
%%   if (comp.length == 1) {
%%     return sgn == 1 ? [comp] : [];
%%   }
%%   const prefix = comp.slice(0, comp.length - 1);
%%   const last = comp[comp.length - 1];
%%   return [
%%     ...perms(prefix, -sgn).map(perm => [last, ...perm]),
%%     ...perms(prefix, sgn).map(perm => [...perm, last]),
%%   ];
%% }

%% function factorial(n) {
%%   if (n <= 1) return 1;
%%   return n * factorial(n-1);
%% }

%% function pretty(terms) {
%%   const rv = {};
%%   terms.forEach(term => {
%%     const {coeff, perm} = term;
%%     const k = perm.join(''); // not valid if numbers > 9!
%%     rv[k] = (rv[k] ?? 0) + coeff;
%%   });

%%   return Object.entries(rv).map(([k,v]) => {
%%     return `${v} G_{${k}}`;
%%   }).join(' + ');
%% }

%% function go(m) {
%%   const n = m - 1;
%%   const cs = comps(n+1);
%%   let posTerms = [];
%%   let negTerms = [];
%%   for (let k = 2; k <= n; k++) {
%%     const csk = cs.filter(c => c.length == k); // compositions of k parts, adding to n+1
%%     const nk = factorial(n) / factorial(k);
%%     posTerms = [...posTerms, ...csk.flatMap(c => perms(c,  1).map(perm => ({coeff: c[0] * nk, perm})))];
%%     negTerms = [...negTerms, ...csk.flatMap(c => perms(c, -1).map(perm => ({coeff: c[0] * nk, perm})))];

%%   }
%%   console.log(`${factorial(n+1)}G_{${n+1}} + ${pretty(posTerms)} = L_{${n}} + ${pretty(negTerms)}`);
%% }

%% go(4);

\vskip 1in
\vfil\eject



\[DG =  x(G_1G_1) + x^2(2G_2G_1 + G_1G_2)\]
\[ + x^3(3G_3G_1 + 2G_2G_2 + G_1G_3) \]
\[ + x^4(4G_4G_1 + 3G_3G_2 + 2G_2G_3 + G_1G_4) + \cdots\]
\[GD =  x(G_1G_1) + x^2(2G_1G_2 + G_2G_1)\]
\[ + x^3(3G_1G_3 + 2G_2G_2 + G_3G_1) \]
\[ + x^4(4G_1G_4 + 3G_2G_3 + 2G_3G_2 + G_4G_1) + \cdots \]
\[ [D,G]{1\over 2!} = {1\over 2!}(x[G_1,G_1] +  x^2(2[G_2,G_1] + [G_1,G_2])\]
\[ + x^3(3[G_3,G_1] + 2[G_2,G_2] + [G_1,G_3]) \]
\[ + x^4(4[G_4,G_1] + 3[G_3,G_2] + 2[G_2,G_3] + [G_1,G_4]) + \cdots)\]
\[ [D,G] =  x^2[G_2,G_1]  + 2x^3[G_3,G_1]  + x^4(3[G_4,G_1] + [G_3,G_2] ) + \cdots\]

\[G = xG_1 + x^2G_2 + x^3G_3 + x^4G_4 + x^5G_5 + \cdots\]
\[ [[D,G],G] =  x^3[[G_2,G_1],G_2]  + x^4(2[[G_3,G_1],G_1] + [[G_2,G_1],G_2]) \]
\[ + x^5(3[[G_4,G_1],G_1] + [[G_3,G_2],G_1] + 2[[G_3,G_1],G_2] + [[G_2,G_1],G_3] ) + \cdots\]


\[G = \sum_{n = 1}^\infty x^n G_n\]
\[D = \sum_{n = 1}^\infty nx^{n-1} G_n\]
\[[D, G] = \sum_{n = 2}^\infty \sum_{i+j = n} ix^{n-1} [G_i,  G_j]\]


\[\sum_{k=0}^\infty {1\over(k+1)!}[[D, \overbrace{G]\cdots G}^k] = \]
\[\sum_{k=0}^\infty {1\over(k+1)!}\sum_{n = k}^\infty \sum_{\lambda, \lambda_1,\ldots,\lambda_k \prov n} \lambda x^{n-1} [[G_{\lambda}, G_{\lambda_1} ]\cdots  G_{\lambda_k}]\]

\[\sum_{n = 1}^\infty x^{n-1} \sum_{k=0}^\infty {1\over(k+1)!} \sum_{\lambda, \lambda_1,\ldots,\lambda_k \prov n} \lambda  [[G_{\lambda}, G_{\lambda_1} ]\cdots  G_{\lambda_k}]\]

So I get $1$ coefficient is $G_1 = A + B$, and for the $x$ coefficient, I get
\[ x([G_1,G_1]{1\over 2!} + 2G_2) = 2xG_2 = x[A,B] \]
so $G_2 = [A,B]/2!$. For $x^2$ I get
\[ x^2([[G_1,G_1],G_1]{1\over 3!} + {2\over 2!}[G_2,G_1] + {1\over 2!}[G_1, G_2] + 3G_3) = {x^2\over 2!}[[A,B],B] \]
\[ 2[G_2,G_1] + [G_1, G_2] + 6G_3 = [[A,B],B] \]
so
\[ G_3 = {1\over 3!} ([[A,B],B] - 2[G_2,G_1] - [G_1, G_2] ) \]
\[ = {1\over 3!} ([[A,B],B] - [[A,B], A + B] - 1/2[A + B, [A,B]] ) \]
\[ = {1\over 3!} ([[A,B],B] - [[A,B], A + B]/2  ) \]
\[ = {1\over 12} ([[A,B],B] - [[A,B], A]  ) \]
\[ = {1\over 12} ([[A,B],B] + [[B,A], A]  ) \]

 For $x^3$ I get
\[ x^3([[[G_1,G_1],G_1],G_1]{1\over 4!} + {2\over 3!}[[G_2,G_1],G_1] + {1\over 3!}[[G_1, G_2],G_1] + {3\over 2}[G_3,G_1] \]
\[ + [[G_1,G_1],G_2]{1\over 3!} + {2\over 2!}[G_2,G_2] + {1\over 2!}[G_1, G_3] + 4G_4 )\]
\[= {x^3\over 3!}[[[A,B],B],B] \]
Therefore I need
\[ {2}[[G_2,G_1],G_1] + [[G_1, G_2],G_1] + 9[G_3,G_1] \]
\[ + [[G_1,G_1],G_2] + 6[G_2,G_2] + 3[G_1, G_3] + 24G_4 \]
\[= [[[A,B],B],B] \]

Summarizing a conjecture:
If we have
\[ G_1 = A + B\]
\[  2G_2 = [A,B] \]
\[ 2[G_2,G_1] + [G_1, G_2] + 6G_3 = [[A,B],B] \]
\[ {2}[[G_2,G_1],G_1] + [[G_1, G_2],G_1] + 9[G_3,G_1] \]
\[ + [[G_1,G_1],G_2] + 6[G_2,G_2] + 3[G_1, G_3] + 24G_4 \]
\[= [[[A,B],B],B] \]
and generally something like
\[ [[A,\overbrace{B],\cdots,B}^{n}] = \sum_{k = 1}^{n}\sum_{\lambda_1,\ldots,\lambda_k \prov n+1}
  {\lambda_1 n! \over k!}  [[G_{\lambda_1}, G_{\lambda_2} ]\cdots  G_{\lambda_k}] \]
then
\[e^{xA} e^{xB} = e^{xG_1 + x^2 G_2 + \cdots} \]

\section{Sandbox}
\subsection{Expansion}
Define $[\vec G]$ by
\[ [H] = H \qquad [\vec G H] = [\vec G]H - H[\vec G] \]
Define $E(\vec G)$ by
\[ E(H) = 0 \qquad  E(\vec GH) = E(\vec G)H + H[\vec G]\]

\begin{lemma}
\[[\vec G] + E(\vec G)  = \prod \vec G\]
\end{lemma}
\begin{proof}
By induction. Base case is $H = H$.
For the step case, we want to verify
\[[\vec G H] + E(\vec G H)  = \left(\prod \vec G\right)H\]
This is the same as
\[[\vec G]H - H[\vec G] + E(\vec G) H + H[\vec G]  = \left(\prod \vec G\right)H\]
and this follows by i.h. multiplied on the right by $H$
\cqed
\end{proof}



\subsection{Computations}
Assume
\[ G_1 = A + B\]
\[  2G_2 = [A,B] \]
\[ 2[G_2,G_1] + [G_1, G_2] + 6G_3 = [[A,B],B] \]
\[ {2}[[G_2,G_1],G_1] + [[G_1, G_2],G_1] + 9[G_3,G_1] \]
\[ + [[G_1,G_1],G_2] + 6[G_2,G_2] + 3[G_1, G_3] + 24G_4 \]
\[= [[[A,B],B],B] \]
And assume Lie bracket is defined by $[X,Y] + YX = XY$ for
every $X,Y$ that actually occurs.
Try to show
\[ \sum_{k = 0}^n {n \choose k} A^k B^{n-k} = \sum_{\lambda_1,\ldots,\lambda_k\prov n} {n!\over k!} \prod_{i=1}^k  {G_{\lambda_i}}\]
\subsubsection{$n=1$}
 \[A + B = G_1\]
True by definition.
\subsubsection{$n=2$}
\[A^2 + 2AB + B^2 = G_1^2 + 2G_2\]
Which I can show.
\subsubsection{$n=3$}
\[A^3 + 3A^2B + 3AB^2 + B^3 = G_1^3 + 3G_2G_1 + 3G_1G_2 + 6G_3\]
Here I have to think more carefully. I need to eliminate the $G_3$. Let's try that first.
For that I need $2[G_2,G_1]$ and $[G_1,G_2]$. I can get those by reasoning that
\[ G_2G_1 = [G_2,G_1] + G_1G_2\]
\[ G_1G_2 = [G_1,G_2] + G_2G_1\]
so name the rhs $R$ and compute
\[ R = G_1^3 + 3G_2G_1 + 3G_1G_2 + 6G_3 \]
\[ = G_1^3 + 2G_2G_1 + 4G_1G_2 + 6G_3 + 2[G_2,G_1] + [G_1,G_2]\]
\[ = G_1^3 + 2G_2G_1 + 4G_1G_2 + [[A,B],B]\]
Now we want to start processing away the remaining $G_2$'s.
\[ R = G_1^3 + [A,B]G_1 + 2G_1[A,B] + [[A,B],B]\]
Now we want to focus on processing away the $[[A,B],B]$, so we have to at least
expand the $G_1$'s adjacent to copies of $[A,B]$.
\[ R = G_1^3 + [A,B]A + [A,B]B + 2A[A,B] + 2B[A,B] + [[A,B],B]\]
\[  = G_1^3 + [A,B]A + 2[A,B]B + 2A[A,B] + B[A,B] \]
and if I grind this out I get $(A \oplus B)^3$ as I expect.
\subsubsection{$n=4$}
\[(A \oplus B)^4 = \]
\[ G_1^4 + 4G_2G^2_1 + 4G_1G_2G_1 + 4G_1^2G_2 + 12G_3G_1  + 12G_2G_2 + 12G_1G_3 + 24G_4\]
Let's get rid of the $G_4$ first. What do we need for that? To get to $[[[A,B],B],B]$
we need
\[ {2}[[G_2,G_1],G_1] + [[G_1, G_2],G_1] + 9[G_3,G_1] \]
\[ + [[G_1,G_1],G_2] + 6[G_2,G_2] + 3[G_1, G_3] + 24G_4 \]

The expansion lemma tells us
\[XYZ = YXZ + Z[X,Y] + [[X,Y],Z]\]
So let's do this to the rhs:
\[ 2G_2G_1G_1 \mapsto 2(G_1G_2G_1 + G_1[G_2,G_1] + [[G_2,G_1],G_1])\]
\[ G_1G_2G_1 \mapsto G_2G_1G_1 + G_1[G_1,G_2] + [[G_1,G_2],G_1]\]
\[ G_1G_1G_2 \mapsto G_1G_1G_2 + G_2[G_1,G_1] + [[G_1,G_1],G_2]\]
\[ 9G_3G_1 \mapsto 9(G_1G_3 + [G_3,G_1]) \]
\[ 3G_1G_3 \mapsto 3(G_3G_1 + [G_1,G_3]) \]
\[ 6G_2G_2 \mapsto 6(G_2G_2 + [G_2,G_2]) \]
and after doing that I have $R = $
\[ G_1^4 + 3G_2G^2_1 + 5G_1G_2G_1 + 4G_1^2G_2 + 6G_3G_1  + 12G_2G_2 + 18G_1G_3 \]
\[ + 2G_1[G_2,G_1] + G_1[G_1,G_2] + G_2[G_1,G_1] + [[[A,B],B],B]\]
To eliminate a $G_3$ I need to use
\[ 2[G_2,G_1] + [G_1, G_2] + 6G_3 = [[A,B],B] \]
Thankfully all my $G_3$s come in batches of 6. I wish to execute
\[ 2[G_2,G_1]G_1 + [G_1, G_2]G_1 + 6G_3G_1 = [[A,B],B]G_1 \]
\[ 6G_1[G_2,G_1] + 3G_1[G_1, G_2] + 18G_1G_3 = 3G_1[[A,B],B] \]
For this plan I still need to come up with
\[ 2[G_2,G_1]G_1 + [G_1, G_2]G_1 \]
\[ 4G_1[G_2,G_1] + 2G_1[G_1, G_2] \]

so I execute
\[2G_2G_1G_1 \mapsto 2([G_2,G_1]G_1 + G_1G_2G_1) \]
\[G_1G_2G_1 \mapsto [G_1,G_2]G_1 + G_2G_1G_1 \]
\[4G_1G_2G_1  \mapsto 4(G_1[G_2,G_1] + G_1G_1G_2)\]
\[ 2G_1G_1G_2 \mapsto 2(G_1[G_1, G_2] + G_1G_2G_1) \]
Yielding $R = $
\[ G_1^4 + 2G_2G^2_1 + 4G_1G_2G_1 + 6G_1^2G_2 + 12G_2G_2  \]
\[ + [[A,B],B]G_1  + 3G_1[[A,B],B] + [[[A,B],B],B]\]
And now all the $G_2$ coefficients are even, and I can convert them:
\[ R = G_1^4 + [A,B]G_1G_1 + 2G_1[A,B]G_1 + 3G_1G_1[A,B] + 3[A,B][A,B]  \]
\[ + [[A,B],B]G_1  + 3G_1[[A,B],B] + [[[A,B],B],B]\]
and if we grind out all the Lie brackets and $G_1$s this does become
$(A \oplus B)^4$.
\vfil\eject
\subsection{The Lemma}

\[ G(x) = xG_1 + x^2G_2 + x^3G_3 + \cdots\]
\[ e^{xA}e^{xB} = e^{G(x)}\]
If
\[[A,B] = 2G_2 \]
then
\[AA + 2AB + BB = (A + B)^2 + 2G_2\]
\[AA + 2AB + BB = AA + AB + BA + BB + 2G_2\]

\[AAA + 3AAB + 3ABB + BBB = (A + B)^3 + 3G_1G_2 + 3G_2G_1 + 6G_3\]


We use $\lambda$ to stand for a composition $\lambda_1,\ldots,\lambda_k$ with $k$ parts.
When $\lambda$ has $k$ parts and sums to $n$ we write $\lambda : k,n$.
\[e^{-xB}e^{-xA}(d/dx) e^{xA}e^{xB} =e^{-G(x)}(d/dx) e^{G(x)}\]
Let \[G_{[\lambda_1,\ldots, \lambda_k]} = [[G_{\lambda_1}, G_{\lambda_2} ]\cdots  G_{\lambda_k}]\]
 \[G_{\lambda_1,\ldots, \lambda_k} = G_{\lambda_1} G_{\lambda_2} \cdots  G_{\lambda_k}\]
\begin{lemma}
Suppose for every $n$ that
\[ [[A,\overbrace{B],\cdots,B}^{n}] = \sum_{k = 1}^{n}\sum_{\lambda : k, n+1}
  {\lambda_1 n! \over k!}  G_{[\lambda]} \]
and all relevant Lie brackets exist and have the property that
\[ [X,Y] + YX = XY \]
Then
\[ \sum_{k = 0}^n {n \choose k} A^k B^{n-k} = \sum_{\lambda : k,n} {n!\over k!}  G_\lambda\]
\[ e^{xA}e^{xB} = e^{G(x)}\]
\end{lemma}

\begin{proof}
\[e^{(xG_1+x^2G_2 + x^3G_3 + \cdots)}\]
\[ 1 + (xG_1+x^2G_2 + x^3G_3 + \cdots) + (xG_1+x^2G_2 + x^3G_3 + \cdots)^2{1\over 2}\]
\[+ (xG_1+x^2G_2 + x^3G_3 + \cdots)^3{1\over 6}\]
\[ {x^{14}\over 14!}G_3 G_9 G_2 {14!\over 3!} \]
\cqed
\end{proof}


\subsection{An Alternate Characterization of $G$s}
We start with
\[ G_1 = A + B\]
\[  2G_2 = [A,B] \]
\[ 2[G_2,G_1] + [G_1, G_2] + 6G_3 = [[A,B],B] \]
\[ {2}[[G_2,G_1],G_1] + [[G_1, G_2],G_1] + 9[G_3,G_1] \]
\[ + [[G_1,G_1],G_2] + 6[G_2,G_2] + 3[G_1, G_3] + 24G_4 \]
\[= [[[A,B],B],B] \]
and try to move things to one side, and expand out the Lie brackets. We get
\[ G_1 = A + B\]
\[ 2G_2 = AB - BA\]
\[ 6G_3 + G_{21} + 2BAB = G_{12} + ABB + BBA \]
\[ 24G_4 + G_{211} + G_{112} + 6G_{31} + 3BABB + BBBA = 2G_{121} + ABBB + 3BBAB \]

The computations for the 1 and 2 case are obvious. For 3,
I try starting with
\[ G_1^3 + 3G_{12}  + 3G_{21} + 6G_3\]
and I note I {\em cannot} immediately consume $2BAB$. So maybe I want to postpone the $A,B$ commutators.
Let's just say $L_n = [[A,\overbrace{B],\cdots,B}^{n}]$ and
\[ G_1 = A + B\]
\[ 2G_2 = L_1 \]
\[ 6G_3 + G_{21} = G_{12} + L_2 \]
\[ 24G_4 + G_{211} + G_{112} + 6G_{31} = 2G_{121} + 6G_{13} + L_3 \]

Then I'd get
\subsubsection{3}
Start with
\[ G_1^3 + 3G_{12}  + 3G_{21} + 6G_3\]
and move to
\[ G_1^3 + 4G_{12}  + 2G_{21} + L_2\]
and from there
\[ G_1^3 + 2G_{1}L_1  + L_1G_{1} + L_2\]
and I think I can resolve that.
\subsubsection{4}
\[ 6G_3 + G_{21} = G_{12} + L_2 \]
\[ 24G_4 + G_{211} + G_{112} + 6G_{31} = 2G_{121} + 6G_{13} + L_3 \]

{\hrule}

Start with
\[ G_1^4 + 4G_{121}  + 4G_{211} + 12G_{31}
 + 4G_{112} + 12G_{13}  + 12G_{22} + 24G_4\]
and go (processing $G_4$) to
\[ G_1^4 + 6G_{121}  + 3G_{211} + 6G_{31}  + 3G_{112} + 18G_{13}  + 12G_{22} + L_3\]
and go (processing $G_3$) to
\[ G_1^4 + 4G_{121}  + 2G_{211} + L_2G_1  + 6G_{112} + 3G_1L_2 + 12G_{22} + L_3\]
and go (processing $G_2$) to
\[ G_1^4 + 2G_{1}L_1G_1  + L_1G_{11} + L_2G_1  + 3G_{11}L_1 + 3G_1L_2 + 3L_1L_1 + L_3\]

\subsubsection{Generalizing}
\begin{lemma}
\[[[A,\overbrace{B],\cdots,B}^{n}] = \sum_{k = 0}^n {n \choose k}(-1)^k B^k A B^{n-k}\]
\end{lemma}
\begin{proof}
By induction. Step case looks like
\[ \left[\sum_{k = 0}^n {n \choose k}(-1)^k B^k A B^{n-k},B\right] \]
\[= \left(\sum_{k = 0}^n {n \choose k}(-1)^k B^k A B^{n-k}\right)B - B\left(\sum_{k = 0}^n {n \choose k}(-1)^k B^k A B^{n-k}\right)\]
\[=  \left(\sum_{k = 0}^n {n \choose k}(-1)^k B^k A B^{n+1-k}\right) - \left(\sum_{k = 0}^n {n \choose k}(-1)^k B^{k+1} A B^{n-k}\right)\]
\[=  \left(\sum_{k = 0}^n {n \choose k}(-1)^k B^k A B^{n+1-k}\right) + \left(\sum_{k = 1}^{n-1} {n \choose k-1}(-1)^k B^{k} A B^{n+1-k}\right)\]
\[=  \left(\sum_{k = 0}^{n+1} \left({n \choose k}+{n \choose k-1}\right)(-1)^k B^k A B^{n+1-k}\right)\]
\[=  \left(\sum_{k = 0}^{n+1} {n+1 \choose k}(-1)^k B^k A B^{n+1-k}\right)\]
\cqed
\end{proof}

For example,
\[ [[[[A, B], B], B], B] = AB^4 - 4BAB^3 + 6B^2AB^2 - 4B^3AB + B^4A\]

\subsection{Trying To Come up with a Recurrence}

There are three kinds of states. $S$ is a list of positive integers.
\def\here#1{\underline{#1}}
\[\pm \here n\]
\[ \pm S  \here n\]
\[\pm  \here n S\]
Here are the possible transitions:
\[ C[\here n]  \mapsto C[\here{n+1}] \]
\[ X \mapsto -\here 1 X^- \]
\[ X \mapsto X^-\here 1 \]

\subsection{Some More Conjectures}

\subsubsection{Complicated}
Let $A_0, \ldots, A_n$ be given. Associate a constant $a_i$ with each $A_i$.
Let
\[[A] = [A_0, \ldots, A_n] = [\cdots[[A_0, A_1], A_2]\cdots, A_n]\]
\[[A]' = a_0[A_0, \ldots, A_n] \]
For $\pi\in S_{n+1}$, let $\pi (A_1, \ldots, A_n) = A_{\pi 1}, \ldots, A_{\pi n}$.
I want to conjecture that

\[ \sum_{\pi \in S_{n+1}} [\pi A]' = \sum_{\pi \in S_{n+1}} \left(\sum_{k = 0}^n  (-1)^k {n\choose k} a_{\pi k}\right) \prod_{i = 0}^n A_{\pi i}\]

\subsubsection{Simple}

I think I directly see the pattern in how the Lie brackets of many $G$s resolve into simple product of $G$s.
If $\lambda_0,\ldots,\lambda_k$ is a composition of $n$, then the coefficient of $G_{\lambda_0,\ldots,\lambda_k}$ in
\[  \sum_{k = 1}^{n}\sum_{\lambda : k, n+1} {\lambda_1 n! \over k!}  G_{[\lambda]} \]
is
\[ \sum_{i=0}^k (-1)^i{k \choose i}\lambda_i \]
So what I'm saying I think is
\[  \sum_{k = 1}^{n}\sum_{\lambda : k, n+1} {\lambda_1 n! \over k!}  G_{[\lambda]}
= \sum_{\lambda : k+1, n} G_\lambda { n! \over k!} \sum_{i=0}^k (-1)^i{k \choose i}\lambda_i\]
But maybe this has some off-by-one errors. Let's be careful.

The parameter $n$ should be at least $2$. When $n=2$, I want to be talking about 2$G_2$ on both sides.
But it looks like actually $n=1$ is what gives me that on the left. So let's revise to

\[  \sum_{k = 1}^{n-1}\sum_{\lambda : k, n} {\lambda_1 (n-1)! \over k!}  G_{[\lambda]}
= \sum_{\lambda : k+1, n} G_\lambda { n! \over k!} \sum_{i=0}^k (-1)^i{k \choose i}\lambda_i\]

Let's make sure I'm consistently using $0$-indexed compositions on both sides as well:
\[  \sum_{k = 1}^{n-1}\sum_{\lambda : k, n} {\lambda_0 (n-1)! \over k!}  G_{[\lambda]}
 = \sum_{\lambda : k+1, n} G_\lambda { n! \over k!} \sum_{i=0}^k (-1)^i{k \choose i}\lambda_i\]
I think it's still ok to say $\lambda : k,n$ to say that composition $\lambda$ has $k$ parts
(numbered $0\ldots (k-1)$) and sums to $n$. Let's fill in the missing sum on the right:
\[  \sum_{k = 1}^{n-1}\sum_{\lambda : k, n} {\lambda_0 (n-1)! \over k!}  G_{[\lambda]}
 = \sum_{k = 1}^{n-1} \sum_{\lambda : k, n} G_\lambda { n! \over (k-1)!} \sum_{i=0}^{k-1} (-1)^i{k-1 \choose i}\lambda_i\]
This is a bit of a mess. Let me just unpack the expression on the left first.
\[\begin{array}{ll}
  n & L(n)\\
\hline
2 & 2G_{2} \\
3 & 6G_{3} + 2[G_2,G_1] + [G_1,G_2] \\
4 & 24G_{4} + 9[G_3,G_1] + 3[G_1,G_3] + 6[G_2,G_2]  \\
& + [[G_1,G_1],G_2] + [[G_1,G_2],G_1] + 2[[G_2,G_1],G_1]\\
\end{array}\]
And on the right I hope to end up with
\[\begin{array}{ll}
  n & R(n)\\
\hline
2 & 2G_2 \\
3 & 6G_3 + G_2G_1 - G_1G_2 \\
4 & 24G_4 + 6G_3G_1 - 6G_1G_3   \\
&  + G_1G_1G_2  - 2 G_1G_2G_1 + G_2G_1G_1\\
\end{array}\]
So I think I need to adjust to
\[  \sum_{k = 1}^{n-1}\sum_{\lambda : k, n} { (n-1)! \over k!}G_{[\lambda]}\lambda_0
  = \sum_{k = 1}^{n-1} \sum_{\lambda : k, n}  { (n-1)! \over k!} G_\lambda\sum_{i=0}^{k-1} (-1)^i{k-1 \choose i}\lambda_i\]
and I think I can strengthen this claim to saying that for {\bf all} $k \in [1,n-1]$, we have
\[  \sum_{\lambda : k, n} G_{[\lambda]}\lambda_0
  = \sum_{\lambda : k, n}   G_\lambda\sum_{i=0}^{k-1} (-1)^i{k-1 \choose i}\lambda_i\]


I think this is immediately true for $k=1$ and $n\ge 2$. Let's see how it works for $k = 2$.

\[  \sum_{p = 1}^{n-1}  p [G_p, G_{n-p} ]
  = \sum_{p =1}^{n-1}    G_p G_{n-p} (2p - n)\]
Let's see what happens for $n=5$.

\[    [G_1, G_4] + 2[G_2,G_3] + 3[G_3,G_2] + 4[G_4,G_1]\]
\[  =   -3 G_1 G_4 -  G_2 G_3 + G_3 G_2 + 3 G_4 G_1\]
Checks out so far!

I think this is a good target lemma to prove:
\begin{lemma}
\[  \sum_{\lambda : k, n} G_{[\lambda]}\lambda_0
  = \sum_{\lambda : k, n}   G_\lambda\sum_{i=0}^{k-1} (-1)^i{k-1 \choose i}\lambda_i\]
\end{lemma}

\begin{proof}
?
\cqed
\end{proof}

\begin{corollary}
\[  \sum_{k = 1}^{n-1}\sum_{\lambda : k, n} { (n-1)! \over k!}G_{[\lambda]}\lambda_0
  = \sum_{k = 1}^{n-1} \sum_{\lambda : k, n}  { (n-1)! \over k!} G_\lambda\sum_{i=0}^{k-1} (-1)^i{k-1 \choose i}\lambda_i\]
\end{corollary}

Note that either side of the equation in the corollary is what we want to set equal to
\[L_n = [[A,\overbrace{B],\cdots,B}^{n-1}] \]
We could also interpret the minus signs across the equation.

\subsection{The Lemma, Take 2}
We use $\lambda$ to stand for a composition $\lambda_1,\ldots,\lambda_k$ with $k$ parts.
When $\lambda$ has $k$ parts and sums to $n$ we write $\lambda : k,n$.
Let \[G_{[\lambda_1,\ldots, \lambda_k]} = [[G_{\lambda_1}, G_{\lambda_2} ]\cdots  G_{\lambda_k}]\]
 \[G_{\lambda_1,\ldots, \lambda_k} = G_{\lambda_1} G_{\lambda_2} \cdots  G_{\lambda_k}\]
Let
\[T_n(r) = \sum_{k = 1}^{n-1} \sum_{\lambda : k, n}  { (n-1)! \over k!} G_\lambda\sum_{i=0}^{k-1} [i \in \N_r] {k-1 \choose i}\lambda_i\]
where $r\in\{0,1\}$ and $\N_0$ is the even numbers and $\N_1$ is the odd numbers.

\begin{lemma}
If
\[ L_n + T_n(1) = T_n(0)\]
and
\[ L_0 = A \qquad L_{n+1} + BL_n = L_nB\]
Then
\[ \sum_{k = 0}^n {n \choose k} A^k B^{n-k} = \sum_{\lambda : k,n} {n!\over k!}  G_\lambda\]
\end{lemma}

\begin{proof}

\cqed
\end{proof}

\section{Reducing $G$ to $AB$}

I know
\[ G_1 = A + B\]
\[ 2G_2 = [A,B] \]
\[ 6G_3 = [A,G_2] + [G_2, B]\]

\vfil\eject
\section{Cutoff Lemmas}

Let's say $\lambda:(k,n,m)$ for $\lambda$ is an ordered partition in $k$ parts, summing to $n$,
with no part greater than $m$.
\subsection{Cut off at $G_1$}
Suppose $A, B$ are relations, and $AB = BA$. We seek $G_1$ such that for all $n$
\[  (A \oplus B)^n = \sum_{k}\sum_{\lambda : (k, n, 1)} {n!\over k!}\prod_{i=0}^{k-1} G_{\lambda_i}\]
When $n=1$, we find $A + B = G_1$.
Since $A$ and $B$ commute, this works in general.

\subsection{Cut off at $G_2$}
Suppose $A, B$ are relations, and $L$ captures the noncommutativity of $A$ and $B$
in the sense that $L + BA = AB$, $LA = AL$, and $LB = BL$.
We set $G_1 = A +B$ and seek $G_2$ in terms of $L$ such that for all $n$
\[  (A \oplus B)^n = \sum_{k} \sum_{\lambda : (k, n, 2)} {n!\over k!}\prod_{i=0}^{k-1} G_{\lambda_i}\]

When $n=2$, we find
\[  AA + 2AB + BB = AA + AB + BA + BB + 2G_2 \]
So we could take literally this as the defining characteristic of $G_2$, or we could take
$ L =  2G_2$ as a more minimal choice.

\def\L{\left(L\over 2\right)}
Why does this work for every $n$?

\[  (A \oplus B)^n = \sum_{p} {n!\over (n-p)!}{n-p \choose p}(A+B)^{n-2p}\L^p \]
\[   = \sum_{p} {n!\over (n-p)!}{(n-p)!\over (n-2p)!p!}(A+B)^{n-2p}\L^p \]
\[   = \sum_{p} {n!\over (n-2p)!p! 2^p}(A+B)^{n-2p}L^p \]

\[  (A \oplus B)^3 = {3!\over 3!}{3 \choose 0}(A + B)^3 + {3!\over 2!}{2 \choose 1}(A+B) \L   \]
\[  (A \oplus B)^4 = {4!\over 4!}{4 \choose 0}(A + B)^4 + {4!\over 3!}{3 \choose 1}(A+B)^2 \L^1 + {4!\over 2!}{2 \choose 2} \L^2  \]
\[  (A \oplus B)^5 = {5!\over 5!}{5 \choose 0}(A + B)^5 + {5!\over 4!}{4 \choose 1}(A+B)^3 \L^1 + {5!\over 3!}{3 \choose 2}(A+B)^1 \L^2  \]
\[  (A \oplus B)^6 = (A + B)^6 + {6!\over 5!}{5 \choose 1}(A+B)^4 \L^1 + {6!\over 4!}{4 \choose 2}(A+B)^2 \L^2 + {6!\over 3!}{3 \choose 3}\L^3 \]

\[  A \oplus B = A + B \]
\[  (A \oplus B)^2 = (A + B)^2 + L  \]
\[  (A \oplus B)^3 = (A + B)^3 + 3(A+B)L  \]
\[  (A \oplus B)^4 = (A + B)^4 + 6L(A+B)^2 + 3LL  \]
\[  (A \oplus B)^5 = (A + B)^5 + 10(A+B)^3 L + 15(A+B) LL  \]
\[  (A \oplus B)^6 = (A + B)^6 + 15(A+B)^4 L + 45(A+B)^2 LL + 15LLL\]
\begin{lemma}
Suppose $A, B, L$ are relations, and $L + BA = AB$, $LA = AL$, and $LB = BL$.
Suppose $G_1 = A + B$ and $2G_2 = L$. Then for all $n$,
\[ \sum_{m=0}^n {n\choose m}A^m B^{n-m}  = \sum_{p} {n!\over (n-2p)!p! 2^p}(A+B)^{n-2p}L^p \eqno(\dagger)\]

% \[  \sum_{m=0}^n {n\choose m}A^m B^{n-m} = \sum_{k}\sum_{\lambda : (k, n, 2)} {n!\over k!}\prod_{i=0}^{k-1} G_{\lambda_i}\eqno(\dagger)\]
\end{lemma}

\begin{proof}
 By induction on $n$. Trivial for $n = 1$. For larger $n$, we assume we know $(\dagger)$
and we want to show
%\[  \sum_{m=0}^{n+1}{n+1\choose m} A^m B^{n+1-m} = \sum_{k}\sum_{\lambda : (k, n+1, 2)} {(n+1)!\over k!}\prod_{i=0}^{k-1} G_{\lambda_i}\]
\[ \sum_{m=0}^{n+1} {{n+1}\choose m}A^m B^{{n+1}-m}  = \sum_{p} {(n+1)!\over ({n+1}-2p)!p! 2^p}(A+B)^{{n+1}-2p}L^p \]
{\color{red}[Unfinished] \cqed}

Let's say that $[A\oplus B]G = AG + GB$. In this case $(A\oplus B)^n = [A\oplus B]^n I$,
e.g.
\[(A\oplus B)^3 = [A\oplus B]^3I \]
\[= [A \oplus B]^2 (A + B)\]
\[= [A\oplus B](AA + AB + AB + BB)\]
\[= AAA + AAB + AAB + ABB + AAB + ABB + ABB + BBB\]
\[= AAA + 3AAB + 3ABB + BBB\]
\end{proof}
Then I notice that I can prove things like
\[L + (A + B)^2 = (A \oplus B)^2\]
\[2L(A+B) + (A \oplus B)^2A = A(A \oplus B)^2\]
and this means
\[ 3L(A+B) + (A + B)^3 = 3L(A+B) + (A + B)^2 (A + B) \]
\[ = 2L(A+B) + (A\oplus B)^2(A+B) \]
\[ = 2L(A+B) + (A\oplus B)^2A  + (A\oplus B)^2B \]
\[ =  A(A\oplus B)^2  + (A\oplus B)^2B \]
\[ =  (A\oplus B)^3  \]
Now let's try the $n=4$ case. I'm to show
\[  (A \oplus B)^4 = (A + B)^4 + 6L(A+B)^2 + 3LL  \]
I always seem to run into problems with $LL$.
I know $L + BA = AB$ so I should find $LL + LBA + BAL + BABA = ABAB$.
And I have three of them to get rid of!

I could instead focus on the fact that $LL + LBA = LAB$ or $LL + BAL = ABL$.
Oh but wait the product of course arises from individual steps, it just
assumes we want to do both of them at once.
\[ (L{\color{blue}L} + L{\color{blue}BA}) + (BA{\color{red}L} + BA{\color{red}BA})\]
\[ =  L{\color{blue}AB}  + {\color{green}BA}{\color{red}AB}\]
\[ = {\color{green}AB}AB\]
Okay, let's see how close I can get to the above
\[  (A + B)^4 + 6L(A+B)^2 + 3LL  \]
\[ = (A + B)^3(A + B) + 6L(A+B)^2 + 3LL  \]
\[ = (A + B)^3(A + B) + 3L(A + B)^2 + 3L(A+B)^2 + 3LL  \]
\[ = (A \oplus B)^3(A +B) + 3L(A+B)^2 + 3LL  \]
So to finish this off I'd need
\[ A(A \oplus B)^3 = (A \oplus B)^3A + 3L(A+B)^2 + 3LL  \]
for which it would suffice
\[ A(A \oplus B)^3 = (A \oplus B)^3A + 3L(A\oplus B)^2   \]
does this fit into a pattern of
\[ A(A + B) = (A + B)A + L \]
\[A(A \oplus B)^2 = (A \oplus B)^2A + 2L(A+B)   \]
\[ A(A \oplus B)^3 = (A \oplus B)^3A + 3L(A\oplus B)^2  \]
Oh this looks nice.
\begin{lemma}
Suppose $A, B, L$ are relations, and $L + BA = AB$, $LA = AL$, and $LB = BL$.
Then $ A(A \oplus B)^n = (A \oplus B)^nA + 3L(A\oplus B)^n $.
\end{lemma}


\end{document}
