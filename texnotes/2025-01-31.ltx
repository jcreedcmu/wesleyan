\documentclass{article}
\usepackage[tmargin=0.15in, bmargin=0.15in]{geometry}
\input{theorem}
\input{prooftree}
\usepackage{relsize}
\usepackage{latexsym}
\usepackage{amsmath}
\usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
\usepackage{tikz}
\usetikzlibrary{calc,arrows,cd,decorations.pathreplacing}
\usetikzlibrary{decorations.pathmorphing}
\usepackage{tcolorbox}
\usepackage{stackengine}
\newcommand\oast{\stackMath\mathbin{\stackinset{c}{0ex}{c}{0ex}{\ast}{\bigcirc}}}

\tcbuselibrary{breakable}
\usepackage{listings}
\lstset{basicstyle=\ttfamily\footnotesize,breaklines=true}

\def\tel{\mathsf{T}}
\def\bdot{\mathrel{\bar\cdot}}
\def\bodot{\mathrel{\bar\odot}}
\def\dec{\mathsf{\downarrow}}
\def\enc{\mathsf{\uparrow}}
\def\I{\mathbb{I}}
\def\bget{\mathop\mathbf{get}}
\def\bGet{\mathop\mathbf{Get}}
\def\dapt#1#2{#1[\![#2]\!]}
\def\dap#1#2{#1\{#2\}}
\def\ll{\langle\!\langle}
\def\rr{\rangle\!\rangle}
\def\rshape{\ {\mathsf{shape}}}
\def\rrefl{{\mathsf{refl}}}
\def\bd{\mathsf{Bd}}
\def\bdd{\mathsf{Bdd}}
\def\rset{\mathsf{U}}
\def\rid{\mathsf{id}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\def\prequiv{\dashv\vdash}

\definecolor{blu}{rgb}{0.1,0.5,1}
\definecolor{orng}{rgb}{1,0.5,0.3}

\def\nameof#1{\ulcorner{#1}\urcorner}
\def\U{\mathsf{U}}
\def\uu{\mathsf{u}}
\def\uni{\U}



\definecolor{lred}{rgb}{0.95,0.8,0.8}
\definecolor{cyan}{rgb}{0.80,0.95,0.95}
\definecolor{lorange}{rgb}{0.95,0.90,0.80}
\definecolor{bluegray}{rgb}{0.6,0.6,0.85}
\definecolor{lgray}{gray}{0.8}
\newtcolorbox{declbox}{colframe=lred,colback=lred,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}
\newtcolorbox{thmbox}{colframe=cyan,colback=cyan,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}
\newtcolorbox{defnbox}{colframe=lorange,colback=lorange,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}
\newtcolorbox{tangentbox}{colframe=lgray,colback=lgray,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}

\input{linear}
\def\rpath#1{[#1]}
\def\rfst{\mathsf{fst}\,}
\def\rsnd{\mathsf{snd}\,}
\def\bunfold{\mathbf{unfold}}
\def\bfold{\mathbf{fold}}
\def\susp#1{\langle {#1} \rangle}
\def\ssusp#1{\langle\!\langle {#1} \rangle\!\rangle}
\def\dto{\mathrel{\dot\to}}
\def\dns{{\downarrow}}
\def\ups{{\uparrow}}
\def\sprov{\Vdash}
\def\signat{{\color{red}\Sigma}}
\def\ep#1{\underline{#1}}
\def\wat{{@}}
\def\wwat{\mathbin{\underline\wat}}
\def\cn{{:}}
\def\dv{{\div}}
\def\ww{{\mathsf w}}
\def\base{{\textfrak b}}

\def\N{{\mathbb N}}
\def\Z{{\mathbb Z}}
\def\munit{I}
\def\tt{{\mathsf t}}
\def\ii{{\mathbb I}}
\def\T{\mathbb{T}}
\def\tw{\mathsf{Tw}}
\def\sw#1{^{#1}_{#1}}
\def\TP{\mathbf{TPre}}
\def\pp{\textsf{\textbf p}}
\def\nn{{\mathsf n}}
\def\PP{\textsf{\textbf P}}
\def\NN{\textsf{\textbf N}}
\def\zz{{\mathsf z}}
\def\sem#1{[\![#1]\!]}
\def\usem#1{\lceil\!\!\lceil{#1}\rceil\!\!\rceil}
\def\zem#1{\langle\!\langle#1\rangle\!\rangle}
\def\col#1{{\mathsf{C}}_{#1}}
\def\lax{\mathop\bigcirc}
\def\rjust{\mathsf{just}}
\def\rcvt{\mathsf{cvt}}
\def\rtype{\mathsf{type}}
\def\rdtype{\mathsf{disc}}
\def\rkind{\mathsf{kind}}
\def\rmode{\mathsf{mode}}
\def\rprel{\mathbf{Prel}}
\def\rrfam{\mathbf{Rfam}}
%\def\rset{\mathbf{Set}}
\def\rfinset{\mathbf{FinSet}}
\def\rrel{\mathbf{Rel}}
\def\rcat{\mathbf{Cat}}
\def\rfam{\mathbf{Fam}}
\def\binj{\mathbf{inj}}
\def\rtrue{\mathrel\mathrm{true}}
\def\pbck{\ar[dr, phantom, pos=0, "\lrcorner"]}
\def\bpbck{\ar[ddrr, phantom, pos=0, "\lrcorner"]}
\def\erule#1#2{\begin{prooftree}#1\justifies #2\end{prooftree}}
\def\lpar{\bindnasrepma}
\def\lamp{\binampersand}
\def\btwo{\mathbf{2}}
\def\bone{\mathbf{1}}

\def\FinSet{\mathbf{FinSet}}
\def\x{\times}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\def\mapt{\ar[ddd,mapsto,shorten <=2em, shorten >=2em]}
\def\A{\mathbf{A}}
\def\B{\mathbf{B}}
\def\C{\mathbf{C}}
\def\S{\mathbf{S}}
\def\G{\mathbf{G}}
\def\D{\mathbf{D}}
\def\DD{\mathbb{D}}
\def\E{\mathcal{E}}
\def\M{\mathbf{M}}
\def\pair#1#2{\langle#1,#2\rangle}
\def\ltri{{\lhd}}
\def\rtri{{\rhd}}
\def\tri{\rhd}
\def\cc{\mathsf{c}}
\def\dd{\mathsf{d}}
\def\o{\circ}
\def\rctx{\,\mathsf{ctx}}
\def\rdctx{\,\mathsf{dctx}}
\def\del{\partial}
\def\also#1{\ \textcolor{blue}{\celse #1}}
\newcounter{nodemaker}
\setcounter{nodemaker}{0}
\def\twocell#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift left=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift right=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\twocellswap#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift right=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift left=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\author{Jason Reed}
\definecolor{fib}{HTML}{ff7f00}
\definecolor{green}{HTML}{007f00}
\definecolor{red}{HTML}{df3f3f}
\definecolor{opfib}{HTML}{007fff}

% For lightening colors I used
% http://trycolors.com/ 6 parts white to 1 part color
\definecolor{opfibl}{HTML}{DBEDFF}
\definecolor{greenl}{HTML}{DBEDDB}
\definecolor{redl}{HTML}{FAE4E4}
\begin{document}

\def\
\tikzset{
   commutative diagrams/.cd,
   arrow style=tikz,
   diagrams={>=stealth}}
\tikzset{shorten <>/.style={shorten >=#1,shorten <=#1}}

\section{Parametricity and Comma Categories}
Say $G : \D \to \C$ is a {\em shape over $\C$} when $G$ is a finite-product preserving functor between two categories with finite products. We say $G$ has a {\em partner} when there exists $(H, \eta)$ such that
\begin{enumerate}
\item $H : \C \to \D$ is a functor that `preserves everything I care about'.
      Probably finite products, coproducts, exponentials, etc.
\item $\eta$ is a `unit of the almost adjunction'
\begin{tikzcd}
 \C\ar[d,equal] \ar[r,"H"]&\D\ar[d, "G"]\\
\C\ar[r,equal] \ar[ur,shorten <>=10pt,Rightarrow, "\eta"]&\C
\end{tikzcd}
\end{enumerate}
I'm going to be sloppy and assume that when structure is preserved, it's preserved strictly.

A partner for $G$ is kind of like a left adjoint to $G$.

Sometimes we write $F$ for $GH$. I think it's not necessarily a monad, but it is an applicative functor.

The running examples I have in mind are particularly
$H = \Delta  : \rset \to \rset^2$ and $G = \_\x\_ : \rset^2 \to \rset$.
Thus $FX = X \x X$ and $\eta_X : X \to FX$ is $\eta_X(a) = \langle a,a\rangle$.

Slightly more generally, for a set $S$,
$H = \Delta  : \rset \to \rset^S$ and $G = \prod : \rset^S \to \rset$.
Thus $FX = S \to X$ and $\eta_X : X \to FX$ is $\eta_X(a) = \lambda s . a$.


\subsection{Shape Morphisms}
A shape morphism $S' \to S$ between two shapes over $\C$,
 i.e.  $(\D', H',G',\eta') \to (\D, H,G,\eta)$ consists of
 a finite-product-preserving functor $\partial : \D' \to \D$
and a natural transformation $\gamma$
\[\begin{tikzcd}
  \D' \ar[d, "G'",swap]\ar[r,"\partial"]&  \D\ar[d, "G"]\\
\C\ar[r,equal]\ar[ur,shorten <>=10pt,Rightarrow, "\gamma"]&\C
\end{tikzcd}
\]
such that the following diagrams commute:
\[
\begin{tikzcd}
  \D' \ar[from=d, "H'"]\ar[r,"\partial"]&  \D\ar[from=d, "H",swap]\\
\C\ar[r,equal]&\C
\end{tikzcd}
\qquad
\begin{tikzcd}
	{ C} & { G'H'C} \\
	{GH C} & {G\partial H' C}
	\arrow["{{\eta'_C}}", from=1-1, to=1-2]
	\arrow["{{\eta_{ C}}}"', from=1-1, to=2-1]
	\arrow["{{\gamma_{H'C}}}", from=1-2, to=2-2]
	\arrow[equal, from=2-1, to=2-2]
\end{tikzcd}\]

\subsection{Relational Lift}
\def\L{\mathcal{L}}
Suppose $G : \D \to \C$ is a shape over $\C$.
We define another shape $\L G$ over $\C$, the `relational lift' of $G$.
Consider the comma category $(\rid_\C, G)$. Its objects are tuples
\[(C : \C, D : \D, f : C \to GD)\]
and its morphisms are pairs $(c,d)$ that make commutative diagrams
\[
\begin{tikzcd}
  C_1\ar[d, "c"']\ar[r, "f_1"] & GD_1\ar[d, "Gd"]\\
  C_2\ar[r,"f_2"'] & GD_2\\
\end{tikzcd}
\]
We set $\L G$ to be the evident projection functor
\[(\rid_\C, G) \to \C\]
which takes $(C,D,f)$ to $C$ and $(c,d)$ to $c$.

There is a shape morphism $\L G \to G$. We take
the functor
\[\partial : (\rid_\C, G) \to \D\]
to be that which takes $(C,D,f)$ to $D$ and $(c,d)$ to $d$.
We take $\gamma$ to be the natural transformation that takes
$(C,D,f)$ to $f$.



\subsection{Parametricity}
A category $\C$ is said to be {\em parametric} when,
for all shapes $G$ over $\C$, if $G$ has a partner
then $\L G$ has a partner.
\subsection{Consequences of Parametricity}
Suppose I have some parametric category $\C$.
I consider the binary relation shape $G = \prod : \C^2 \to \C$. Then there
exists the relational shape $\L G : (\rid_\C, G) \to \C$. I'm going
to name $\D' = (\rid_\C, G)$. Also name the projections $G', \partial$.
Now $G$ has a partner $H = \Delta : \C \to \C^2$. It
preserves everything I care about, and has a $\eta$. By assumption that $\C$ is
parametric, $\L G$ has a partner, call it $H' : \C \to \D'$ and $\eta'_C : C \to G'H'C$.

Now suppose I have an internal hom object $A \imp B$ in $\C$.
Then I have $\eta' : (A \imp B) \to G' H'(A \imp B)$.
Since `$H'$ preserves everything I care about', this is equivalently
\[\eta' : (A \imp B) \to G' (H'A \imp H'B)\]
This is saying ``for every function, we have the raw data that says this function belongs
to some relation''. I want to see that the endpoints of this relation really are the original
function. What do we get out of $\gamma$? $\gamma$ says for any object $D' \in \D'$
we have $\gamma : G'D' \to  G\partial D'$. So in particular we have
\[G' (H'A \imp H'B) \to G (\partial (H'A \imp H'B))\]
It seems safe to believe that we can at least prove $\partial$ lax-preserves exponentials.
 We at least would get a morphism
\[\partial (H'A \imp H'B) \to \partial H'A \imp \partial H'B = HA \imp HB\]
So overall I have
\[? \o \eta' : (A \imp B) \to G(HA \imp HB)\]
\subsection{The Universe}
What does it mean for an $H$ to `preserve universe structure'?
If I have $A \imp B$ in $\C$, then I trust that exponentials in $\D'$
are such that $HA \imp HB$ is correctly the functions that take related
things in $A$ to related things in $B$, so $H(A \imp B) = HA \imp HB$ coverse what I want.

I don't have a way of naming {\em the} universe via UMP in $(\rid_C, G)$, but
as part of the definition of $\L$ I could decide that structure. Suppose
that I have $e : \E \to \rset$ in $\C$. I have $G : \D \to \C$.
I have
% https://q.uiver.app/#q=WzAsNCxbMCwwLCJcXEQnIl0sWzIsMCwiXFxEIl0sWzAsMSwiXFxDIl0sWzIsMSwiXFxDIl0sWzIsMywiIiwwLHsibGV2ZWwiOjIsInN0eWxlIjp7ImhlYWQiOnsibmFtZSI6Im5vbmUifX19XSxbMCwyLCJHJyIsMix7Im9mZnNldCI6MX1dLFsxLDMsIkciLDIseyJvZmZzZXQiOjF9XSxbMCwxLCJcXHBhcnRpYWwiXSxbMiwxLCJcXGdhbW1hIiwwLHsic2hvcnRlbiI6eyJzb3VyY2UiOjMwLCJ0YXJnZXQiOjMwfSwibGV2ZWwiOjJ9XSxbMiwwLCJIJyIsMix7Im9mZnNldCI6MX1dLFszLDEsIkgiLDIseyJvZmZzZXQiOjF9XV0=&macro_url=https%3A%2F%2Fgist.githubusercontent.com%2Fjcreedcmu%2F2569f601862d86bd0523220cfd15f2c9%2Fraw%2F529c435990e05c1b2f1013d2d584a2a8b2bd7880%2Fquiver-macros.tex
\[\begin{tikzcd}
	{\D'} && \D \\
	\C && \C
	\arrow["\partial", from=1-1, to=1-3]
	\arrow["{G'}"', shift right, from=1-1, to=2-1]
	\arrow["G"', shift right, from=1-3, to=2-3]
	\arrow["{H'}"', shift right, from=2-1, to=1-1]
	\arrow["\gamma", shorten <=14pt, shorten >=14pt, Rightarrow, from=2-1, to=1-3]
	\arrow[equals, from=2-1, to=2-3]
	\arrow["H"', shift right, from=2-3, to=1-3]
\end{tikzcd}\]
I know $\D'$ is the category $(\rid_\C, G)$. So to name an object in it I need to name
$(C, D, f : C \to GD)$.
What is $\rset$ in $\D'$? That is, what {\em should} $H\rset$ be?
My first thought was
\[(\rset, H\rset, \eta_\rset)\]
since that's something well-typed I can construct, but I'm skeptical. How
do I think about $H'C$ in general, when $C$ is some type in $\rset$?
For the example where $HA = \langle A, A\rangle$
and $G\langle A, B\rangle = A \x B$? I think it should land
on
\[(\Sigma\ (C\x C)\ \bd_C, \langle C, C\rangle, \pi_1)\]
The $C$-component of this tuple is the total space of the bridges in
$C$. The $D$-component is the constantly-$C$ tuple, i.e. $HC$. This is
necessarily the case, because $\partial H' C = HC$.
The $f$-component says how the total space behaves as a relation over the boundary.
I could also write this more generally as
\[(\Sigma\ GHC\ \bd_C, HC, \pi_1)\]
This is right; $\bd_C$ is a proof-relevant predicate on $FC$.
So what's the total space for $\bd_\rset$?
I want to say something like
\[\Sigma\ GH\rset\ (\lambda B \to B \to \rset)\]
but $B$ isn't a set, it's a $GH\rset$. I actually need something else to behave like $G$,
to tell me how to turn a tuple of types back into a type. Can I say anything like
\[\Sigma\ H\rset\ (\lambda B \to GB \to \rset)\]
? Hmm something about this seems suspicious.
\subsection{Internalizing $G$}
If I take $e : \E \to \rset$ and I hit it with the functor $GH$
I get $GHe : GH\E \to GH\rset$. In my running example, this means
a thing that lives in $GH\E$ is a pair of elements of any nameable type,
and the projection $GHe$ tells me which pair of types they came from.
Now if this map has sufficiently small fibers, which I think it ought to,
 then there is a pullback diagram
% https://q.uiver.app/#q=WzAsNCxbMCwwLCJHSHtcXG1hdGhjYWwgRX0iXSxbMCwxLCJHSHtcXG1hdGhzZiBVfSJdLFsxLDAsIntcXG1hdGhjYWwgRX0iXSxbMSwxLCJ7XFxtYXRoc2YgVX0iXSxbMCwyLCJlXipnIl0sWzIsMywiZSJdLFsxLDMsImciLDJdLFswLDEsIkdIZSIsMl0sWzAsMywiIiwxLHsic3R5bGUiOnsibmFtZSI6ImNvcm5lciJ9fV1d
\[\begin{tikzcd}
	{GH{\mathcal E}} & {{\mathcal E}} \\
	{GH{\mathsf U}} & {{\mathsf U}}
	\arrow["{e^*g}", from=1-1, to=1-2]
	\arrow["GHe"', from=1-1, to=2-1]
	\arrow["\lrcorner"{anchor=center, pos=0.125}, draw=none, from=1-1, to=2-2]
	\arrow["e", from=1-2, to=2-2]
	\arrow["g"', from=2-1, to=2-2]
\end{tikzcd}\]
And the map $g = \ulcorner{GHe}\urcorner$ should be very useful to me: in the example, it takes a pair of types
and gives me the {\em name} of the type that consists of all pairs of elements that
live over that pair of types. In other words, it takes a pair of types and yields their
product. It is the thing I was calling $G$, the global sections functor, in my previous
purely type-theory thinking before switching to using more categories.
\subsection{Being Explicit about Universe Levels}
Maybe what I actually have is $\C_0\subseteq \C_1\subseteq \ldots$. There exists
a morphism $e_i : \E_i \to \U_i \in \C_{i+1}$ that is an object classifier for all of $\C_i$.
This means that for every map $f : A \to B$ in $\C_i$, there is a map $\nameof f : B \to \U_i$
in $\C_{i+1}$ such that
\[\begin{tikzcd}
	{A} & {{\mathcal E_i}} \\
	{B} & {{\mathsf U_i}}
	\arrow["{e_i^*\nameof f}", from=1-1, to=1-2]
	\arrow["f"', from=1-1, to=2-1]
	\arrow["\lrcorner"{anchor=center, pos=0.125}, draw=none, from=1-1, to=2-2]
	\arrow["e_i", from=1-2, to=2-2]
	\arrow["\nameof f"', from=2-1, to=2-2]
\end{tikzcd}\]
So in particular I'd always know that
\[\begin{tikzcd}
	{GH{\mathcal E}_i} & {{\mathcal E}_{i+1}} \\
	{GH{\mathsf U}_i} & {{\mathsf U}_{i+1}}
	\arrow["{e_i^*\nameof{GHe_i}}", from=1-1, to=1-2]
	\arrow["GHe_i"', from=1-1, to=2-1]
	\arrow["\lrcorner"{anchor=center, pos=0.125}, draw=none, from=1-1, to=2-2]
	\arrow["e_{i+1}", from=1-2, to=2-2]
	\arrow["\nameof{GHe_i}"', from=2-1, to=2-2]
\end{tikzcd}\]
Oh hmm that isn't what I want. I guess it's a nontrivial fact that I need to assume that
I get this same diagram at the {\em same} level. That amounts to supposing that $GH$
doesn't somehow blow up the small-fiber-ness of $e$.
\end{document}
