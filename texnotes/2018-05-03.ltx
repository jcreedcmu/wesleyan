\documentclass{article}
\input{theorem}
\input{prooftree}
\usepackage{stmaryrd}
\usepackage{latexsym}
\usepackage{yfonts}
\usepackage{amsmath}
\usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
\usepackage{tikz}
\usetikzlibrary{calc,arrows,cd,decorations.pathreplacing}
\usetikzlibrary{decorations.pathmorphing}
\usepackage{tcolorbox}
\tcbuselibrary{breakable}
\usepackage{listings}
\lstset{basicstyle=\ttfamily\footnotesize,breaklines=true}

\def\bpush{\mathbf{push}}
\def\bpull{\mathbf{pull}}

\def\wo{\setminus}
\def\fA{\mathsf{A}}
\def\fC{\mathsf{C}}
\def\fX{\mathsf{X}}
\def\ff{\mathsf{f}}
\def\fm{\mathsf{m}}
\def\rspan{\mathsf{Span}}
% \def\El#1{\mathsf{El}({#1})}
\def\El#1{\ulcorner{#1}\urcorner}
\def\quote#1{{\ulcorner {#1} \urcorner}}
\def\U{\mathsf{U}}
\def\uu{\mathsf{u}}
\def\uni{\U}
\def\mor#1#2{#1 \to \underline{#2}}

\def\ridp{\mathsf{idp}}
\def\ssem#1{\langle\!\langle{#1}\rangle\!\rangle}

\definecolor{cyan}{rgb}{0.80,0.95,0.95}
\definecolor{orange}{rgb}{0.95,0.90,0.80}
\definecolor{bluegray}{rgb}{0.6,0.6,0.85}
\definecolor{lgray}{gray}{0.9}
\newtcolorbox{declbox}{colframe=lred,colback=lred,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}
\newtcolorbox{thmbox}{colframe=cyan,colback=cyan,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}
\newtcolorbox{defnbox}{colframe=orange,colback=orange,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}
\newtcolorbox{tangentbox}{colframe=lgray,colback=lgray,grow to right by=-10mm,grow to left by=-10mm,
boxrule=0pt,boxsep=0pt,breakable}

\input{linear}
\def\rpath#1{[#1]}
\def\rfst{\mathsf{fst}\,}
\def\rsnd{\mathsf{snd}\,}
\def\bunfold{\mathbf{unfold}}
\def\bfold{\mathbf{fold}}
\def\susp#1{\langle {#1} \rangle}
\def\ssusp#1{\langle\!\langle {#1} \rangle\!\rangle}
\def\dto{\mathrel{\dot\to}}
\def\dns{{\downarrow}}
\def\ups{{\uparrow}}
\def\sprov{\Vdash}
\def\signat{{\color{red}\Sigma}}
\def\ep#1{\underline{#1}}
\def\wat{\mathbin{@}}
\def\wwat{\mathbin{\underline\wat}}
\def\cn{{:}}
\def\dv{{\div}}
\def\ww{{\mathsf w}}
\def\base{{\textfrak b}}

\def\N{{\mathbb N}}
\def\munit{I}
\def\tt{{\mathsf t}}
\def\rr{{\mathsf r}}
\def\ii{{\mathbb I}}
\def\pp{\textsf{\textbf p}}
\def\nn{{\mathsf n}}
\def\PP{\textsf{\textbf P}}
\def\NN{{\mathsf N}}
\def\zz{{\mathsf z}}
\def\sem#1{[\![#1]\!]}
\def\usem#1{\lceil\!\!\lceil{#1}\rceil\!\!\rceil}
\def\zem#1{\langle\!\langle#1\rangle\!\rangle}
\def\col#1{{\mathsf{C}}_{#1}}
\def\lax{\mathop\bigcirc}
\def\rjust{\mathsf{just}}
\def\rcvt{\mathsf{cvt}}
\def\rtype{\mathsf{type}}
\def\rkind{\mathsf{kind}}
\def\rmode{\mathsf{mode}}
\def\rprel{\mathbf{Prel}}
\def\rrfam{\mathbf{Rfam}}
\def\rset{\mathbf{Set}}
\def\rfinset{\mathbf{FinSet}}
\def\rrel{\mathbf{Rel}}
\def\rcat{\mathbf{Cat}}
\def\rfam{\mathbf{Fam}}
\def\binj{\mathbf{inj}}
\def\rid{\mathsf{id}}
\def\rtrue{\mathrel\mathrm{true}}
\def\pbck{\ar[dr, phantom, pos=0, "\lrcorner"]}
\def\bpbck{\ar[ddrr, phantom, pos=0, "\lrcorner"]}
\def\erule#1#2{\begin{prooftree}#1\justifies #2\end{prooftree}}
\def\lpar{\bindnasrepma}
\def\lamp{\binampersand}
\def\btwo{\mathbf{2}}
\def\bone{\mathbf{1}}

\newarrow {Equiv} =====
\def\FinSet{\mathbf{FinSet}}
\def\x{\times}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\def\mapt{\ar[ddd,mapsto,shorten <=2em, shorten >=2em]}
\def\frommaps{\ar[from=uu,mapsto,shorten <=2em, shorten >=2em, crossing over]}
\def\frommapt{\ar[from=uuu,mapsto,shorten <=2em, shorten >=2em, crossing over]}
\def\C{\mathbf{C}}
\def\G{\mathbf{G}}
\def\S{\mathbf{S}}
\def\D{\mathbf{D}}
\def\E{\mathbf{E}}
\def\M{\mathbf{M}}
\def\pair#1#2{\langle#1,#2\rangle}
\def\tri{\triangleright}
\def\o{\circ}
\def\rctx{\,\mathsf{ctx}}
\def\rdctx{\,\mathsf{dctx}}
\def\del{\partial}
\def\also#1{\ \textcolor{blue}{\celse #1}}
\newcounter{nodemaker}
\setcounter{nodemaker}{0}
\def\twocell#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift left=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift right=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\twocellswap#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift right=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift left=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\null{\emptyset}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\author{Jason Reed}
\definecolor{fib}{HTML}{ff7f00}
\definecolor{green}{HTML}{007f00}
\definecolor{red}{HTML}{df3f3f}
\definecolor{opfib}{HTML}{007fff}

% For lightening colors I used
% http://trycolors.com/ 6 parts white to 1 part color
\definecolor{opfibl}{HTML}{DBEDFF}
\definecolor{greenl}{HTML}{DBEDDB}
\definecolor{redl}{HTML}{FAE4E4}
\def\njudge#1{\fcolorbox{opfib}{white}{#1}}
\def\nrule#1{\fcolorbox{white}{opfibl}{#1}}
\def\neqn#1{\fcolorbox{white}{redl}{#1}}



\def\judge#1{\vskip 2em\noindent \njudge{$#1$}\vskip 0.5em\noindent}
\def\rule#1{\vskip 2em \noindent \nrule{$#1$}\vskip 0.5em\noindent}
\def\eqn#1{\vskip 2em \noindent \neqn{$#1$}\vskip 0.5em\noindent}
\def\prof{\nrightarrow}
\def\tensor{\otimes}
\def\htensor{\mathrel{\hat\otimes}}
\def\lol{\multimap}
\def\hlol{\mathrel{\hat\multimap}}
\def\wtf{{\color{red}???}}

\def\re{\mathbf{E}}
\def\sh{\sharp}
\def\shp{\mathrel{\sharp}}
\def\zero{\texttt{0}}
\begin{document}

\def\
\tikzset{
   commutative diagrams/.cd,
   arrow style=tikz,
   diagrams={>=stealth}}

\section{Semantics of category-typed variables}
\subsection{Zero or One}
So I can give a simple sort of {\em non-nested} parametricity semantics to the situation
\[
\begin{tikzcd}
  \rset \ar[d, "\Delta"', shift right=5]\ar[d, "\dashv", phantom]\ar[from=d, "\forall"', shift right=5] \\
\rset^{\C^\op}
\end{tikzcd}
\]
Where I have two classes of types, regular and presheaf, and the diagonal $\Delta$ that takes
a set to the constant presheaf, and the $\forall$ that computes the set of global sections.
I can talk about witness types like
\[\begin{tabular}{rccl}
  Regular Sets&$X$&$::=$&$\forall \nu . P  \celse (x : X) \to X \celse \cdots$\\
  Presheaves&$P$&$::=$&$\Delta_\nu X  \celse S \star \nu \celse (y : P) \to P \celse \cdots$\\
  Concrete Presheaves&$S$&$::=$&$ (X_c, f_m)$\\
\end{tabular}\]
where my rules are like
\[
\erule
{\nu : \C ; \Gamma^w \prov P : \rtype}
{ \Gamma \prov \forall \nu . P : \rtype}
\qquad
\erule
{\nu : \C ; \Gamma^w \prov e  : P}
{ \Gamma \prov \lambda \nu . e : \forall \nu . P }
\qquad
\erule
{ \Gamma \prov M : \forall \nu . P }
{\nu : \C ; \Gamma^w \prov M[\nu]  : P}
\]
\[
\erule
{\Gamma \prov S : \rspan}
{\nu : \C ; \Gamma^w \prov S \star \nu : \rtype}
\qquad
\erule
{\nu : \C ; \Gamma \prov e  : S \star \nu}
{ \Gamma \prov [c/\nu] e  : X_c}
\qquad
\erule
{ \Gamma \prov M_c : X_c \qquad f_m(M_d) \equiv M_c  }
{\nu : \C ; \Gamma \prov (M_c) \star \nu : S \star \nu}
\]
\[
\erule
{}
{  f_m([d/\nu]e) \equiv [c/\nu]e  }
\]
And $\Delta_\nu$ is really the special case of a witness type with the constant
concrete presheaf.
\subsection{With Residual Context}
I could also do
\[
\begin{tikzcd}
  \rset^{\D^\op} \ar[d, "\Delta"', shift right=5]\ar[d, "\dashv", phantom]\ar[from=d, "\forall"', shift right=5] \\
\rset^{(\C \x \D)^\op}
\end{tikzcd}
\]
where the rules are more like
\[
\erule
{\Delta, \nu : \C ; \Gamma^w \prov P : \rtype}
{\Delta; \Gamma \prov \forall \nu . P : \rtype}
\qquad
\erule
{\Delta, \nu : \C ; \Gamma^w \prov e  : P}
{ \Delta; \Gamma \prov \lambda \nu . e : \forall \nu . P }
\]
\[
\erule
{ \Delta; \Gamma \prov M : \forall \nu . P }
{\Delta, \nu : \C ; \Gamma^w \prov M[\nu]  : P}
\]
\[
\erule
{\Delta; \Gamma \prov S : \rspan}
{\Delta, \nu : \C ; \Gamma^w \prov S \star \nu : \rtype}
\qquad
\erule
{\Delta, \nu : \C ; \Gamma \prov e  : S \star \nu}
{\Delta; \Gamma \prov [c/\nu] e  : X_c}
\]
\[
\erule
{\Delta; \Gamma \prov M_c : X_c \qquad f_m(M_d) \equiv M_c  }
{\Delta,\nu : \C ; \Gamma \prov (M_c) \star \nu : S \star \nu}
\qquad
\erule
{}
{  f_m([d/\nu]e) \equiv [c/\nu]e  }
\]

\section{Thinking About The Cube Category}
Suppose $\square$ is, equvialently:
\begin{itemize}
\item the free cartesian category on
\[\begin{tikzcd}
  \top \ar[r, shift left]\ar[r, shift right] & \ii
\end{tikzcd}\]
\item the category of contexts and substitutions for
\[\begin{tabular}{rccl}
  Contexts&$\Gamma, \Delta$&$::=$&$\cdot \celse \Gamma, \nu : \ii$\\
  Substitutions&$\theta$&$::=$&$\cdot \celse \theta[M/\nu]$\\
  Terms&$M$&$::=$&$\nu \celse \ep 1 \celse \ep 2$\\
\end{tabular}\]
\[
\erule
{\Gamma \prov \theta: \Delta \qquad \Gamma \prov M : \ii}
{\Gamma \prov \theta[M/\nu] : (\Delta, \nu : \ii)}
\]
\item the opposite of the Kleisli category whose objects
are finite sets $n$, and whose morphisms are
partial functions $m \to n + 2$.
\end{itemize}
I want to be very clear about what a morphism $h : A \to y\ii \in \hat \square$ can look like.
Given such a thing, I can extract from it the information arising from some pullbacks:
\[
\begin{tikzcd}
  h^1 \ar[r]\ar[d]\pbck & y\top\ar[d, "{y[\ep 1 / \nu]}"]\\
  A \ar[r, "h"'] & y\ii
\end{tikzcd}
\qquad
\begin{tikzcd}
  h^2 \ar[r]\ar[d]\pbck & y\top\ar[d, "{y[\ep 2 / \nu]}"]\\
  A \ar[r, "h"'] & y\ii
\end{tikzcd}
\]
and I should be able to also think about how there's a weakening substitution
$\hat\square / y\top \to \hat\square / y\ii$  arising from pullback along
 $\cdot : \ii \to \top$ --- but pullback along a morphism into the terminal object
is just product.
\[
\begin{tikzcd}
  B \x y\ii \ar[r]\ar[d]\pbck & y\ii\ar[d, "!"]\\
  B \ar[r] & \top
\end{tikzcd}
\]
So the right adjoint to this $\hat\square / y\top \to \hat\square / y\ii$
(which is guaranteed to exist because presheaf categories are lccc)
would be $(\nu : y\ii) \to  B : \hat\square  / y \top$.

Let's bump up the generality slightly to include a context.
We suppose we have $A : (\Gamma, \nu:\ii, x : A) \to (\Gamma, \nu:\ii)$.
Then the pullback of this against a substitution for a constant
\[
\begin{tikzcd}
  \Gamma,[\ep k/\nu]A \ar[r]\ar[d]\pbck & \Gamma\ar[d, "{[\ep k / \nu]}"]\\
  \Gamma,\ii,A \ar[r, "A"'] & \Gamma,\ii
\end{tikzcd}
\]
should still work.
And then pullback against the weakening substitution
\[
\begin{tikzcd}
  \Gamma,\ii, A \ar[r, "{A^w}"]\ar[d]\pbck & \Gamma,\ii\ar[d, "{w}"]\\
  \Gamma,A \ar[r, "A"'] & \Gamma
\end{tikzcd}
\]
should have a right adjoint
\[
\begin{tikzcd}
  \Gamma,\ii, A \ar[r, "A"]\ar[d, mapsto] & \Gamma,\ii\ar[d, mapsto]\\
  \Gamma, \Pi A \ar[r, "\Pi A"'] & \Gamma
\end{tikzcd}
\]
in which we get a correspondence
\[
\begin{tikzcd}
  \Gamma,\ii,A \ar[r, "A^w"] \ar[d] & \Gamma, \ii\\
\Gamma,\ii, B \ar[ur, "B"']
\end{tikzcd}
\longleftrightarrow
\begin{tikzcd}
  \Gamma,A \ar[r, "A"] \ar[d] & \Gamma\\
\Gamma, \Pi B \ar[ur, "\Pi B"']
\end{tikzcd}
\]
So concretely, what is going on with this?

\vfil\eject

\section{Grothendieck Thoughts}
Say we have some $\C$ and $F :\C \to \rcat$. The idea is that objects of $\C$
are contexts $\Delta$ and morphisms $\Delta_1 \to \Delta_2$ are valid substitutions
among such contexts.
I'll conflate an object $\Delta$ of $\C$ with the category $F\Delta$, and
a morphism $\theta : \Delta_1 \to \Delta_2$ of $\C$ with the functor
$F\theta : F\Delta_1 \to F\Delta_2$.


The semantics of
\[ \Delta ; \Gamma \prov A : \rtype \]
Is supposed to be that for every $\delta\in\Delta$, we have
\[ \Gamma_\delta : \rtype \qquad  A_\delta : (\gamma : \Gamma_\delta) \to \rtype \]
and for every $\phi : \delta_1 \to \delta_2 \in \Delta $ we have
\[ \Gamma_\phi : \Gamma_{\delta_1} \to \Gamma_{\delta_2} \]
\[ A_\phi : (\gamma : \Gamma_{\delta_1}) \to A_{\delta_1}(\gamma) \to A_{\delta_2}(\Gamma_\phi(\gamma)) \]
But also I want to support transport across $\Delta$s, not just within $\Delta$s.
This isn't essential for just making a type theory work {\em at all}, but it is
essential for achieving internalized parametricity: for what that requires is that
a lambda sitting in an empty $\Delta$ already anticipates extensions to $\Delta$.
Something of type $(A : \U) \to \El A \to \El A$ should accept an $A : \U$
that is over $\nu : \sharp 2$, not just a $\U$ in the empty context.

So I essentially want to pick out the grothendieck construction $\G$ of $F$.

An object of $\G$ is a pair $(\Delta, \delta)$ where $\delta \in \Delta$.
A morphism $(\Delta_1, \delta_1) \to (\Delta_2, \delta_2)$ in $\G$ is
a pair $(\theta, \phi)$ such that $\theta : \Delta_1 \to \Delta_2 $ and
$\phi : \theta\delta_1 \to \delta_2$.

Then can I say that the semantics has type
\[ \Gamma_G : \rtype \qquad  A_G : (\gamma : \Gamma_G) \to \rtype \]
\[ \Gamma_g : \Gamma_{G_1} \to \Gamma_{G_2} \]
\[ A_g : (\gamma : \Gamma_{G_1}) \to A_{G_1}(\gamma) \to A_{G_2}(\Gamma_g(\gamma)) \]
? No, this seems wrong; types are defined {\em relative to a particular $\Delta$} even
if they do anticipate all extensions to $\Delta$.
\end{document}
