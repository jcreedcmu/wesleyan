\documentclass{article}
\usepackage{amssymb}
\input{theorem}

\usepackage{tikz}
\usepackage{tikz-cd}
\def\O{\mathcal{O}}
\def\rid{\mathsf{id}}
\def\int{\square}
\def\bd{\partial}
\def\prov{\vdash}
\def\prequiv{\dashv\vdash}
\def\imp{\Rightarrow}
\def\cqed{\hskip2mm{\vrule width .5em height .5em depth 0em}} % at the end of a |P.
\def\o{\circ}
\def\C{\mathbf{C}}
\def\X{\mathbf{X}}
\def\x{\times}
\def\st{\mathrel|}
\def\rset{\mathsf{Set}}
\def\op{\mathsf{op}}
\def\P{\mathbf{P}}
\def\dash{\hbox{---}}
\begin{document}
\tikzset{
   commutative diagrams/.cd,
   arrow style=tikz,
   diagrams={>=stealth}}

\section{A Little (Topo)logical Lemma}

\begin{lemma}
Let $U(i), C(i), V$ be propositions.
If
\begin{enumerate}
\item \(C(i), V \prov U(i)\)
\item \( C(i), U(i) \prov V \)
\item \(\prov \exists i.C(i)\)
\end{enumerate}
then
\[V \prequiv \forall i . C(i) \imp U(i) \]
\end{lemma}

\begin{proof}
The forward direction  follows from $(1)$.
Backwards, use $(3)$ to produce $i$ be given such that $C(i)$.
By assumption $\forall i . C(i) \imp U(i)$, also $U(i)$. Thus $(2)$ yields $V$.
\cqed
\end{proof}


\begin{lemma}
Suppose we have a topological space $X$ with $V \subseteq X$ and a
finite collection of closed sets $C_1,\ldots,C_n \subseteq X$
and open sets $U_1, \ldots, U_n \subseteq X$ such that
\[\bigcup_i C_i = X\]
\[V \cap C_i = U_i \cap C_i\]
Then $V$ is open.
\end{lemma}

\begin{proof}
By previous lemma,
\[V = \bigcap_i (\bar C_i \cup U_i)\]
Observe that $V$ is open because $C_i$ is closed and $n$ is finite.
\cqed
\end{proof}

\begin{lemma}
Suppose we have $X$ with $V \subseteq X$ and a finite closed cover $C_1,\ldots,C_n$ as before.
Suppose $Y$ is another topological space, and $\pi : X \to Y$ a function, not necessarily
continuous. Let $\nu_i : C_i \to X$ be the inclusion of the subset topology on $C_i$
into the space $X$. If $\pi \o \nu_i$ is continuous for all $i$, then $\pi$ is continuous.
\end{lemma}

\begin{proof}
Let an open subset $U\subseteq Y$ be given.
Since $\pi \o \nu_i$ is continuous, we know that  $\nu_i^{-1}(\pi^{-1}(U)) = \pi^{-1}(U) \cap C_i $ is open
in the subset topology of $C_i$. Which means that for each $i$ there exists an open set $U_i$ of $X$
such that $\pi^{-1}(U) \cap C_i = U_i \cap C_i$. By previous lemma, $\pi^{-1}(U)$ is open.
\cqed
\end{proof}

\section{Textures}

A {\em texture} $\X$ in $\C$ is a subcategory $\X$ of $\C$, together with $J$ a Grothendieck topology on $\X$.
An {\em $\X$-structure} on an object $C \in \C$ is a subset $\sigma$ of the `maximal $\X$-sieve on $C$,'
by which we mean
$\{ \pi : X \to C \st X \in \X \}$.  Note that $C$ doesn't necessarily belong to $\X$.
When $f \in \sigma$ we say $f$ is `smooth' according to $\sigma$.
We require
\begin{enumerate}
\item (\textbf{Restriction}) If $\pi : X\to C$ is smooth, and $f : Y \to X \in \X$, then $\pi \o f : Y \to C$ is smooth.
\item (\textbf{Amalgamation}) If $\pi : X\to C$ is a function, and $S$ is a $J$-covering sieve on $X$,
and $\pi \o f : Y \to C$ is smooth for every $f : Y \to X \in S$, then $\pi$ is smooth.
\end{enumerate}

\subsection{The Continuity Texture}

Here's an example of a texture. Set $\C = \X = \mathbf{Top}$.
If $S$ is a sieve on a topological space $X$, say that a not-necessarily-open subset $V \subseteq X$
is {\em $S$-open} if for any $f : Y \to X \in S$ we have $f^{-1}(V)$ is an open subset of $Y$.

We give a grothendieck topology $J$ by saying a sieve $S$ on a space $X$ is covering
when every $V \subseteq X$ that is $S$-open is in fact open.

Let's check this is a Grothendieck topology.

\begin{enumerate}
\item The maximal sieve $M_X$ should cover $X$. If a subset $V$ is $M_X$-open, then
also we can observe $\rid^{-1}(V)$ is open, since $\rid_X \in M_X$. So the maximal sieve counts as covering.
\item Intersections of covering sieves should cover. Let $S, S'$ be given.
The condition `$S$ covers and $S'$ covers' should be the same
as `$S \cap S'$ covers'.
The former is

\[ (\O_S \subseteq \O)\land(\O_{S'} \subseteq \O) \]
and the latter
\[ \O_{S \cap S'} \subseteq \O \]
So I want to check that
\[ \O_{S \cap S'} = \O_{S} \cup  \O_{S'}\]
i.e.
\[ \forall f \in S \cap S' . \ldots \prequiv (\forall f \in {S} . \ldots) \cup  (\forall f \in {S'} . \ldots)\]

Suppose we know that $S \cap S'$ is covering. Then surely $S$ is covering and $S'$ covering just by monotonicity.
The bigger an $S$ is, the harder it is for $f$ to be $S$-open, and the easier it is for $S$ to be covering.
Suppose $S$ and $S'$ are both covering. We want to show that $S \cap S'$ is covering. That is,
for every $f \in S \cap S'$ that if $f^{-1}(V)$ is open, then $V$ is open.

Hm, maybe this isn't a Grothendieck topology at all, but some weaker notion of covering.
\end{enumerate}

\section{Chu Thoughts}

What is a directed graph? It's a set $X$ together with, for each map $2 \to X$,
a set of edges.

What is a topological space? It's a set $X$ together with, for each map $X \to 2$,
a bit of information saying whether that subset of $X$ counts as open, subject to some axioms.

What is a category? It's a directed graph, subject to some axioms. Though this isn't quite
as true as I'd like --- a functor is not just a graph homomorphism.

What can I say about the axioms that a topological space is supposed to satisfy?
Let me generalize to a proof-relevant relation: so $\O(f)$ is the {\em set} of open sets
corresponding to the subset $f : X \to 2$ of $X$. I expect there to be operations
\[ \O(f) \x \O(g) \to \O(f \cap g)\]
\[ (\Pi i . \O(f_i)) \to \bigcup_i \O(f_i)\]
where I am punning on functions as subsets --- I really mean
\[ \O(f) \x \O(g) \to \O(\lambda x . f(x) \land g(x))\]
\[ (\Pi i . \O(f_i)) \to \O(\lambda x . \bigvee_i f_i(x))\]
where
\[ \land : 2 \x 2 \to 2 \]
\[ \bigvee : 2^I \to 2 \]
are structure that I know to exist on $2 = \{\bot, \top\}$.
I can sort of think as $\bigvee$ as parametrized on the index set $I$.

\subsection{Defining}

Fix a category $\C$ and an object $\Omega$. An {\em operation} is
a map $\omega : \Omega^I \to \Omega$. An object of the spatial category
is an object $C\in \C$ together with a relation $R :\hom(C, \Omega) \to \rset$.
If $\omega$ is an operation, then we require that for every $I$-indexed
family of maps $f_i \in \hom(C, \Omega)$, that there is a function
\[ m_\omega : (\Pi i . R (f_i)) \to R (\omega \o \langle f_i \rangle )\]
A morphism from $(C, R)$ to $(C', R')$ is a morphism $c : C \to C'\in \C$
with a map $(f : C' \to \Omega) \to R'(f) \to R(f \o c)$.

The topological example above sets $\C = \rset$ and $\Omega = 2$,
and has an operation $\land$ for $I = 2$, and a family of operations
$\bigvee$ one for each possible set $I$.
\subsection{Dualizing}
Suppose we take $\C = \rset^\op$
I guess I could ask for operations $\omega : \Omega \to \Omega \cdot I$.
But the evident map $2 \to 4$ that takes $0$ to $0$ and $1$ to $3$ would
give us a `composition operation' that wouldn't require the intermediate
points to match up.

So maybe an operation is a set $S$ together with maps $\Omega \to S$
for each of the inputs, (in other words, a map $\Omega \cdot I \to S$)
and a map $\Omega \to S$ for the output. The thing for categorical
composition would take $4$ to $3$ by collapsing the middle two, and
$2$ to $3$ by missing the middle.

To give names: An $I$-ary operation is an object $S \in \C$, and maps
$\iota_i : \Omega \to S$ and $\omega : \Omega \to S$. If
$R : \hom(\Omega, C) \to \rset$ is the dual relation, the requirement it induces
is that for every  $s : \hom(S , C)$ there's a map
\[ m_{\iota \omega s} : (\Pi i . R (s \o \iota_i)) \to R (s \o \omega )\]
Back to the original orientation of arrows, this would
ask for $\iota_i : S \to \Omega$ and $\omega : S \to \Omega$ and $s : \hom(C, S)$ such that
(with $R$ being $\hom(C, \Omega) \to \rset$)
\[ m_{\iota \omega s} : (\Pi i . R ( \iota_i \o s)) \to R ( \omega \o s)\]
Let's try plugging in $S = 2 \x 2$ and $\iota_1 = \pi_1$ and $\iota_2 = \pi_2$.
and $\omega = \land$. Then a choice of $s : C \to 2 \x 2$ is the same thing
as an independent choice of $f : C \to 2$ and $g : C \to 2$.

Same thing if I plug in $S = 2^I$ and $\iota_i = \pi_i : 2^I \to 2$ and
$\omega = \bigvee$.

\subsection{Summarizing}
Assume we're given $\C$ and $\Omega\in \C$ and a collection of operations
\[\O_j = (I_j ,  S_j, \iota_{ji} : \Omega \to S_j  , \omega_j : \Omega \to S_j )\]
We build a category $\C[\Omega]$ by saying an object is $C\in \C$ plus a relation $R : \hom(\Omega, C) \to \rset$,
plus for every operation $\O_j$ and we have a map
\[ m_{j} : (s :  S_j \to C) \to (( i : I_j) \to  R (s \o \iota_{ji} )) \to R ( s\o\omega_j )\]
A morphism from $(C, R, m) \to (C', R', m')$ needs to provide
\[ f : C \to C' \in \C \qquad \rho_{(g : \Omega \to C)} :   R(g) \to R'(f \o g) \]
such that
\[
 \begin{tikzcd}
( i : I_j) \to R(s \iota_{ji}) \ar[d, "{\lambda \kappa i .\rho_{s\iota_{ji}}(\kappa(i))}"']\ar[r,"m_j(s)"] & R(s\omega_j)\ar[d,"\rho_{s\omega_j}"]\\[1em]
( i : I_j) \to R'(f s \iota_{ji}) \ar[r,"m_j(fs)" swap] & R'(fs\omega_j)
 \end{tikzcd}
\]

\subsection{Using a Variety of Probes}
Can we say that we're given $\C$ and $\P = \{\Omega \ldots \}$, and an operation looks like
$\O = (S, \iota: U \to S, \omega : T \to S)$
where $S, T, U \in \{ \Omega, \ldots \}$.

Maybe $\P$ has (co)product structure as a category? To make an object, we pick a $C\in \C$,
and for every $\Omega \in \P$, we demand
a relation $R_\Omega: \hom(\Omega, C) \to \rset$.

For every operation we have a map
\[ m : (s :  S \to C) \to   R_U (s  \iota)  \to R_T ( s\omega )\]
a morphism  $(C, R_\Omega, m) \to (C', R'_\Omega, m')$ needs to provide
\[ f : C \to C' \in \C \qquad \rho_{(g : \Omega \to C)} :   R_\Omega(g) \to R'_\Omega(f \o g) \]
such that
\[
 \begin{tikzcd}
 R_U(s \iota) \ar[d, "{\rho_{s\iota}}"']\ar[r,"m(s)"] & R_T(s\omega)\ar[d,"\rho_{s\omega}"]\\[1em]
 R'_U(f s \iota) \ar[r,"m(fs)" swap] & R'_T(fs\omega)
 \end{tikzcd}
\]

\subsubsection{What To Say About Products}
In the topological case, the probe-shape
$\hom(C, \Omega^I)$ is the same as $\hom(C, \Omega)^I$,
so we can ask that $R_{\Omega^I}$ is the conjunction of $R_\Omega$ at the individual putatively-open sets.
Let's just talk about the binary case first: if $P, Q \in \P$, then
$R_{P \x Q} : \hom(C, P \x Q) \to \rset$ is supposed to be the conjunction of
$R_{P} : \hom(C, P) \to \rset$  and $R_{Q} : \hom(C, Q) \to \rset$ .
That is,
\[ R_{P\x Q}\langle f, g\rangle \cong  R_P f \x R_Q g  \]
That product on the left is inside the category $\P$, the one on the right is in $\rset$.
If I'm back in the `graph-theoretic' orientation, I'm going to be talking about copairing.
Suppose $f_i : \Omega_i \to C$. Then I demand
\[R_{\coprod_i \Omega_i} [f_i] \cong \prod_i R_{\Omega_i} f_i\]
Actually, this makes sense as a general colimits-become-limits kind of thing.
Since $3$ can be construed as the colimit of two copies of $2$, we should find that
$R_3$ is the homset-like operation, that given 3 points, yields the pairs of composable morphisms
via a pullback.

\subsection{Can I Just Talk About Presheaves}
Say we're given $\C$ and $\Omega$ again. An operation
looks like $\O = (S, \iota: U \to S, \omega : T \to S)$ but in this case
$S, T, U$ belong to $\hat \C$.
The basic data we have is $R : \hom(\Omega, C) \to \rset$, but from that
we want to be able to sort of automatically derive what
$R_S : \hom_{\hat \C}(S, yC) \to \rset$ is generally, trading on the intuition that an element
of $\hat \C$ is like a colimit.

Or can I just ask for all $R_S : \hom_{\hat \C}(S, yC) \to \rset$,
with equations like
\[(f : [S, yC])(g: [T, yC]) \to R_{S+T} [f, g] = R_S f \x R_T g\]

No, this isn't making much sense.

\subsection{Pushouts?}
Let's say we have $\C$ and $\Omega$. A {\em boundary} is a pushout diagram
where all the sides are $\Omega$. We get to pick an index set $I$ and a base
$B_0$ and some maps $b_i : B_0 \to \Omega$ and we take the pushout $B$, so we
have a bunch of maps $\iota_i : \Omega \to B$.

An operation is $\O = (S, \iota: U \to S, \omega : T \to S)$ where $S, T, U$ are boundaries.
We ask for $R_\Omega : \hom(\Omega, C) \to \rset$. For any boundary $B$ we should
be able to derive what $R_B : \hom(B, C) \to \rset$ is. Let a map $b : B \to C$ be given.
Then $b \o \iota_i : \Omega \to C$ and $R_\Omega(b \o \iota_i)$ is a set.
We set simply
\[R_B(b) = \prod_i R_\Omega(b \o \iota_i)\]
I think.

For every operation we have a map
\[ m : (s :  S \to C) \to  \prod_i R_\Omega( s \o \iota \o u_i)  \to \prod_i R_\Omega ( s \o \omega \o t_i)\]
eh this is more of a mess than it's worth.

\end{document}
