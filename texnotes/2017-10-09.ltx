\documentclass{article}
\input{theorem}
\input{prooftree}
\usepackage{stmaryrd}
\input{linear}
\def\erule#1#2{\begin{prooftree}#1\justifies #2\end{prooftree}}
\def\lpar{\bindnasrepma}
\def\lamp{\binampersand}
\def\bpush{\mathbf{push}}
\newarrow {Equiv} =====
\def\FinSet{\mathbf{FinSet}}
\def\x{\times}
\def\o{\comp}
\def\ups#1{#1^G}
\def\dns#1{#1^B}
\def\rsn{\ \mathsf{sn}}
\def\rx{\mapsto}
\def\wat{{@}}
\def\sem#1{[\![#1]\!]}
\def\cn{{:}}
\def\rtype{\mathrm{type}}
\def\rdom{\mathrm{dom}}
\def\rset{\mathbf{Set}}
\def\rcat{\mathbf{Cat}}
\def\rflat{\mathbf{Flat}}
\def\rid{\mathrm{id}}
\def\C{\mathbf{C}}
\def\E{\mathbf{E}}
\def\T{\mathbf{T}}
\def\B{\mathbf{B}}
\def\F{\mathbb{F}}
\def\H{\mathbf{H}}
\def\pair#1#2{\langle#1,#2\rangle}
\def\tri{\triangleright}
\def\o{\circ}
\def\rctx{\,\mathrm{ctx}}
\usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
\def\also#1{\ \textcolor{blue}{\celse #1}}
\usepackage{tikz}
\usepackage{tikz-cd}
\newcounter{nodemaker}
\setcounter{nodemaker}{0}
\def\twocell#1#2{%
  \global\edef\mynodeone{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \global\edef\mynodetwo{twocell\arabic{nodemaker}}%
  \stepcounter{nodemaker}%
  \ar[#1,phantom,shift left=3,""{name=\mynodeone}]%
  \ar[#1,phantom,shift right=3,""'{name=\mynodetwo}]%
  \ar[Rightarrow,#2,from=\mynodeone,to=\mynodetwo]%
}
\def\maps{\ar[dd,mapsto,shorten <=2em, shorten >=2em]}
\author{Jason Reed}
\begin{document}

\tikzset{
   commutative diagrams/.cd,
   arrow style=tikz,
   diagrams={>=stealth}}
% got this from
% https://tex.stackexchange.com/questions/169512/tikz-style-arrow-tips-missing-when-using-tikz-cd-crossing-over
% ???

\section{Easy Fibration Facts}
\begin{lemma}
If $f$ is an iso, (with inverse, say, $f^{-1}$) then
\[
 \begin{tikzcd}
A \ar[d,mapsto]\ar[r,"f"] & B\ar[d,mapsto]\\
pA \ar[r,"pf" swap] & pB\\
 \end{tikzcd}
\]
is cartesian.
\end{lemma}

\begin{proof}
Let $g, k$ be given in
\[
 \begin{tikzcd}
X \ar[rd, "h" swap]\ar[rrd, "g"]\maps\\
&A \maps\ar[r,"f" swap] &[4em] B\maps\\
pX\ar[rd, "k" swap]\ar[rrd, "{pf \o k}"]\\
&pA \ar[r,"pf" swap] & pB\\
 \end{tikzcd}
\]
such that $pg = pf \o k$. We must find a unique $h$ over $k$ such that $fh = g$.
But this must be $h = f^{-1} g$, and indeed can be, for we have
\[p(f^{-1} g) = (pf^{-1})(pg) = (pf^{-1})(pf) k = k\]
\cqed
\end{proof}

\begin{lemma}
Any cartesian lifting of an iso is iso.
\end{lemma}

\begin{proof}
Start with
\[
 \begin{tikzcd}
A \ar[d,mapsto]\ar[r,"f"] & B\ar[d,mapsto]\\
pA \ar[r,"g" swap] & pB\\
 \end{tikzcd}
\]
and assume $g$ has an inverse $g^{-1}$. The inverse of $f$ is found by
\[
 \begin{tikzcd}
B \ar[rd, "f^{-1}" swap]\ar[rrd, equals]\maps\\
&A \maps\ar[r,"f" swap] &[4em] B\maps\\
pB\ar[rd, "{g^{-1}}" swap]\ar[rrd, equals]\\
&pA \ar[r,"g" swap] & pB\\
 \end{tikzcd}
\]

By two-pullback lemma, this means $f^{-1}$ is a cartesian lift of $g^{-1}$. So we can
repeat the argument to demonstrate that $f^{-1}$ has a right {\em and} left
inverse, so they must be equal, hence $f$ is an iso.

\cqed
\end{proof}

\begin{lemma}
Any cartesian lifting is unique up to isomorphism.
\end{lemma}

\begin{proof}
\[
 \begin{tikzcd}
A_1 \ar[rd, dotted, shift right=0.5em]\ar[from=rd, dotted]\ar[rrd, "{f_1}"]\maps\\
&A_2 \maps\ar[r,"{f_2}" swap] &[4em] B\maps\\
pA\ar[rd, equal]\ar[rrd, "f"]\\
&pA \ar[r,"f" swap] & pB\\
 \end{tikzcd}
\]
Suppose $f_1$ and $f_2$ are cartesian over $f$. Then we get arrows back and forth between
$A_1$ and $A_2$ that necessarily compose to the identity.
\cqed
\end{proof}
\begin{lemma}
The composition of two cartesian morphisms is again cartesian.
\end{lemma}

\begin{proof}
Two-pullback lemma.
\cqed
\end{proof}


\section{Relations via Bifibrations}
Suppose we have a bifibration $p : \E \to \B$ that strictly preserves a choice
of finite products on each category.
We write the bifibration structure like this: if $R\in \E$,
and $f : X \to pR$ is an arrow downstairs, then $\pi_f : f^* R \to R$
is the arrow guaranteed by the fibration structure. If $g : pR \to Y$
is an arrow downstairs, then $\iota_g : R \to \Sigma_g R$ is the arrow guaranteed
by the opfibration structure.

What's the identity relation on an object $B\in \B$? It's constructed like so:
\[
 \begin{tikzcd}
\Sigma_\delta \pi^* \ar[d, mapsto] 1 & \ar[l] \pi^* 1 \ar[r] \ar[d, mapsto]
 & 1 \ar[d, mapsto] \\
B\x B & B \ar[r, "\pi" swap] \ar[l, "\delta"] & 1
 \end{tikzcd}
\]
What's the composite of $R \mapsto A \x B$ and $S \mapsto B \x C$? First
we form $R \x S \mapsto (A \x B) \x (B \x C)$, then do
\[
 \begin{tikzcd}
\Sigma_\pi \delta^* (R \x S) \ar[d, mapsto]  & \ar[l] \delta^* (R\x S) \ar[r] \ar[d, mapsto]  & R\x S \ar[d, mapsto] \\
A \x C &  \ar[l, "\pi" ] A \x B \x C \ar[r, "\delta" swap] & A \x B \x B \x C
 \end{tikzcd}
\]



In order to have a well-behaved category of such bifibrations, we want to also require
a specified full subcategory $\T \to \E$ of `trivial' objects of $\E$, such that
\begin{itemize}
\item If $T_1 \in \T$ and $T_1 \cong T_2 \in \E$, then $T_2 \in \T$.
\item $1 \in \T$, the product of any two trivial objects is trivial.
\item If $T\in \T$ and $f \in \B$, then $f^* T \in \T$.
\item Any opcartesian morphism whose codomain is in $\T$ is split epi.
\end{itemize}

 A morphism from one bifibration to another is a
morphism triple $(t, e, b)$ such that
\[
 \begin{tikzcd}
\T_1 \ar[r, "t"]\ar[d, hook]& \T_2\ar[d, hook]\\
\E_1 \ar[r,"e"]\ar[d]& \E_2\ar[d]\\
\B_1 \ar[r,"b" swap]& \B_2
 \end{tikzcd}
\]
commutes, $e$ preserves cartesian and opcartesian morphisms, and $b$ and $e$ both preserve products.
Let's call this the category of {\em relative cartesian bifibrations}.
 {\color{red} I'm just using the word cartesian to mean `has/preserves
   products', but there is apparently already a developed notion of
   cartesian fibration which seems to mean something totally else.}
\section{Embedding Cat in RelCartBif}


I have a category $\C$ in mind, whose objects are $\C_0$ and whose
morphisms are $\C_1$, with domain and codomain
maps
\begin{tikzcd}[cramped] \C_1 \ar[r, "d_0", shift left] \ar[r, "d_1" swap, shift right] & \C_0 \end{tikzcd}.

Let's derive an RCB from it. We need to figure out $p : \E \to \B$ and a subcategory $\T$ of $\E$.
Let $\B$ be $(\Sets/{\C_0})^\op$, the free cartesian category on $\C_0$.
%% Observe that there is an inclusion $\iota$ of
%% objects of $\Sets/\C_1$ into objects of $\Sets/\C_0$,
%% by taking $\theta : Q \to \C_1$ to $(d\o \theta, c\o \theta) : Q + Q \to \C_0$.

\def\cmpr#1#2#3{{#1};{#2}\tri{#3}}
\def\mkc#1{\Delta_{#1}}

We're going to build $\E$ out of some syntactic expressions.
\[
\begin{tabular}{rc@{$\quad::=\quad$}l}
Expressions&$e$&$x\celse f(e)$\\
Equations&$E$&$\cdot \celse E, (x_1 =  f(x_2))$\\
Contexts&$\Gamma$&$\cdot \celse \Gamma, x : A$\\
Assignments&$\sigma$&$(\cdots  [e/x]\cdots)$\\
Comprehensions&$K$&$\cmpr \Gamma E \sigma$\\
\end{tabular}
\]
In the above, $f$ are morphisms in $\C_1$, and $A$ are objects in
$\C_0$. I'm eliding the typing rules for now because they are `mostly what
you'd expect'.

Suppose $B$ is a set $\{b_1, \ldots, b_n\}$.
If $\tau : B \to \C_0 \in \B$, then we
define $\mkc\tau$ to be the context $x_{b_1} : \tau(b_1), \ldots, x_{b_n} : \tau(b_n)$.
We can regard a morphism $\phi : \tau \to \tau'$ as a substitution $\mkc\tau \prov \phi : \mkc{\tau'}$.

\subsection{Defining the Total Category}
An object of the category $\E$ over $\tau$ is a $\cmpr \Gamma E \sigma$
such that $\Gamma \prov \sigma : \mkc\tau$.

%% For example
%% \[
%% \{(a, c) \st a \in A, b, b' \in B, c \in C, b = b', b = f(a), c = g(b')\}
%% \]


A morphism $(\cmpr \Gamma E \sigma) \to (\cmpr {\Gamma'}{E'}{\sigma'})$ over $\phi : \tau \to \tau'$
is a substitution $\theta$ such that
\[  \qquad \Gamma \prov \theta : \Gamma' \qquad
 \Gamma, E \prov \theta E' \qquad \Gamma, E \prov \sigma \o \phi = \theta \o \sigma' : \mkc{\tau'}\]

\subsection{Representing Composition}
Construct morphisms back and forth between different representations
of the composition
\[
a : A, b:B, b': B, c:C; b = b', b= f(a), c=g(b') \tri (a, c)
\]
\[
\alpha : A, \gamma : C ; \gamma = g(f(\alpha)) \tri (\alpha, \gamma)
\]
Back and forth in both directions $\phi$ is the identity.
Forward, we pick
\[\theta = [a/\alpha][c/\gamma]\]
and indeed
\[a : A, b:B, b': B, c:C; b = b', b= f(a), c=g(b') \prov c = g(f(a))\]
Backward, we pick
\[\theta = [\alpha/a][f(\alpha)/b][f(\alpha)/b'][\gamma/c]\]
and check that
\[\alpha : A, \gamma : C ; \gamma = g(f(\alpha)) \prov  f(\alpha) = f(\alpha), f(\alpha)= f(\alpha), \gamma=g(f(\alpha)) \]
\subsection{Fibration}
Let some $\phi : \tau' \to \tau$ be given, and a $\cmpr \Gamma E \sigma$ over $\tau$.
The reindexing is $ \cmpr{\Gamma,\mkc{\tau'}} { E, \sigma = \phi} {\rid_{\mkc{\tau'}}}$.
We need a morphism of this shape:
\[ (\cmpr{\Gamma,\mkc{\tau'}} { E, \sigma = \phi} {\rid_{\mkc{\tau'}}}) \to (\cmpr \Gamma E \sigma)\]
It's the weakening substitution $\Gamma, \mkc{\tau'} \prov \rid_\Gamma : \Gamma$.


\subsection{Opfibration}
Let some $\phi : \tau \to \tau'$ be given, and a $\cmpr \Gamma E \sigma$ over $\tau$.
The opreindexing is $\cmpr {\Gamma} {E} {\sigma \o \phi}$. The morphism
$\cmpr {\Gamma} {E} {\sigma} \to \cmpr {\Gamma} {E} {\sigma \o \phi}$ that we need arises
from setting $\theta = \rid_\Gamma$.

\subsection{Preserving Products}
It seems pretty clear that
$$\cmpr {\Gamma_1,\Gamma_2} {E_1,E_2} {\sigma_1,\sigma_2}$$
is the product of $\cmpr {\Gamma_1} {E_1} {\sigma_1}$
and $\cmpr {\Gamma_2} {E_2} {\sigma_2}$.

\subsection{Trivial Subcategory}
An object $T\in \E$ lives in $\T$ if it is isomorphic (in $\E$) to an object of the form
$\Gamma; \cdot \prov \rid_\Gamma$.

\subsection{Fullness of the Embedding}

\subsection{Faithfulness of the Embedding}

\section{Thoughts on Trivial Objects}

I formerly thought I should specify explicitly which objects in the
total category are trivial, i.e. behave like isomorphisms in the
codomain bifibration. Now I'm thinking I can just characterize them internally.

An object $Y \in \E$ over $B \in \B$ is {\em trivial} if for any $X\in \E$
 over $A \in \B$, and any $f : A \to B$, there's a unique arrow $X \to Y$ over $f$.
\[\begin{tikzcd}
X \ar[d,mapsto]\ar[r,dotted]&Y\ar[d,mapsto]\\
A \ar[r,"f" swap] &B
\end{tikzcd}\]
\begin{lemma}
The trivial objects of the codomain fibration are exactly the objects
of $\C^{\to}$ that are isomorphisms.
\end{lemma}

\begin{proof}
\[\begin{tikzcd}
X \ar[d, "x" swap]\ar[r,dotted, "{y^{-1}fx}"]&Y\ar[d, "y"]\\
A \ar[r,"f" swap] &B
\end{tikzcd}\]

\cqed
\end{proof}


\begin{lemma}
If $T_1$ is trivial and $T_1 \cong T_2 \in \E$, then $T_2$ is trivial.
\end{lemma}

\begin{proof}
\[\begin{tikzcd}
X \ar[r, dotted, "{\iota^{-1} k}"] \ar[d, mapsto] & T_2 \ar[d, mapsto]\ar[r, "\iota", double]&T_1\ar[d, mapsto]\\
A \ar[r, "f" swap] & B_2 \ar[r,"{p\iota}" swap, double] &B_1
\end{tikzcd}\]
where $k$ arises from
\[\begin{tikzcd}
X \ar[d, mapsto]\ar[r,dotted, "k"]&T_1\ar[d, mapsto]\\
A \ar[r,"p\iota \o f" swap] &B_1
\end{tikzcd}\]
We can reason that $p(\iota^{-1} k) = p\iota^{-1} \o pk = p\iota^{-1} \o p\iota \o f = f$.


\cqed
\end{proof}

\begin{lemma}
$1$ is trivial, and the product of any two trivial objects is trivial.
\end{lemma}

\begin{proof}
Let $R \mapsto A$ and $S \mapsto B$ be given. Presented with
\[\begin{tikzcd}
X \ar[d, mapsto]\ar[r,dotted]&R \x S\ar[d, mapsto]\\
E \ar[r,"g" swap] &A \times B
\end{tikzcd}\]
We can split up $g$ into its components, lift to $X \to R$ and $X \to
S$, and pair together.
\cqed
\end{proof}

\begin{lemma}
If $Y$ is trivial and $g \in \B$, then $f^* Y$ is trivial.
\end{lemma}

\begin{proof}
\[\begin{tikzcd}
X \ar[r, dotted] \ar[rr, "k", bend left] \ar[d, mapsto]& f^*Y \ar[d, mapsto]\ar[r,"{\pi_g}"]&Y\ar[d, mapsto]\\
A \ar[r, "f" swap]& B\ar[r,"g" swap] &C
\end{tikzcd}\]
From the fact that $Y$ is trivial, there is a unique $k$ over $gf$.
From the fact that $\pi_g$ is cartesian, we can fill in $X \to f^*Y$.
\cqed
\end{proof}

%% \begin{lemma}
%% Any opcartesian morphism whose codomain is trivial is split epi.
%% \end{lemma}

%% \begin{proof}
%% Well, the way I demonstrate this in the codomain bifibration is like so
%% \[\begin{tikzcd}
%%   Y \ar[from=dd, bend left=70, "i"] \ar[d, "y" swap]\ar[from=r,equal]&Y\ar[dd, "y"]
%% & \ar[from=l, equal] Y \ar[dd, "gy"]\\
%% C\ar[d,"g" swap]\\
%%  B\ar[d,mapsto]\ar[from=r,"g", two heads] &C\ar[d,mapsto]&\ar[l,"yi", tail] B\ar[d,mapsto]\\
%%  B\ar[from=r,"g", two heads] &C&\ar[l,"yi", tail] B\\
%% \end{tikzcd}\]
%% but I don't see how to generalize it. Let me try more directly:
%% \[\begin{tikzcd}
%% Y\maps\\
%% & \Sigma_f Y \ar[ul] \maps\ar[from=r,"{k}"]&Y\ar[ull]\maps\\
%% C\\
%% & B\ar[from=r,"g"] \ar[ul] &C\ar[ull]
%% \end{tikzcd}\]
%% \cqed
%% \end{proof}



\section{Fancy Diagram That Is Nonetheless Wrong I Think}
\[
\begin{tikzcd}[sep=2.25em]
Q+Q \ar[rr, "f"] \ar[drr, "{(d_0q, d_1q)}" description] && F \ar[from=rr, "c" swap] \ar[d]&& C \ar[dll]\\
 && \C_0 \ar[from=ddr, "d_0" description, pos=0.8]\\
&Q'+Q' \ar[rr, crossing over, "f'" description] \ar[drr, "m_Q" description]  \ar[uul]&& F' \ar[d, "m_F" description] \ar[uul, crossing over, "e_F" description, pos=0.25] && C' \ar[ll, "c'" description] \ar[dll, "m_C" description] \ar[uul, "e_C" swap]\\
 &&& \C_1 \ar[ddr, "d_1" description, pos=0.2]\\
&&Q'+Q' \ar[rr, crossing over, "f'" description] \ar[drr, "{(d_0q', d_1q')}" description] \ar[from=uul, equal] && F' \ar[from=rr, "c'" description]
 \ar[from=uul, crossing over, equal]\ar[d]&& C' \ar[dll]\ar[from=uul, equal]\\
&& && \C_0\\
\end{tikzcd}
\]

\end{document}

%% \[
%% \{(a, c) \st a \in A, b, b' \in B, c \in C, b = b', b = f(a), c = g(b')\}
%% \]
%% \[
%% \{(a, c) \st a \in A, c \in C,  c = g(f(a))\}
%% \]


Formally, objects of $\E$ are spans
\begin{tikzcd}[cramped,sep=small] \iota \theta \ar[from=r] & F & C \ar[from=l, swap] \end{tikzcd}
 in $\B$. The projection functor $p : \B \to \E$ takes
such a span to its right leg $C$.
In our example, this looks like a $\Sets/\C_0$-diagram
\[
\begin{tikzcd}
{(f:a\mapsto b)\atop(g : b' \mapsto c)} \ar[dr, mapsto] \ar[r, mapsto] & (a, b, c) \ar[d, mapsto]\ar[from=r, mapsto] & (a, c) \ar[dl] \\
& (A, B, C)
\end{tikzcd}
\]


\[
\begin{tikzcd}
  Q \ar[r,"{\binl}"] \ar[d,"{\binr}" swap]  \twocell{dr}{"q" swap} & Q+Q \ar[d, "f"] \\
  Q+Q \ar[r, "f" swap] & F
\end{tikzcd}
\]
\[
\begin{tikzcd}
  Q \ar[r,"{\binl}"] \ar[d,"q" swap]   & Q+Q \ar[d, "{(d_0q, d_1q)}"] \\
\C_1 \ar[r,"d_0" swap]& \C_0
\end{tikzcd}
\]
\[
\begin{tikzcd}
Q\ar[rr, "\binl"]\ar[dr, "q" description]\ar[dd,"\binr" swap]&&Q+Q\ar[dr, "{(d_0q, d_1q)}"]\\
&\C_1\ar[rr, "{d_0}", pos=0.2]\ar[dd, "{d_1}" swap, pos=0.2]&&\C_0\ar[dd, equal]\\
Q+Q\ar[rr, crossing over, "f" swap, pos=0.8]\ar[dr,"{(d_0q, d_1q)}" swap]&&F\ar[from=uu, crossing over, "f", pos=0.8]\ar[dr]\\
&\C_0\ar[rr, equal]&&\C_0\\
\end{tikzcd}
\]


What's a morphism in $\E$? Some kind of mapping of renamings of elements in the output tuple. So a morphism
from $\iota\theta \leftarrow F \to C$ to $\iota\theta' \leftarrow F' \to C'$ looks at first glance
like an arrow $e : F \to F'$ in $(\Sets/\C_0)^\op$ together with $m : F' \to \C_1$ in $\Sets$ such that
\[
\begin{tikzcd}
F \ar[d] \ar[from=r,"e" swap] & F' \ar[r,equal]\ar[d,"m",swap] & F' \ar[d]\\
\C_0 \ar[from=r,"d"] & \C_1 \ar[r,"c" swap]&\C_0
\end{tikzcd}
\]


\[
\begin{tikzcd}
{(f:a\mapsto b)\atop(g : b' \mapsto c)} \ar[dr, mapsto] \ar[r, mapsto] & (a, b, c) \ar[d, mapsto]\ar[from=r, mapsto] & (a, c) \ar[dl] \\
& (A, B, C)
\end{tikzcd}
\]

\[
\begin{tikzcd}
{(gf:a\mapsto c)} \ar[dr, mapsto] \ar[r, mapsto] & (a, c) \ar[d, mapsto]\ar[from=r, mapsto] & (a, c) \ar[dl] \\
& (A, C)
\end{tikzcd}
\]

%%%%%%%%%%%%%%%%%%%%%%

% These diagrams represent so far unsuccessful
% attempts at understanding why functions compose to functions:

%% \[
%% \begin{tikzcd}
%% \{(a,b,c) \st aRb, bSc\}\ar[rr, "\delta^*"]\ar[dr, "{\Sigma_\pi}" swap]\maps &&R \x S\ar[dr, "{\Sigma_\pi}"]\maps \\[1em]
%% &Q\ar[from=rr, "{\Sigma_\pi}", pos=0.8, crossing over]&&A \x B \ar[dd, equal]\\[1em]
%% A\x B \x C\ar[rr, "\delta", pos=0.8]\ar[dr,"\pi" swap]&&A\x B\x B\x C\ar[dr,"\pi"]\\[1em]
%% &A\ar[from=rr,"\pi"]\ar[from=uu, mapsto, crossing over, shorten >= 2em, shorten <= 2em]&&A \times B\\
%% \end{tikzcd}
%% \]

%% \[
%%  \begin{tikzcd}
%% R \x S \ar[from=rd, "f^{-1}"]\ar[from=rrd]\maps\\
%% &A\x B \maps\ar[from=r,"{\Sigma_\pi}"] &[4em] R\x S\maps\\
%% A\x B\x B\x C\ar[from=rd, "{g^{-1}}"]\ar[from=rrd]\\
%% &A\x B \ar[from=r,"\pi"] & A\x B\x B\x C\\
%%  \end{tikzcd}
%% \]
